
#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Процедура - Запись движений в реестр кадровых документов:
//
// Параметры:
//  Отказ			 - Булево	 - Признак ошибки;
//  РежимПроведения	 - Перечисление	 - Режим проведения документа;
//  Источник		 - Объект 	 - Источник записи;
//
Процедура инкРеестрКадровыхДокументов(Отказ, РежимПроведения, Источник) Экспорт

	Источник.Движения.инкРеестрКадровыхДокументов.Записывать = Истина;

	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Движение = Источник.Движения.инкРеестрКадровыхДокументов.Добавить();
	ЗаполнитьЗначенияСвойств(Движение,Источник); 
	Движение.КадровыйДокумент = Источник.Ссылка;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.инкБольничныйЛист") Тогда
		Движение.ДатаПриказа = Источник.БольничныйЛистДатаВыдачи;	
	КонецЕсли;
	
КонецПроцедуры	

// Процедура - Запись движений в регистр "Кадровая история сотрудников":
//
// Параметры:
//  Отказ			 - Булево	 - Признак ошибки;
//  РежимПроведения	 - Перечисление	 - Режим проведения документа;
//  Источник		 - Объект 	 - Источник записи;
//
Процедура инкКадроваяИсторияСотрудников(Отказ, РежимПроведения, Источник) Экспорт

	Если ТипЗнч(Источник) <> Тип("ДокументОбъект.инкПриемНаРаботу") И
		 ТипЗнч(Источник) <> Тип("ДокументОбъект.инкУвольнение") И
		 ТипЗнч(Источник) <> Тип("ДокументОбъект.инкКадровыйПеревод")
	Тогда
		Возврат;	                                                    
	КонецЕсли;

	Если Отказ Тогда
		Возврат;
	КонецЕсли;         

	Источник.Движения.инкКадроваяИсторияСотрудников.Записывать = Истина;

	Движение = Источник.Движения.инкКадроваяИсторияСотрудников.Добавить();
		
	ГраницаВремени = Новый Граница(Источник.Дата, ВидГраницы.Исключая);
	КадровыеДанныеСотрудника = инкКадровыйУчетСервер.ПолучитьКадровыеДанныеСотрудникаВСтруктуру(Источник.Сотрудник,ГраницаВремени);
	Если ЗначениеЗаполнено(КадровыеДанныеСотрудника.Сотрудник) Тогда
		
		Если НачалоДня(КадровыеДанныеСотрудника.Период) = (Источник.ДатаПриказа) И  
			 КадровыеДанныеСотрудника.Регистратор <> Источник.Ссылка		
		Тогда
		
			Отказ = Истина; 
			ОбщегоНазначения.СообщитьПользователю("Внимание! Дата действия приказа: "+Источник.ДатаПриказа+
			         " противоречит другому кадровому приказу: "+КадровыеДанныеСотрудника.Регистратор+
			         ". Проведение документа отменено.");
			Возврат;
			
		КонецЕсли;

		ЗаполнитьЗначенияСвойств(Движение,КадровыеДанныеСотрудника);	

	КонецЕсли;	 
	
	ЗаполнитьЗначенияСвойств(Движение,Источник); 
	Движение.Период = Источник.ДатаПриказа;
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.инкПриемНаРаботу") Тогда
		Движение.ДатаПриемаНаРаботу = Источник.ДатаПриказа;
		Движение.ВидСобытия = Перечисления.инкВидыКадровыхСобытий.Прием;	
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.инкКадровыйПеревод") Тогда
		Движение.Период = Источник.ДатаПриказа;
		Движение.ВидСобытия = Перечисления.инкВидыКадровыхСобытий.Перемещение;
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.инкУвольнение") Тогда
		Движение.ДатаУвольнения = Источник.ДатаПриказа;	
		Движение.ВидСобытия = Перечисления.инкВидыКадровыхСобытий.Увольнение;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий
// Код процедур и функций
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти

#Область Инициализация

#КонецОбласти

