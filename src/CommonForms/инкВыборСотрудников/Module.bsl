
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьЗначениеРеквизитовПоУмолчаниюНаСервере(Параметры);	
	ЗаполнитьСписокСотрудниковНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтметкиВТаблице(Отметка)
	
	Для каждого СотрудникСтрока Из СотрудникиТаблица Цикл
		СотрудникСтрока.ВыборСтроки = Отметка;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ВыделитьВсе(Команда)
	
	УстановитьОтметкиВТаблице(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметки(Команда)
	
	УстановитьОтметкиВТаблице(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнвертироватьВыделение(Команда)
	
	Для каждого СотрудникСтрока Из СотрудникиТаблица Цикл
		СотрудникСтрока.ВыборСтроки = Не (СотрудникСтрока.ВыборСтроки);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьУволенныхПриИзменении(Элемент)
	
	Элементы.ДатаИсключения.Доступность = ИсключитьУволенных; 
	ЗаполнитьСписокСотрудниковНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПодразделениеПриИзмененииНаСервере()
	
	ЗаполнитьСписокСотрудниковНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	ПодразделениеПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаИсключенияПриИзменении(Элемент)
	
	ДатаИсключенияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ФормаОК(Команда)
	
	ПоискВыбор = Новый Структура("ВыборСтроки",Истина);
	Сотрудники = СотрудникиТаблица.НайтиСтроки(ПоискВыбор);
	
	РезультатВыбора = Новый Массив;
	Для каждого СотрудникСтрока из Сотрудники Цикл
		РезультатВыбора.Добавить(СотрудникСтрока.Сотрудник);	
	КонецЦикла;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Сотрудники",РезультатВыбора);
	ДополнительныеПараметры.Вставить("Организация",Организация);
	ДополнительныеПараметры.Вставить("Подразделение",Подразделение);
	ДополнительныеПараметры.Вставить("Период",ПериодВЗапросе);
	ДополнительныеПараметры.Вставить("Дата1",ПериодВЗапросе.ДатаНачала);
	ДополнительныеПараметры.Вставить("Дата2",ПериодВЗапросе.ДатаОкончания);
	
	ЭтаФорма.Закрыть(ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура мПодразделениеНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Организация",Организация);
	ПараметрыОткрытия.Вставить("ВсеПредприятие",Истина);
	
	Оповещение = Новый ОписаниеОповещения("мПодразделениеНачалоВыбораЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.инкПодразделения.ФормаВыбора", 
		ПараметрыОткрытия,
		ЭтотОбъект,
		ЭтотОбъект.УникальныйИдентификатор,
		,
		,
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура мПодразделениеНачалоВыбораЗавершение(Знач РезультатРедактирования, Знач ДополнительныеПараметры) Экспорт

	Если ТипЗнч(РезультатРедактирования) = Тип("Структура") Тогда
		
		Если РезультатРедактирования.ВсеПредприятие Тогда
			мПодразделение = "Все предприятие";
			Подразделение = Неопределено;
		Иначе   
			Если ЗначениеЗаполнено(РезультатРедактирования.Подразделение) Тогда
				мПодразделение = Строка(РезультатРедактирования.Подразделение);
				Подразделение = РезультатРедактирования.Подразделение;
			КонецЕсли;
		КонецЕсли;                           
		
		ПодразделениеПриИзменении(Неопределено);	
		
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	Подразделение = Справочники.инкПодразделения.ПустаяСсылка();
	ЗаполнитьСписокСотрудниковНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ДатаИсключенияПриИзмененииНаСервере()
	
	ЗаполнитьСписокСотрудниковНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодВЗапросеПриИзменении(Элемент)
	
	ЗаполнитьСписокСотрудниковНаСервере();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьЗначениеРеквизитовПоУмолчаниюНаСервере(Параметры)
	
	Если инкОбщийКлиентСервер.ЕстьСвойство(Параметры,"Организация") Тогда       
		Организация = Параметры.Организация;
	Иначе
		Организация = Справочники.инкОрганизации.ПолучитьТекущуюОрганизацию();	
	КонецЕсли;
	
	ЭтаФорма.Элементы.ПериодВЗапросе.Видимость = Ложь;
	Если инкОбщийКлиентСервер.ЕстьСвойство(Параметры,"Период") Тогда
		ЭтаФорма.Элементы.ПериодВЗапросе.Видимость = Истина;
		ПериодВЗапросе = Параметры.Период;
	КонецЕсли;

	ИсключитьУволенных = Ложь;
	ДатаИсключения = НачалоГода(ТекущаяДата()) - 1;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСотрудниковНаСервере()
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	СотрудникиТаблица.Очистить();
	
	СтруктураПараметров = инкКадровыйУчетСервер.ПолучитьСтруктуруПараметровДляЗапроса_Сотрудники();
	СтруктураПараметров.Дата1 			= Дата("00010101000000");
	СтруктураПараметров.Дата2 			= ПериодВЗапросе.ДатаОкончания;
	СтруктураПараметров.Организация 	= Организация;
	СтруктураПараметров.Подразделение 	= Подразделение;
	КадровыеДанныеТаблица = инкКадровыйУчетСервер.ПолучитьКадровыеДанныеЗаПериод(СтруктураПараметров);

    Для каждого РаботающийСотрудник Из КадровыеДанныеТаблица Цикл
        
        ДобавитьЗапись = Истина;
		Если ИсключитьУволенных Тогда
			
			Если ЗначениеЗаполнено(РаботающийСотрудник.ДатаУвольнения) Тогда
				Если РаботающийСотрудник.ДатаУвольнения < ДатаИсключения Тогда
					ДобавитьЗапись = Ложь;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДобавитьЗапись Тогда
			СотрудникиСтрока = СотрудникиТаблица.Добавить();
			СотрудникиСтрока.Сотрудник = РаботающийСотрудник.Сотрудник;
		КонецЕсли;
    	
	КонецЦикла; 
	
	УстановитьОтметкиВТаблице(Истина);
	
КонецПроцедуры

#КонецОбласти






