
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьФормуДаннымиПоУмолчанию();
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьФормуДаннымиПоУмолчанию()
	
КонецПроцедуры

&НаКлиенте
Процедура мФайлНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ПараметрыДиалога = Новый Структура;
	ПараметрыДиалога.Вставить("Заголовок", "Укажите файл с данными: ");
	ПараметрыДиалога.Вставить("Фильтр", НСтр("ru = 'XML файлы (*.xml)'") + "|*.xml");
    
    ДопПараметры = Новый Структура;
    
	Оповещение = Новый ОписаниеОповещения("ОткрытьОкноВыбораФайлаНаКлиентеЗавершение", ЭтотОбъект, ДопПараметры);
	ОбменДаннымиКлиент.ВыбратьИПередатьФайлНаСервер(Оповещение, ПараметрыДиалога, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	
	Если Не ЗначениеЗаполнено(мАдресКФайлу) Тогда
		Возврат;
	КонецЕсли; 
	
	КлючеваяОперация = "Обработка.инкЗагрузкаКадровыхДанныхИзРСВ.ЗагрузкаДанных";
	ОценкаПроизводительностиКлиент.ЗамерВремени(КлючеваяОперация);
	
	Отказ = Ложь;
	
	ПоказатьСостояниеПрогрессаНаКлиенте("Чтение данных XML...");
	
	ЗагрузитьДанныеНаСервере();
	
	ПоказатьСостояниеПрогрессаНаКлиенте("Запись данных XML...");
	
	ПоказатьСостояниеПрогрессаНаКлиенте("Загрузка завершена.");
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСостояниеПрогрессаНаКлиенте(СостояниеТекст)
	Состояние(СостояниеТекст);
КонецПроцедуры  

&НаКлиенте
Процедура ОткрытьОкноВыбораФайлаНаКлиентеЗавершение(Знач РезультатПомещенияФайлов, Знач ДополнительныеПараметры) Экспорт
	
	АдресПомещенногоФайла = РезультатПомещенияФайлов.Хранение;
	ТекстОшибки           = РезультатПомещенияФайлов.ОписаниеОшибки;
	
	Если ПустаяСтрока(ТекстОшибки) И ПустаяСтрока(АдресПомещенногоФайла) Тогда
		ТекстОшибки = НСтр("ru = 'Ошибка передачи файла настроек синхронизации данных на сервер'");
	КонецЕсли;
	
	Если Не ПустаяСтрока(ТекстОшибки) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;
		
	// Успешно передали файл, загружаем на сервере.
    ИмяФайла = РезультатПомещенияФайлов.Имя; 
    
	мАдресКФайлу = АдресПомещенногоФайла;
	мФайл	     = ИмяФайла; 		
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область о // Исходные данные:

&НаСервере
Функция ПолучитьИсходныеДанные()
	
	ИсходныеДанные = Новый Структура;
	//
	ИсходныеДанные.Вставить("ОрганизацииТаблица",Справочники.инкОрганизации.ПолучитьСписокОрганизаций());
	ИсходныеДанные.Вставить("СотрудникиТаблица",Справочники.инкСотрудники.ПолучитьСписокСотрудников());	
	ИсходныеДанные.Вставить("ИдентификаторЗагрузки",Новый УникальныйИдентификатор);
    //
	
	Возврат ИсходныеДанные;

КонецФункции

#КонецОбласти

#Область о // Загрузка данных:

&НаСервере
Процедура ЗагрузитьДанныеНаСервере()
	
	НачатьТранзакцию();
	
	Отказ = Ложь;
	ИсходныеДанные = ПолучитьИсходныеДанные();

	ВремКаталог =  КаталогВременныхФайлов();
    ПутьКФайлу = ВремКаталог + Новый УникальныйИдентификатор() + ".xml";
    ДвоичныеДанные = ПолучитьИзВременногоХранилища(мАдресКФайлу);
    ДвоичныеДанные.Записать(ПутьКФайлу);
	
	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(ПутьКФайлу);   
	ФабрикаХДТО = Новый ФабрикаXDTO;
	ФабрикаХДТОХМЛ = ФабрикаХДТО.ПрочитатьXML(Чтение);
	
	ИсходныеДанные.Вставить("Организация",ПолучитьДанныеПоОрганизации(ФабрикаХДТОХМЛ,ИсходныеДанные, Отказ));
	ЗагрузитьДанныеСотрудников(ФабрикаХДТОХМЛ,ИсходныеДанные,Отказ);
	
	Если Отказ Тогда
		ОтменитьТранзакцию();
	Иначе
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры                            

Процедура ЗагрузитьДанныеСотрудников(ФабрикаХДТОХМЛ,ИсходныеДанные,Отказ)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СписокЗастрахованныхЛиц = ФабрикаХДТОХМЛ.Документ.РасчетСВ.ПерсСвСтрахЛиц;
	Если ТипЗнч(СписокЗастрахованныхЛиц) = Тип("СписокXDTO") Тогда 
		
		Для каждого РасчетСВСтрока Из СписокЗастрахованныхЛиц Цикл
			
			Если Отказ Тогда
				Прервать;
			КонецЕсли;
			
			ПоискСотрудника = Новый Структура;
			ПоискСотрудника.Вставить("Фамилия",РасчетСВСтрока.ДанФЛПолуч.ФИО.Фамилия);
			ПоискСотрудника.Вставить("Имя",РасчетСВСтрока.ДанФЛПолуч.ФИО.Имя);
			ПоискСотрудника.Вставить("Отчество",РасчетСВСтрока.ДанФЛПолуч.ФИО.Отчество);
			ПоискСотрудника.Вставить("ИНН",РасчетСВСтрока.ДанФЛПолуч.ИННФЛ);
			ПоискСотрудника.Вставить("СНИЛС",РасчетСВСтрока.ДанФЛПолуч.СНИЛС);
			
			СотрудникСсылка = НайтиСотрудникаВТаблице(ПоискСотрудника,ИсходныеДанные.СотрудникиТаблица);
			
			НовыйСотрудник = Ложь;
			Если ЗначениеЗаполнено(СотрудникСсылка) Тогда
				ОбщегоНазначения.СообщитьПользователю("Найден сотрудник: "+СотрудникСсылка);           
				СотрудникОбъект = СотрудникСсылка.ПолучитьОбъект();
			Иначе
				
				НовыйСотрудник = Истина;
				
				СотрудникОбъект = Справочники.инкСотрудники.СоздатьЭлемент();	
				СотрудникОбъект.Наименование = инкОбщийКлиентСервер.НормализацияСтроки(ПоискСотрудника.Фамилия) + " "
	                             + инкОбщийКлиентСервер.НормализацияСтроки(ПоискСотрудника.Имя)  + " "
								 + инкОбщийКлиентСервер.НормализацияСтроки(ПоискСотрудника.Отчество);
			КонецЕсли;

			Попытка
				
				ЗаполнитьЗначенияСвойств(СотрудникОбъект,ПоискСотрудника);     
				СотрудникОбъект.ДатаРождения = СтроковыеФункцииКлиентСервер.СтрокаВДату(РасчетСВСтрока.ДанФЛПолуч.ДатаРожд);
				СотрудникОбъект.Пол = Перечисления.инкПол.Мужской;
				Если РасчетСВСтрока.ДанФЛПолуч.Пол <> "1" Тогда
					СотрудникОбъект.Пол = Перечисления.инкПол.Женский;	
				КонецЕсли;         
				
				СотрудникОбъект.Гражданство = Справочники.СтраныМира.НайтиПоКоду(РасчетСВСтрока.ДанФЛПолуч.Гражд);
				
				// Паспорт:
				Если РасчетСВСтрока.ДанФЛПолуч.КодВидДок="21" Тогда
					СотрудникОбъект.ДокументУдостоверяющийЛичность = Справочники.инкВидыДокументовФизическихЛиц.ПаспортРФ;
				КонецЕсли; 
				Если ЗначениеЗаполнено(РасчетСВСтрока.ДанФЛПолуч.СерНомДок) Тогда
					
					ДокументМассив = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(РасчетСВСтрока.ДанФЛПолуч.СерНомДок," ");

					Если ДокументМассив.Количество() > 0 Тогда
						СотрудникОбъект.ДокументСерия = ДокументМассив[0];	
					КонецЕсли;
					Если ДокументМассив.Количество() > 1 Тогда
						СотрудникОбъект.ДокументНомер = ДокументМассив[1];	
					КонецЕсли;
					  
				КонецЕсли;
				
				СотрудникОбъект.Записать();
				
				СотрудникСсылка = СотрудникОбъект.Ссылка;    

				Если НовыйСотрудник Тогда
					ОбщегоНазначения.СообщитьПользователю("Создан сотрудник: "+СотрудникСсылка);	
				Иначе
					ОбщегоНазначения.СообщитьПользователю("Обновлены данные по сотруднику: "+СотрудникСсылка);
				КонецЕсли;

			Исключение
				
				ОбщегоНазначения.СообщитьПользователю("Ошибка при обновлении данных сотрудника. Описание: "+ОписаниеОшибки());
				Отказ = Истина;
				
			КонецПопытки;
			
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры      

Функция НайтиСотрудникаВТаблице(ПоискСтруктура,СотрудникиТаблица);
	
	СотрудникСсылка = Справочники.инкСотрудники.ПустаяСсылка();
	
	// Поиск по ИНН:
	Если инкОбщийКлиентСервер.ЕстьСвойство(ПоискСтруктура,"ИНН") Тогда
		
		ПоискИНН = Новый Структура("ИНН",ПоискСтруктура.ИНН);
		СотрудникСсылка = ПоискСотрудникаПоСтруктуре(ПоискИНН,СотрудникиТаблица);
		
	КонецЕсли;     
	
	// Поиск по ФИО:
	Если НЕ ЗначениеЗаполнено(СотрудникСсылка) Тогда
		Если инкОбщийКлиентСервер.ЕстьСвойство(ПоискСтруктура,"ФИО") Тогда
			
			ПоискФИО = Новый Структура("ФИО",ПоискСтруктура.ФИО);
			СотрудникСсылка = ПоискСотрудникаПоСтруктуре(ПоискФИО,СотрудникиТаблица);
			
		КонецЕсли;
	КонецЕсли;

	// Поиск по Ф,И,О:
	Если НЕ ЗначениеЗаполнено(СотрудникСсылка) Тогда
		Если инкОбщийКлиентСервер.ЕстьСвойство(ПоискСтруктура,"Фамилия") И  
			 инкОбщийКлиентСервер.ЕстьСвойство(ПоискСтруктура,"Имя") И 
			 инкОбщийКлиентСервер.ЕстьСвойство(ПоискСтруктура,"Отчество")  
		Тогда
			
			ПоискФИО = Новый Структура;
			ПоискФИО.Вставить("Фамилия",ПоискСтруктура.Фамилия);
			ПоискФИО.Вставить("Имя",ПоискСтруктура.Имя);
			ПоискФИО.Вставить("Отчество",ПоискСтруктура.Отчество);
			СотрудникСсылка = ПоискСотрудникаПоСтруктуре(ПоискФИО,СотрудникиТаблица);
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат СотрудникСсылка;
	
КонецФункции

Функция ПоискСотрудникаПоСтруктуре(СтруктураПоиска,СотрудникиТаблица);
	
	СотрудникСсылка = Справочники.инкСотрудники.ПустаяСсылка();
	
	СотрудникиМассив = СотрудникиТаблица.НайтиСтроки(СтруктураПоиска);
	Если СотрудникиМассив.Количество() > 0 Тогда
		СотрудникСсылка = СотрудникиМассив[0].Ссылка;	
	КонецЕсли;
	
	Возврат СотрудникСсылка;
	
КонецФункции

Функция ПолучитьДанныеПоОрганизации(ФабрикаХДТОХМЛ,ИсходныеДанные,Отказ)

	ОрганизацияСсылка = Справочники.инкОрганизации.ПустаяСсылка();

	ДанныеОрганизации = Новый Структура;
	ДанныеОрганизации.Вставить("ИНН");
	ДанныеОрганизации.Вставить("КПП");
	ДанныеОрганизации.Вставить("Наименование");
	Если инкОбщийКлиентСервер.ЕстьСвойство(ФабрикаХДТОХМЛ.Документ.СвНП,"НПЮЛ") Тогда
		ДанныеОрганизации.ИНН = ФабрикаХДТОХМЛ.Документ.СвНП.НПЮЛ.ИННЮЛ;
		ДанныеОрганизации.КПП = ФабрикаХДТОХМЛ.Документ.СвНП.НПЮЛ.КПП;
		ДанныеОрганизации.Наименование = ФабрикаХДТОХМЛ.Документ.СвНП.НПЮЛ.НаимОрг;	
	ИначеЕсли инкОбщийКлиентСервер.ЕстьСвойство(ФабрикаХДТОХМЛ.Документ.СвНП,"НПФЛ") Тогда	
		ДанныеОрганизации.ИНН = ФабрикаХДТОХМЛ.Документ.СвНП.НПФЛ.ИННФЛ;
		ДанныеОрганизации.КПП = "";
		ДанныеОрганизации.Наименование = "ИП "
		                              + ФабрикаХДТОХМЛ.Документ.СвНП.НПФЛ.ФИО.Фамилия + " "
									  + ФабрикаХДТОХМЛ.Документ.СвНП.НПФЛ.ФИО.Имя + " "
									  + ФабрикаХДТОХМЛ.Документ.СвНП.НПФЛ.ФИО.Отчество
	КонецЕсли;
	
	ПоискОрганизации = Новый Структура("ИНН",ДанныеОрганизации.ИНН);
	ОрганизацииМассив = ИсходныеДанные.ОрганизацииТаблица.НайтиСтроки(ПоискОрганизации);
	Для каждого ОрганизацияЭлемент Из ОрганизацииМассив Цикл
		ОрганизацияСсылка = ОрганизацияЭлемент.Ссылка;
		ОбщегоНазначения.СообщитьПользователю("Найдена организация: "+ОрганизацияЭлемент.Ссылка);
	КонецЦикла;	                                      
	
	Если НЕ ЗначениеЗаполнено(ОрганизацияСсылка) Тогда
		
		Попытка
			
			ОрганизацияОбъект = Справочники.инкОрганизации.СоздатьЭлемент();
			ОрганизацияОбъект.Наименование = ДанныеОрганизации.Наименование;
			ОрганизацияОбъект.ИНН = ДанныеОрганизации.ИНН;
			ОрганизацияОбъект.КПП = ДанныеОрганизации.КПП;
			ОрганизацияОбъект.Записать();
			
			ОрганизацияСсылка = ОрганизацияОбъект.Ссылка;
			
			ОбщегоНазначения.СообщитьПользователю("Создана организация: "+ОрганизацияСсылка);
			
		Исключение
			ОбщегоНазначения.СообщитьПользователю("Ошибка при создании организации. Описание ошибки: "+ОписаниеОшибки());   
			Отказ = Истина;
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат ОрганизацияСсылка;
	
КонецФункции
			  
#КонецОбласти                 

#КонецОбласти
