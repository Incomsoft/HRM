
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ОбновитьПрограмму(Команда)    
	
	ФайлыОбновленийМассив = ПолучитьФайлыОбновленийНаСервере();
	Если ФайлыОбновленийМассив = Неопределено Тогда
		Возврат;
	КонецЕсли;  
	
	Если ФайлыОбновленийМассив.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ФайлОбновления Из ФайлыОбновленийМассив Цикл
		инкОбщийКлиентСервер.СообщитьПользователю("Получен файл обновления: "+ФайлОбновления.ПолноеИмяФайлаОбновления);
	КонецЦикла;
	
	НачатьОбновлениеПрограммы(ФайлыОбновленийМассив);

КонецПроцедуры 

&НаКлиенте
Процедура СделатьРезервнуюКопиюБазы(Команда)
	
	ОткрытьФорму("Обработка.РезервноеКопированиеИБ.Форма.РезервноеКопированиеДанных");

КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьБазуИзРезервнойКопии(Команда)
	
	ОткрытьФорму("Обработка.РезервноеКопированиеИБ.Форма.ВосстановлениеДанныхИзРезервнойКопии");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область о // Получение файлов обновлений:

&НаСервере
Функция ПолучитьФайлыОбновленийНаСервере()
	
	МенеджерОбработки = РеквизитФормыВЗначение("Объект");
	МенеджерОбработки.Инициализация();
	МенеджерОбработки.ЗагрузитьФайлыОбновлений();
	
	Возврат МенеджерОбработки.ФайлыОбновленийМассив;
	
КонецФункции

#КонецОбласти

#Область о // Обновление программы:

&НаКлиенте
Процедура НачатьОбновлениеПрограммы(ФайлыОбновленийМассив)
	
	ОтобразитьПолучениеОбновленийЗавершено(ФайлыОбновленийМассив);
	
КонецПроцедуры  

&НаКлиенте
Процедура ОтобразитьПолучениеОбновленийЗавершено(ФайлыОбновленийМассив)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ФайлыОбновленийМассив",ФайлыОбновленийМассив);
	
	ЭтоФайловаяИБ = ПолучитьЭтоФайловаяИБНаСервере(); 

	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПослеПолученияПараметровАдминистрирования",
		ЭтотОбъект,
		ДополнительныеПараметры); 
		
	ЗаголовокФормы = НСтр("ru = 'Установка обновления'");
	Если ЭтоФайловаяИБ Тогда
		ПоясняющаяНадпись = НСтр("ru = 'Для установки обновления необходимо ввести
			|параметры администрирования информационной базы'");
		ЗапрашиватьПараметрыАдминистрированияКластера = Ложь;
	Иначе
		ПоясняющаяНадпись = НСтр("ru = 'Для установки обновления необходимо ввести параметры
			|администрирования кластера серверов и информационной базы'");
		ЗапрашиватьПараметрыАдминистрированияКластера = Истина;
	КонецЕсли;
		
	СоединенияИБКлиент.ПоказатьПараметрыАдминистрирования(
		ОписаниеОповещения,
		Истина,
		ЗапрашиватьПараметрыАдминистрированияКластера,
		Неопределено,
		ЗаголовокФормы,
		ПоясняющаяНадпись);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЭтоФайловаяИБНаСервере()
	
	Возврат ПолучениеОбновленийПрограммы.ЭтоФайловаяИБ();
	
КонецФункции

&НаКлиенте
Процедура ПослеПолученияПараметровАдминистрирования(Результат, ДопПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		ПараметрыАдминистрирования = Результат;
		УстановитьПарольАдминистратора(ПараметрыАдминистрирования);
		ПродолжитьОбновлениеПослеПолученияПараметровАдминистрирования(ПараметрыАдминистрирования,ДопПараметры);
		
	Иначе
		
		ТекстПредупреждения = НСтр("ru = 'Для установки обновления необходимо ввести параметры администрирования.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		
		ТекстСообщения = НСтр("ru = 'Не удалось установить обновление программы, т.к. не были введены
			|корректные параметры администрирования информационной базы.'");
		ПолучениеОбновленийПрограммыКлиент.ЗаписатьОшибкуВЖурналРегистрации(ТекстСообщения);
		
		инкОбщийКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не удалось установить обновление программы, т.к. не были введены
				|корректные параметры администрирования информационной базы.'"));
		
	КонецЕсли;
	
КонецПроцедуры 

&НаСервереБезКонтекста
Процедура УстановитьПарольАдминистратора(Знач ПараметрыАдминистрирования)
	
	АдминистраторИБ = ПользователиИнформационнойБазы.НайтиПоИмени(
		ПараметрыАдминистрирования.ИмяАдминистратораИнформационнойБазы);
	
	Если Не АдминистраторИБ.АутентификацияСтандартная Тогда
		
		АдминистраторИБ.АутентификацияСтандартная = Истина;
		АдминистраторИБ.Пароль = ПараметрыАдминистрирования.ПарольАдминистратораИнформационнойБазы;
		АдминистраторИБ.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьОбновлениеПослеПолученияПараметровАдминистрирования(ПараметрыАдминистрирования,ДопПараметры)

	ПараметрыУстановки = ПараметрыУстановкиОбновленияКонфигурации(ДопПараметры.ФайлыОбновленийМассив);
	
	СтрОписаниеФайловОбновлений = "";
	Для Каждого ТекФайл Из ДопПараметры.ФайлыОбновленийМассив Цикл
		СтрОписаниеФайловОбновлений = СтрОписаниеФайловОбновлений + Символы.ПС
			+ "  " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Имя файла: %1, Выполнить обработчики обновления: %2;'"),
				ТекФайл.ПолноеИмяФайлаОбновления,
				ТекФайл.ВыполнитьОбработчикиОбновления);
	КонецЦикла;
	
	// Вызов программного интерфейса для установки обновления конфигурации.
	ОбновлениеКонфигурацииКлиент.УстановитьОбновление(
		ЭтотОбъект,
		ПараметрыУстановки,
		ПараметрыАдминистрирования);

КонецПроцедуры  

&НаСервере
Функция ПолучитьНастройкиОбновленияКонфигурацииНаСервере()

	Возврат ОбновлениеКонфигурации.НастройкиОбновленияКонфигурации();

КонецФункции

&НаКлиенте
Функция ПараметрыУстановкиОбновленияКонфигурации(ФайлыОбновленийМассив)
	
	НастройкиОбновления = ПолучитьНастройкиОбновленияКонфигурацииНаСервере(); 
	
	Результат = Новый Структура;
	Результат.Вставить("РежимОбновления"                  , НастройкиОбновления.РежимОбновления);
	Результат.Вставить("ЗавершениеРаботыСистемы"          , Ложь);
	Результат.Вставить("ДатаВремяОбновления"              , ТекущаяДата());
	Результат.Вставить("ВыслатьОтчетНаПочту"              , Ложь);
	Результат.Вставить("АдресЭлектроннойПочты"            , "");
	Результат.Вставить("КодЗадачиПланировщика"            , НастройкиОбновления.КодЗадачиПланировщика);
	Результат.Вставить("ИмяФайлаОбновления"               , "");
	Результат.Вставить("СоздаватьРезервнуюКопию"          , Истина);
	Результат.Вставить("ИмяКаталогаРезервнойКопииИБ"      , НастройкиОбновления.ИмяКаталогаРезервнойКопииИБ);
	Результат.Вставить("ВосстанавливатьИнформационнуюБазу", НастройкиОбновления.ВосстанавливатьИнформационнуюБазу);
	Результат.Вставить("ФайлыОбновления"				  , ФайлыОбновленийМассив);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

