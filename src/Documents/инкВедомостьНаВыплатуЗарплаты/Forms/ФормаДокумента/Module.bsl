
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("СпособВыплатыЗарплаты") Тогда
		
		ЗаполнитьФормуДаннымиПоПараметрам(Параметры);
		
	КонецЕсли; 
	
	ЗаполнитьДаннымиПоУмолчанию();
	
КонецПроцедуры       

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьДоступностьРеквизитов();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДаннымиПоУмолчанию()
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФормуДаннымиПоПараметрам(ПараметрыЗаполнения);

	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьВыплатуЗарплаты(ПараметрыЗаполнения,Истина);
	ЗначениеВРеквизитФормы(ДокументОбъект,"Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьРеквизитов()
	
	Элементы.ЗарплатныйПроект.Доступность = ВыплатаВБанк();

КонецПроцедуры                           

&НаКлиенте
Процедура Заполнить(Команда)  
	
	Если НЕ ВыплатаВБанк() Тогда
		ЗаполнитьЗарплатуНаСервере();	
	Иначе	
		ВопросПоЗаполнениюТабличнойЧастиЗарплата();	
	КонецЕсли;
	
КонецПроцедуры  

&НаСервере
Функция ВыплатаВБанк()
	
	Возврат (Объект.ВидВедомости = Перечисления.инкВидВедомостиНаВыплатуЗарплаты.ВБанк);
	
КонецФункции

&НаКлиенте
Процедура ВопросПоЗаполнениюТабличнойЧастиЗарплата()
	
	Если ВыплатаВБанк() И НЕ ЗначениеЗаполнено(Объект.ЗарплатныйПроект) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Внимание! Не заполнен зарплатный проект.");	
		Возврат;	
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Заполнить табличную часть выплаты зарплаты по выбранному зарплатному проекту?'");
	Оповещение = Новый ОписаниеОповещения("ВопросЗаполнитьЗарплатуЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры                                      

&НаКлиенте
Процедура ЗарплатныйПроектПриИзменении(Элемент)
	
	ВопросПоЗаполнениюТабличнойЧастиЗарплата();
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаполнитьЗарплатуЗавершение(Результат, ИмяТабЧасти) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьЗарплатуНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗарплатуНаСервере()

	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьВыплатуЗарплаты(ДокументОбъект);	
	ЗначениеВРеквизитФормы(ДокументОбъект,"Объект");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область о // Выгрузка в банк:

Функция ФайлВыгрузкиДанныхВБанкНаСервере(Отказ)

	ФайлВыгрузки = Неопределено;

	Если ЭтаФорма.Модифицированность Тогда                                  
		инкОбщийКлиентСервер.СообщитьПользователю("Перед выгрузкой данных необходимо сохранить документ.");	
		Отказ = Истина;
	КонецЕсли;         
	
	Если НЕ ЗначениеЗаполнено(Объект.ЗарплатныйПроект) Тогда
		инкОбщийКлиентСервер.СообщитьПользователю("Перед выгрузкой данных необходимо заполнить зарплатный проект.");	
		Отказ = Истина;
	КонецЕсли;

	Если НЕ Отказ Тогда
		ФайлВыгрузки = ОбменСБанкамиПоЗарплатнымПроектам.ФайлВыгрузкиДанныхВБанк(Объект.Ссылка,Отказ); 
	КонецЕсли;

	Возврат ФайлВыгрузки;
	
КонецФункции             

&НаКлиенте
Процедура ВыгрузитьВБанк(Команда)

	Если Объект.Зарплата.Количество() = 0 Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Для выгрузки данных должна быть заполнена табличная часть. Операция прервана.");
		Возврат;
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(Объект.ЗарплатныйПроект) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Для выгрузки данных в банк необходимо заполнить зарплатный проект. Операция прервана.");
		Возврат;
	КонецЕсли; 
	
	Отказ = Ложь;	
	ФайлВыгрузки = ФайлВыгрузкиДанныхВБанкНаСервере(Отказ); 

	Если Отказ Тогда
		Возврат;
	КонецЕсли;	
	
    Если НЕ ЗначениеЗаполнено(ФайлВыгрузки.ФайлАдрес) Тогда
    	Возврат;	                                           
    КонецЕсли;                                          

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ФайлВыгрузкиАдрес",ФайлВыгрузки.ФайлАдрес);
	ДополнительныеПараметры.Вставить("ИмяФайла",ФайлВыгрузки.ФайлИмя);
	ДополнительныеПараметры.Вставить("ВидКлиента");
	
	#Если ВебКлиент Тогда     
		
		ДополнительныеПараметры.ВидКлиента = "ВебКлиент";	
		
		списокКнопокВопроса = новый СписокЗначений();
		списокКнопокВопроса.Добавить("Сохранить","Сохранить");
		списокКнопокВопроса.Добавить("Отмена","Отмена");
		
		Оповещение = новый ОписаниеОповещения("СохранитьФайлЗавершение",ЭтотОбъект,ДополнительныеПараметры);
	  	ПоказатьВопрос(Оповещение,"Выберите действие",списокКнопокВопроса,30,"Сохранить","Сохранить файл выгрузки?","Отмена");

	#Иначе	
		
		ДополнительныеПараметры.ВидКлиента = "";	

		// Выбор файла для открытия	
		Режим = РежимДиалогаВыбораФайла.Сохранение;
		Диалог = Новый ДиалогВыбораФайла(Режим);
		Диалог.ПолноеИмяФайла = ДополнительныеПараметры.ИмяФайла;
		
		ОбратныйВызов = Новый ОписаниеОповещения("СохранитьФайлЗавершение", ЭтотОбъект, ДополнительныеПараметры); 
		// Открывает диалоговое окно
		Диалог.Показать(ОбратныйВызов);
		
	#КонецЕсли       
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФайлЗавершение(РезультатВопроса,ДополнительныеПараметры) экспорт
	
	Если РезультатВопроса = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ФайлВыгрузкиАдрес = ДополнительныеПараметры.ФайлВыгрузкиАдрес;
	Если ДополнительныеПараметры.ВидКлиента = "ВебКлиент" Тогда

		Если РезультатВопроса = "Сохранить" тогда
			НачатьПолучениеФайлаССервера(ФайлВыгрузкиАдрес,ДополнительныеПараметры.ИмяФайла);
		Иначе
			Возврат;
		КонецЕсли;		

	Иначе                              
		ПутьКФайлу = РезультатВопроса[0];
		НачатьПолучениеФайлаССервера(,ФайлВыгрузкиАдрес, ПутьКФайлу);	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти     

#Область о // Печать:

&НаКлиенте
Процедура ПечатьТ53(Команда)
	
	ТабличныйДокумент = ПолучитьТабличныйДокументТ53();
	инкОтчетыКлиент.ПечатьТабличногоДокумента(ТабличныйДокумент,"Ведомость на выплату зарплаты (Т-53)",ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТабличныйДокументТ53()
	
	МенеджерПечати = Обработки.инкПечатьТ53.Создать();
	Возврат МенеджерПечати.ПолучитьПечатныйДокументВедомостиНаСервере(Объект);
	
КонецФункции

&НаКлиенте
Процедура ПечатьРКО(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ПечатьРКОЗавершение", ЭтотОбъект);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("АдресПараметровВХранилище", ВыборСпискаСотрудниковВХранилище());
	
	ОткрытьФорму("ОбщаяФорма.инкВыборСотрудниковСписком", 
		ПараметрыОткрытия,
		ЭтотОбъект,
		УникальныйИдентификатор,
		,
		,
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Функция ВыборСпискаСотрудниковВХранилище()
	
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("Сотрудники",Объект.Зарплата.Выгрузить().ВыгрузитьКолонку("Сотрудник"));
	
	Возврат ПоместитьВоВременноеХранилище(ПараметрыРасчета, УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура ПечатьРКОЗавершение(Знач РезультатРедактирования, Знач ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(РезультатРедактирования) Тогда
		
		ТабличныйДокумент = ПолучитьТабличныйДокументРКО(РезультатРедактирования); 
		инкОтчетыКлиент.ПечатьТабличногоДокумента(ТабличныйДокумент,"РКО",ЭтаФорма);
		
	КонецЕсли;	
	
КонецПроцедуры  

&НаСервере
Функция ПолучитьТабличныйДокументРКО(РезультатРедактирования)

	РезультатВыбора = ПолучитьИзВременногоХранилища(РезультатРедактирования);

	МенеджерПечати = Обработки.инкПечатьРКО.Создать();
	ТабличныйДокумент = МенеджерПечати.ПолучитьПечатныйДокументРКОНаСервере(Объект,РезультатВыбора.Сотрудники);
	
	Возврат ТабличныйДокумент; 
	
КонецФункции

&НаКлиенте
Процедура ВидВедомостиПриИзменении(Элемент)
	УстановитьДоступностьРеквизитов();
КонецПроцедуры

#КонецОбласти

#КонецОбласти

