
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьДаннымиПоУмолчаниюНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДаннымиПоУмолчаниюНаСервере()

	// Организация	= Справочники.инкОрганизации.ПолучитьЕдинственнуюОрганизацию();
	Организация							= Справочники.инкОрганизации.НайтиПоКоду("000000001");
	// Подразделение						= Справочники.инкПодразделения.ПустаяСсылка();
	// ПериодРасчетаВзносов.ДатаНачала		= НачалоГода(Дата("20200101000000"));
	// ПериодРасчетаВзносов.ДатаОкончания  = КонецГода(Дата("20200101000000"));
	// Сотрудник = Справочники.инкСотрудники.НайтиПоКоду("000000001"); // Абрамов Г.С. 
	ПериодРасчетаВзносов.ДатаНачала		= НачалоГода(ТекущаяДата());
	ПериодРасчетаВзносов.ДатаОкончания  = КонецГода(ТекущаяДата());
	
КонецПроцедуры

&НаСервере
Функция ЭтоВнешняяОбработкаОтчет()
	
	ОбъектОбработка = РеквизитФормыВЗначение("Объект");
	Возврат инкОбщийСервер.ЭтоВнешняяОбработкаОтчет(ОбъектОбработка);
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
	 
#Область о // Отчет: Взносы в фонды:

&НаКлиенте
Процедура РасчетВзносов(Команда)
	
	ПараметрыФормы = ПолучитьРасчетВзносовНаСервере();
	
	Если ЭтоВнешняяОбработкаОтчет() Тогда
		ОткрытьФорму("ВнешняяОбработка.инкРасчетВзносов.Форма.ФормаОтчетаАналитика", ПараметрыФормы, , Истина);
	Иначе
		ОткрытьФорму("Обработка.инкРасчетВзносов.Форма.ФормаОтчетаАналитика", ПараметрыФормы, , Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция  ПолучитьРасчетВзносовНаСервере()
	
	МенеджерРасчета = РеквизитФормыВЗначение("Объект");
	//
	МенеджерРасчета.Инициализация();
	//
	МенеджерРасчета.ДанныеДляРасчетаВзносов.Организация = Организация;
	Если ЗначениеЗаполнено(Подразделение) Тогда
		МенеджерРасчета.ДанныеДляРасчетаВзносов.Подразделения.Добавить(Подразделение);
	КонецЕсли;
	МенеджерРасчета.ДанныеДляРасчетаВзносов.Дата1 = ПериодРасчетаВзносов.ДатаНачала;
	МенеджерРасчета.ДанныеДляРасчетаВзносов.Дата2 = ПериодРасчетаВзносов.ДатаОкончания;
	МенеджерРасчета.ДанныеДляРасчетаВзносов.СформироватьТабличныеДокументы = Истина;
	//
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		МенеджерРасчета.ДанныеДляРасчетаВзносов.Сотрудники.Добавить(Сотрудник);
	КонецЕсли;
	
	//
	МенеджерРасчета.ВыполнитьРасчетВзносов();
	//         
	
	ДанныеСтруктура = Новый Структура;
	ДанныеСтруктура.Вставить("ТабличныеДокументы",МенеджерРасчета.ТабличныеДокументы);
	ДанныеСтруктура.Вставить("ДанныеДляРасчетаВзносов",МенеджерРасчета.ДанныеДляРасчетаВзносов);
	
	Возврат ДанныеСтруктура; 
	  	
КонецФункции

#КонецОбласти

#Область о // Отчет: Взносы в фонды (свод):

&НаКлиенте
Процедура СводПоВзносамВФонды(Команда)

	ПараметрыФормы = ПолучитьРасчетВзносовСводНаСервере();   
	инкОтчетыКлиент.ПечатьТабличногоДокумента(ПараметрыФормы.СводПоСтраховымВзносам,"Свод по страховым взносам",ЭтаФорма);

КонецПроцедуры

&НаСервере
Функция ПолучитьРасчетВзносовСводНаСервере()
	
	МенеджерРасчета = РеквизитФормыВЗначение("Объект");
	//
	МенеджерРасчета.Инициализация();
	//
	МенеджерРасчета.ДанныеДляРасчетаВзносов.Организация = Организация;
	МенеджерРасчета.ДанныеДляРасчетаВзносов.Дата1 = ПериодРасчетаВзносов.ДатаНачала;
	МенеджерРасчета.ДанныеДляРасчетаВзносов.Дата2 = ПериодРасчетаВзносов.ДатаОкончания;
	МенеджерРасчета.ДанныеДляРасчетаВзносов.СформироватьТабличныеДокументы = Истина;
	МенеджерРасчета.ДанныеДляРасчетаВзносов.ВидОтчета = "Свод";
	
	//
	МенеджерРасчета.ВыполнитьРасчетВзносов();
	//         
	
	ДанныеСтруктура = Новый Структура;
	ДанныеСтруктура.Вставить("СводПоСтраховымВзносам",МенеджерРасчета.ТабличныеДокументы.СводПоСтраховымВзносам);
	
	Возврат ДанныеСтруктура; 
	  	
КонецФункции

#КонецОбласти

#КонецОбласти
