
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Отладка:
	УстановкаПараметровПоУмолчанию(Параметры);
	ЗаполнениеДанныхФормыНаСервере();	
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)         
	
	СохранитьДанныеФормыНаСервере();
	ЗаполнениеДанныхФормыНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойПриИзменении(Элемент)
	
	//ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтотОбъект, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой", Модифицированность);
	МесяцНачисленияСтрокой      = инкЗарплатаКадрыКлиентСервер.ПолучитьПредставлениеМесяца(ЭтотОбъект.МесяцНачисления);
	ЗаполнениеДанныхФормыНаСервере();	
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСтроку(Команда)
	
	стрТабельУчетаРабочегоВремени = Элементы.тзТабельУчетаРабочегоВремени.ТекущиеДанные; 
	Если стрТабельУчетаРабочегоВремени = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСтрокуВТабеле(стрТабельУчетаРабочегоВремени);
	
КонецПроцедуры   

&НаКлиенте
Процедура ОчиститьСтрокуВТабеле(стрТабельУчетаРабочегоВремени)

	чКоличествоДнейВМесяце = День(КонецМесяца(МесяцНачисления));
	чНачалоПериода = НачалоМесяца(МесяцНачисления);
	
    Для чИндекс = 1 по чКоличествоДнейВМесяце Цикл
		
		стрТабельУчетаРабочегоВремени["Д"+чИндекс+"Дни"]	= "";
		стрТабельУчетаРабочегоВремени["Д"+чИндекс+"Часы"]	= "";
		
	КонецЦикла;
	
	ПересчитатьИтоги(стрТабельУчетаРабочегоВремени.Сотрудник);

КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВсе(Команда)
	
	Для каждого ТабельСтрока Из тзТабельУчетаРабочегоВремени Цикл
		ОчиститьСтрокуВТабеле(ТабельСтрока);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьОдному(Команда)
	
	стрТабельУчетаРабочегоВремени = Элементы.тзТабельУчетаРабочегоВремени.ТекущиеДанные; 
	Если стрТабельУчетаРабочегоВремени = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Сотрудник = стрТабельУчетаРабочегоВремени.Сотрудник; 
	ЗаполнитьТабельПоДаннымГодовогоФондаРВремени(Сотрудник);
		
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ОчиститьДанныеФормыНаСервере();
	ЗаполнениеДанныхФормыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьВсем(Команда)
	
	ЗаполнитьТабельПоДаннымГодовогоФондаРВремени();
	
КонецПроцедуры

&НаКлиенте
Процедура тзТабельУчетаРабочегоВремениПриИзменении(Элемент)
	
	стрТабельУчетаРабочегоВремени = Элементы.тзТабельУчетаРабочегоВремени.ТекущиеДанные; 
	Если стрТабельУчетаРабочегоВремени = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Сотрудник = стрТабельУчетаРабочегоВремени.Сотрудник; 
	
	ПересчитатьИтоги(Сотрудник);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПодразделениеПриИзмененииНаСервере()
	
	ЗаполнениеДанныхФормыНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	ПодразделениеПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыВыбораПериода = Новый Структура("НачалоПериода, КонецПериода", НачалоМесяца(МесяцНачисления), КонецМесяца(МесяцНачисления));
	ОписаниеОповещения     = Новый ОписаниеОповещения("МесяцНачисленияСтрокойНачалоВыбораЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.инкВыборСтандартногоПериодаМесяц", ПараметрыВыбораПериода, Элементы.МесяцНачисленияСтрокой, , , , ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбораЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт 
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МесяцНачисления= РезультатВыбора.НачалоПериода;
	
КонецПроцедуры

&НаКлиенте
Процедура тзТабельУчетаРабочегоВремениПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура тзТабельУчетаРабочегоВремениПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ ЗавершениеРаботы Тогда
		СохранитьДанныеФормыНаСервере();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	СохранитьДанныеФормыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура мПодразделениеНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Организация",Организация);
	ПараметрыОткрытия.Вставить("ВсеПредприятие",Истина);
	
	Оповещение = Новый ОписаниеОповещения("мПодразделениеНачалоВыбораЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.инкПодразделения.ФормаВыбора", 
		ПараметрыОткрытия,
		ЭтотОбъект,
		УникальныйИдентификатор,
		,
		,
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

&НаКлиенте
Процедура мПодразделениеНачалоВыбораЗавершение(Знач РезультатРедактирования, Знач ДополнительныеПараметры) Экспорт

	Если ТипЗнч(РезультатРедактирования) = Тип("Структура") Тогда
		
		ИзменениеПараметров = Ложь;
		Если РезультатРедактирования.ВсеПредприятие Тогда
			мПодразделение = "Все предприятие";
			Подразделение = Неопределено;
			ИзменениеПараметров = Истина;
		Иначе   
			Если ЗначениеЗаполнено(РезультатРедактирования.Подразделение) Тогда
				мПодразделение = Строка(РезультатРедактирования.Подразделение);
				Подразделение = РезультатРедактирования.Подразделение;
				ИзменениеПараметров = Истина;
			КонецЕсли;
		КонецЕсли;                           
		
		Если ИзменениеПараметров Тогда
			
			Обновить(Неопределено);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СохранитьДанныеФормыНаСервере()
	
	чКоличествоДнейВМесяце = День(КонецМесяца(МесяцНачисления));
	чНачалоПериода = НачалоМесяца(МесяцНачисления);
	
	нз_инкТабельУчетаРабочегоВремени = РегистрыСведений.инкТабельУчетаРабочегоВремени.СоздатьНаборЗаписей();
	нз_инкТабельУчетаРабочегоВремени.Отбор.Месяц.Установить(чНачалоПериода);
	нз_инкТабельУчетаРабочегоВремени.Очистить();
	
	Для каждого стрТабеля из тзТабельУчетаРабочегоВремени Цикл
		
		Если Не ЗначениеЗаполнено(стрТабеля.Сотрудник) Тогда
			Продолжить;
		КонецЕсли;
		
		Для чИндекс = 0 по чКоличествоДнейВМесяце-1 Цикл
			
			чТекущийДень = чНачалоПериода + чИндекс * 60 * 60 * 24;
			
			стрДни = стрТабеля["Д"+(чИндекс+1)+"Дни"]; 
			чЧасы  = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(стрТабеля["Д"+(чИндекс+1)+"Часы"]);
			
			Если (стрДни <> "") Тогда
				
				з_инкТабельУчетаРабочегоВремени = нз_инкТабельУчетаРабочегоВремени.Добавить();
				з_инкТабельУчетаРабочегоВремени.Сотрудник	= стрТабеля.Сотрудник;
				з_инкТабельУчетаРабочегоВремени.День        = чТекущийДень;
				з_инкТабельУчетаРабочегоВремени.Месяц		= чНачалоПериода;
				з_инкТабельУчетаРабочегоВремени.ВДнях       = стрДни;
				з_инкТабельУчетаРабочегоВремени.ВЧасах      = чЧасы;
				
			КонецЕсли;	
				
		КонецЦикла;
			
	КонецЦикла;
	
	нз_инкТабельУчетаРабочегоВремени.Записать(Истина);
	
КонецПроцедуры

&НаСервере
Процедура УстановкаПараметровПоУмолчанию(ПараметрыОткрытия)
	
	ВидРаобочейНедели 			= Перечисления.инкВидРабочейНедели.Пятидневка; 
	Если инкОбщийКлиентСервер.ЕстьСвойство(ПараметрыОткрытия,"Организация") Тогда
		ЭтотОбъект.Организация 		= ПараметрыОткрытия.Организация;	
	КонецЕсли;
	Если инкОбщийКлиентСервер.ЕстьСвойство(ПараметрыОткрытия,"Подразделение") Тогда
		ЭтотОбъект.Подразделение	= ПараметрыОткрытия.Подразделение;	  
		мПодразделение 				= ПараметрыОткрытия.Подразделение;
	Иначе 
		мПодразделение 				= "Все предприятие";
	КонецЕсли;
	Если инкОбщийКлиентСервер.ЕстьСвойство(ПараметрыОткрытия,"МесяцНачисления") Тогда
		ЭтотОбъект.МесяцНачисления  = ПараметрыОткрытия.МесяцНачисления;	
		МесяцНачисленияСтрокой      = инкЗарплатаКадрыКлиентСервер.ПолучитьПредставлениеМесяца(ЭтотОбъект.МесяцНачисления);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОчиститьДанныеФормыНаСервере()
	
	Подразделение = Справочники.инкПодразделения.ПустаяСсылка();
	тзТабельУчетаРабочегоВремени.Очистить();
	
КонецПроцедуры

#Область о // Исходные данные:

&НаСервере
Функция ПолучитьИсходныеДанные(ПервичноеЗаполнение = Ложь)
	
	ИсходныеДанные = Новый Структура;              
	ИсходныеДанные.Вставить("Дата1",НачалоМесяца(МесяцНачисления));
	ИсходныеДанные.Вставить("Дата2",КонецМесяца(МесяцНачисления));        
	ИсходныеДанные.Вставить("Организация",ЭтотОбъект.Организация);        
	ИсходныеДанные.Вставить("Подразделение",ЭтотОбъект.Подразделение);        
	ИсходныеДанные.Вставить("СотрудникиТаблица",ПолучитьСотрудниковОрганизации(ИсходныеДанные));
	ИсходныеДанные.Вставить("Сотрудники",ИсходныеДанные.СотрудникиТаблица.ВыгрузитьКолонку("Сотрудник"));
	ИсходныеДанные.Вставить("ВидРабочейНедели",ВидРаобочейНедели);   
	ИсходныеДанные.Вставить("КадровыеИзмененияТаблица",инкУчетВремениСервер.ПолучитьКадровыеИзмененияПоПериодуНаКаджыйДень(ИсходныеДанные));  
	ИсходныеДанные.Вставить("КадровыеДанныеТаблица",инкКадровыйУчетСервер.ПолучитьКадровыеДанныеСотрудников(ИсходныеДанные,Ложь));  
	
	Если ПервичноеЗаполнение Тогда
		
		ИсходныеДанные.Вставить("стрПараметры",инкТабельСервер.ПолучитьСтруктуруДляДанныхТабеля());
		ЗаполнитьЗначенияСвойств(ИсходныеДанные.стрПараметры,ЭтотОбъект);
		ИсходныеДанные.Вставить("тзДанныеТабеля",инкТабельСервер.ПолучитьДанныеТабеляНаСервере(ИсходныеДанные.стрПараметры));
		
	Иначе
		
		ИсходныеДанные.Вставить("ПроизводственныйКалендарьТаблица",инкПроизводственныйКалендарьСервер.ПолучитьДанныеПроизводственногоКалендаряЗаПериод(ИсходныеДанные.Дата1,ИсходныеДанные.Дата2));
        ИсходныеДанные.Вставить("РеестрКадровыхДокументов",инкКадровыйУчетСервер.ПолучитьРеестрыКадровыхДокументов(ИсходныеДанные));
		
	КонецЕсли;
	
	Возврат ИсходныеДанные;
	
КонецФункции

&НаСервере
Функция ПолучитьСотрудниковОрганизации(ИсходныеДанные)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	КадроваяИсторияСотрудниковСрезПоследних.Организация КАК Организация,
		|	КадроваяИсторияСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	КадроваяИсторияСотрудниковСрезПоследних.ДатаПриемаНаРаботу КАК ДатаПриемаНаРаботу,
		|	КадроваяИсторияСотрудниковСрезПоследних.ДатаУвольнения КАК ДатаУвольнения,
		|	КадроваяИсторияСотрудниковСрезПоследних.ВидРабочейНедели КАК ВидРабочейНедели
		|ИЗ
		|	РегистрСведений.инкКадроваяИсторияСотрудников.СрезПоследних(&ТекущийПериод, Сотрудник В (&Сотрудники)) КАК КадроваяИсторияСотрудниковСрезПоследних
		|ГДЕ
		|	КадроваяИсторияСотрудниковСрезПоследних.Организация = &Организация
		|	И КадроваяИсторияСотрудниковСрезПоследних.Подразделение = &Подразделение";

	Если ЗначениеЗаполнено(ИсходныеДанные.Организация) Тогда
		Запрос.УстановитьПараметр("Организация", ИсходныеДанные.Организация);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"КадроваяИсторияСотрудниковСрезПоследних.Организация = &Организация","Истина");  	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИсходныеДанные.Подразделение) Тогда
		Запрос.УстановитьПараметр("Подразделение", ИсходныеДанные.Подразделение);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"КадроваяИсторияСотрудниковСрезПоследних.Подразделение = &Подразделение","Истина");  	
	КонецЕсли;    
	
	Если ЗначениеЗаполнено(Параметры.Сотрудники) Тогда
		Запрос.УстановитьПараметр("Сотрудники", Параметры.Сотрудники);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Сотрудник В (&Сотрудники)","Истина");  	
	КонецЕсли;    
	
	Запрос.УстановитьПараметр("ТекущийПериод", ИсходныеДанные.Дата2);
	
	тз = Запрос.Выполнить().Выгрузить();
	
	Возврат тз; 

КонецФункции  

#КонецОбласти

#Область о // Первичное заполнение табеля:

&НаСервере
Процедура ЗаполнениеДанныхФормыНаСервере()
	
	тзТабельУчетаРабочегоВремени.Очистить();
	
	ИсходныеДанные = ПолучитьИсходныеДанные(Истина);
	ЗаполнитьЗначенияСвойств(ИсходныеДанные.стрПараметры,ЭтотОбъект);
	Для каждого стрСотрудник из ИсходныеДанные.СотрудникиТаблица Цикл
		
		ЗаполнитьСтрокуВТЗ(стрСотрудник,ИсходныеДанные);		
		
	КонецЦикла;
	
	ПересчитатьИтоги();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуВТЗ(стрСотрудник,ИсходныеДанные)
	
	стрТабельУчетаРабочегоВремени = тзТабельУчетаРабочегоВремени.Добавить();
	ЗаполнитьЗначенияСвойств(стрТабельУчетаРабочегоВремени,стрСотрудник);
	
	чКоличествоДнейВМесяце = День(КонецМесяца(МесяцНачисления));
	чНачалоПериода = НачалоМесяца(МесяцНачисления);
	
	Для чИндекс = 0 по чКоличествоДнейВМесяце-1 Цикл
		
		чТекущийДень = чНачалоПериода + чИндекс * 60 * 60 * 24;
		
		стрПоиск = Новый Структура;
		стрПоиск.Вставить("Сотрудник",стрСотрудник.Сотрудник);
		стрПоиск.Вставить("Дата",чТекущийДень);
		
		массДанныеТабеля = ИсходныеДанные.тзДанныеТабеля.НайтиСтроки(стрПоиск);
		Если массДанныеТабеля.Количество() > 0 Тогда
			
			стрТабельУчетаРабочегоВремени["Д"+(чИндекс+1)+"Дни"] = массДанныеТабеля[0].ВДнях;
			Если массДанныеТабеля[0].ВЧасах = 0 Тогда
				стрТабельУчетаРабочегоВремени["Д"+(чИндекс+1)+"Часы"] = "";
			Иначе	                                                       
				стрТабельУчетаРабочегоВремени["Д"+(чИндекс+1)+"Часы"] = массДанныеТабеля[0].ВЧасах;
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере 
Процедура ПересчитатьИтогиПоСтроке(стрТабеля)
	
	чКоличествоДнейВМесяце = День(КонецМесяца(МесяцНачисления));
	чНачалоПериода = НачалоМесяца(МесяцНачисления);
	
	ДниЯ 	= 0;
	ДниО    = 0;
	ДниБ	= 0;
	ДниК	= 0;
	ЧасыЯ	= 0;
	ЧасыО	= 0;
	ЧасыБ	= 0;
	ЧасыК	= 0;
	
	Для чИндекс = 0 по чКоличествоДнейВМесяце-1 Цикл
		
		стрТабеля["Д"+(чИндекс+1)+"Дни"] = ВРег(стрТабеля["Д"+(чИндекс+1)+"Дни"]);
		
		Если стрТабеля["Д"+(чИндекс+1)+"Дни"] = "Я" Тогда
			ДниЯ 	= ДниЯ + 1;
			ЧасыЯ	= ЧасыЯ + СтроковыеФункцииКлиентСервер.СтрокаВЧисло(стрТабеля["Д"+(чИндекс+1)+"Часы"]);
		ИначеЕсли стрТабеля["Д"+(чИндекс+1)+"Дни"] = "О" Тогда 
			ДниО 	= ДниО + 1;
			ЧасыО	= ЧасыО + СтроковыеФункцииКлиентСервер.СтрокаВЧисло(стрТабеля["Д"+(чИндекс+1)+"Часы"]);
		ИначеЕсли стрТабеля["Д"+(чИндекс+1)+"Дни"] = "Б" Тогда 
			ДниБ 	= ДниБ + 1;
			ЧасыБ	= ЧасыБ + СтроковыеФункцииКлиентСервер.СтрокаВЧисло(стрТабеля["Д"+(чИндекс+1)+"Часы"]);
		ИначеЕсли стрТабеля["Д"+(чИндекс+1)+"Дни"] = "К" Тогда 
			ДниК	= ДниК + 1;
			ЧасыК	= ЧасыК + СтроковыеФункцииКлиентСервер.СтрокаВЧисло(стрТабеля["Д"+(чИндекс+1)+"Часы"]);
		Иначе
			стрТабеля["Д"+(чИндекс+1)+"Дни"] = ""; // Если нет нужного символа, то обнуляем.
		КонецЕсли;
		
	КонецЦикла;
	
	стрТабеля.Дни2Я = ДниЯ;
	стрТабеля.Дни2О = ДниО;
	стрТабеля.Дни2Б = ДниБ;
	стрТабеля.Дни2К = ДниК;
	//
	стрТабеля.Часы2Я = ЧасыЯ;
	стрТабеля.Часы2О = ЧасыО;
	стрТабеля.Часы2Б = ЧасыБ;
	стрТабеля.Часы2К = ЧасыК;
	
КонецПроцедуры

&НаСервере 
Процедура ПересчитатьИтоги(Сотрудник = Неопределено)
	
	Если Сотрудник = Неопределено Тогда
		
		Для каждого стрТабель из тзТабельУчетаРабочегоВремени Цикл
			ПересчитатьИтогиПоСтроке(стрТабель);
		КонецЦикла;
		
	Иначе
		
		стрПоиск = Новый Структура("Сотрудник",Сотрудник);
		массСтрокТабеля = тзТабельУчетаРабочегоВремени.НайтиСтроки(стрПоиск);
		Для каждого стрТабель из массСтрокТабеля Цикл
			ПересчитатьИтогиПоСтроке(стрТабель);		
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область о // Заполнение табеля из справочника годового фонда р/времени:

&НаСервере
Процедура ЗаполнитьТабельПоДаннымГодовогоФондаРВремени(Сотрудник = Неопределено)

	ИсходныеДанные = ПолучитьИсходныеДанные();
	
	ТабельУчетаРабочегоВремени = тзТабельУчетаРабочегоВремени;
	Если ЗначениеЗаполнено(Сотрудник) Тогда
    	стрПоиск = Новый Структура("Сотрудник",Сотрудник);
		ТабельУчетаРабочегоВремени = тзТабельУчетаРабочегоВремени.НайтиСтроки(стрПоиск);
	КонецЕсли;
	
	Для каждого ТабельСтрока из ТабельУчетаРабочегоВремени Цикл
		ЗаполнитьСтрокуТабеляПоПроизводственномуКалендарю(ТабельСтрока,ИсходныеДанные);
	КонецЦикла;
	
	ПересчитатьИтоги(Сотрудник);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуТабеляПоПроизводственномуКалендарю(стрТабеля,ИсходныеДанные)
	
	чКоличествоДнейВМесяце = День(КонецМесяца(МесяцНачисления));
	чНачалоПериода = НачалоМесяца(МесяцНачисления);
	
	Для чИндекс = 0 по чКоличествоДнейВМесяце-1 Цикл 
		
		чТекущийДень = чНачалоПериода + чИндекс * 60 * 60 * 24;

		Если мЗаполнитьПервуюПоловинуМесяца Тогда
			Если чИндекс >= 15 Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
		
		ДанныеДня = инкУчетВремениСервер.ПолучитьДанныеДня(чТекущийДень,стрТабеля,ИсходныеДанные);
		
		стрТабеля["Д"+(чИндекс+1)+"Дни"]	= ДанныеДня.Дни;
		стрТабеля["Д"+(чИндекс+1)+"Часы"]	= ДанныеДня.Часы;
		Если ДанныеДня.Часы = 0 Тогда
			стрТабеля["Д"+(чИндекс+1)+"Часы"]	= "";	
		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры      

#КонецОбласти

#Область о //Печать табеля рабочего времени Т-13:

&НаСервере
Функция ДеньЯвки(стрСимвол)
	
	бул = Ложь;
	
	Если стрСимвол = "Я" Тогда
		бул = Истина;
	КонецЕсли;
	
	Возврат бул;
	
КонецФункции

&НаСервере
Функция ПолучитьТабличныйДокументТабель()
	
	стрПараметры = инкТабельСервер.ПолучитьСтруктуруДляДанныхТабеля();
	ЗаполнитьЗначенияСвойств(стрПараметры,ЭтотОбъект);
	тзТабельРабочегоВремени = инкТабельСервер.ПолучитьДанныеТабеляНаСервере(стрПараметры);
	
	Если тзТабельРабочегоВремени.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	тдТабель = Новый ТабличныйДокумент;
	Макет = ПолучитьОбщийМакет("инкПФ_MXL_УнифицированнаяФормаТ13");

	облШапка = Макет.ПолучитьОбласть("Шапка");
	облШапка.Параметры.ОрганизацияНаименование		= стрПараметры.Организация;
	облШапка.Параметры.ПодразделениеНаименование	= стрПараметры.Подразделение; 
	облШапка.Параметры.НомерДокумента 	= 1; 
	облШапка.Параметры.ДатаЗаполнения 	= ТекущаяДата();
	облШапка.Параметры.ДатаНачала	 	= НачалоМесяца(стрПараметры.МесяцНачисления);
	облШапка.Параметры.ДатаОкончания 	= КонецМесяца(стрПараметры.МесяцНачисления); 
	тдТабель.Вывести(облШапка);
	
	облШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	тдТабель.Вывести(облШапкаТаблицы);
	
	// Заполнение строк сотрудников:
	СотрудникиТаблица = тзТабельРабочегоВремени.Скопировать();
	СотрудникиТаблица.Свернуть("Сотрудник");
	чНомерПП = 0;
	Для каждого стрСотрудник из СотрудникиТаблица Цикл
		
		чНомерПП = чНомерПП + 1;

		облСтрока = Макет.ПолучитьОбласть("Строка");
		
		облСтрока.Параметры.НомерПП = чНомерПП;
		облСтрока.Параметры.Сотрудник = стрСотрудник.Сотрудник;
		облСтрока.Параметры.ТабельныйНомер = стрСотрудник.Сотрудник.ТабельныйНомер; 

		чКоличествоДнейВМесяце = День(КонецМесяца(стрПараметры.МесяцНачисления));
		чНачалоПериода = НачалоМесяца(стрПараметры.МесяцНачисления);
		
		чДниПерваяПоловина	= 0;
		чЧасыПерваяПоловина = 0;
		чДниВтораяПоловина  = 0;
		чЧасыВтораяПоловина = 0; 
		
		ДниНеявкиТаблица = Новый ТаблицаЗначений;
		ДниНеявкиТаблица.Колонки.Добавить("Код");
		ДниНеявкиТаблица.Колонки.Добавить("Дни");
		
		Для чИндекс = 0 по чКоличествоДнейВМесяце-1 Цикл
			
			чТекущийДень = чНачалоПериода + чИндекс * 60 * 60 * 24;
			
			стрПоиск = Новый Структура;
			стрПоиск.Вставить("Сотрудник",стрСотрудник.Сотрудник);
			стрПоиск.Вставить("Дата",чТекущийДень);
			
			массДанныеТабеля = тзТабельРабочегоВремени.НайтиСтроки(стрПоиск);
			Если массДанныеТабеля.Количество() > 0 Тогда
				
				облСтрока.Параметры["Символ"+(чИндекс+1)] = массДанныеТабеля[0].ВДнях; 
				облСтрока.Параметры["ДополнительноеЗначение"+(чИндекс+1)] = массДанныеТабеля[0].ВЧасах; 
				
				Если чИндекс <= 14 Тогда
				
					Если ДеньЯвки(массДанныеТабеля[0].ВДнях) Тогда
						чДниПерваяПоловина	= чДниПерваяПоловина+1;  
					Иначе
						ДниНеявкиСтрока = ДниНеявкиТаблица.Добавить();	
						ДниНеявкиСтрока.Код = массДанныеТабеля[0].ВДнях;
						ДниНеявкиСтрока.Дни = 1;
					КонецЕсли;
					
					чЧасыПерваяПоловина = чЧасыПерваяПоловина + массДанныеТабеля[0].ВЧасах;
					
				Иначе
					
					Если ДеньЯвки(массДанныеТабеля[0].ВДнях) Тогда
						чДниВтораяПоловина	= чДниВтораяПоловина+1;
					Иначе
						ДниНеявкиСтрока = ДниНеявкиТаблица.Добавить();	
						ДниНеявкиСтрока.Код = массДанныеТабеля[0].ВДнях;
						ДниНеявкиСтрока.Дни = 1;
					КонецЕсли;
					
					чЧасыВтораяПоловина = чЧасыВтораяПоловина + массДанныеТабеля[0].ВЧасах;
					
				КонецЕсли;
				
			КонецЕсли;
						
		КонецЦикла;
		
		облСтрока.Параметры.ДниПерваяПоловина	= чДниПерваяПоловина;
		облСтрока.Параметры.ЧасыПерваяПоловина  = чЧасыПерваяПоловина;
		облСтрока.Параметры.ДниВтораяПоловина   = чДниВтораяПоловина;
		облСтрока.Параметры.ЧасыВтораяПоловина  = чЧасыВтораяПоловина;
		облСтрока.Параметры.ДниЗаМесяц          = чДниПерваяПоловина + чДниВтораяПоловина;
		облСтрока.Параметры.ЧасыЗаМесяц         = чЧасыПерваяПоловина + чЧасыВтораяПоловина;
		
		ДниНеявкиТаблица.Свернуть("Код","Дни");
		НомерКодаЧисло = 0;
		
		Для каждого ДниНеявкиСтрока Из ДниНеявкиТаблица Цикл
			
			НомерКодаЧисло = НомерКодаЧисло + 1;
			
			облСтрока.Параметры["НеявкаКод"+НомерКодаЧисло] = ДниНеявкиСтрока.Код;
			облСтрока.Параметры["НеявкаДниЧасы"+НомерКодаЧисло] = ДниНеявкиСтрока.Дни;
			
		КонецЦикла;
		
		тдТабель.Вывести(облСтрока);	
		
	КонецЦикла;
	
	РуководительДанные = Справочники.инкОрганизации.КадровыеДанныеРуководителя(стрПараметры.Организация);
	КадровикДанные = Справочники.инкОрганизации.КадровыеДанныеКадровика(стрПараметры.Организация);
	
	облПодвал = Макет.ПолучитьОбласть("Подвал");
	облПодвал.Параметры.ДолжностьОтветственного		= "";
	облПодвал.Параметры.ФИООтветственного			= Пользователи.ТекущийПользователь();
	облПодвал.Параметры.ДолжностьРуководителя		= РуководительДанные.Должность;
	облПодвал.Параметры.ФИОРуководителя				= РуководительДанные.ФИОСокращенное;
	облПодвал.Параметры.ДолжностьКадровика			= КадровикДанные.Должность; 
	облПодвал.Параметры.ФИОКадровика	            = КадровикДанные.ФИОСокращенное;
 	
	тдТабель.Вывести(облПодвал);
	
	тдТабель.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	тдТабель.МасштабПечати = 96;
	
	Возврат тдТабель; 
	
КонецФункции

&НаКлиенте
Процедура Распечатать(Команда)
	
	СохранитьДанныеФормыНаСервере();
	
	тдТабель = ПолучитьТабличныйДокументТабель();
	
	Если тдТабель = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Создаём новую коллекцию печатных форм
	КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("Табель учета рабочего времени (Т-13)");
	
	// Добавляем в коллекцию сформированный табличный документ
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = тдТабель;
	
	// Устанавливаем параметры печати (при необходимости)
	КоллекцияПечатныхФорм[0].Экземпляров = 1;
	КоллекцияПечатныхФорм[0].СинонимМакета = "Табель учета рабочего времени (Т-13)";  //Так будет выглядеть имя файла при сохранении в файл из формы "Печать документов"
	
	// Вывод через стандартную процедуру БСП
 	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, Неопределено, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереходНаСледующуюЯчейку(ИмяПоля,ДеньЧисло)
	
	ИмяСтолбцаСтрока = "Часы";
	Если СтрНайти(ВРег(ИмяПоля),ВРег("Дни")) > 0 Тогда
		ИмяСтолбцаСтрока = "Дни";;	
	КонецЕсли;       
	
	Если ДеньЧисло = 15 Тогда
		ДеньЧисло = 16;
	ИначеЕсли ДеньЧисло = 31 Тогда
		ДеньЧисло = 1;
	Иначе            
		ДеньЧисло = ДеньЧисло + 1;
	КонецЕсли;
	
	ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы["тзТабельУчетаРабочегоВремениД"+ДеньЧисло+ИмяСтолбцаСтрока];

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеПриОбновленииТаблицы(ТекущиеДанныеСтроки,ТекущийДеньНедели)

	Если ВРег(ТекущиеДанныеСтроки["Д"+(ТекущийДеньНедели)+"Дни"]) = "О" ИЛИ 
		 ВРег(ТекущиеДанныеСтроки["Д"+(ТекущийДеньНедели)+"Дни"]) = "Б" ИЛИ
		 ВРег(ТекущиеДанныеСтроки["Д"+(ТекущийДеньНедели)+"Дни"]) = "К" ИЛИ
		 ВРег(ТекущиеДанныеСтроки["Д"+(ТекущийДеньНедели)+"Дни"]) = ""
	Тогда
		ТекущиеДанныеСтроки["Д"+(ТекущийДеньНедели)+"Часы"] = "";
	Иначе
		Если НЕ ЗначениеЗаполнено(ТекущиеДанныеСтроки["Д"+(ТекущийДеньНедели)+"Часы"]) Тогда
			ТекущиеДанныеСтроки["Д"+(ТекущийДеньНедели)+"Часы"] = "8";	
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура тзТабельУчетаРабочегоВремениПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЧислаВСтрокеМассив = инкОбщийКлиентСервер.НайтиЧислаВСтроке(Элемент.ТекущийЭлемент.Имя);
	
	Для каждого ЭлементЧисло Из ЧислаВСтрокеМассив Цикл
		
		ДеньНедели = Число(ЭлементЧисло);
		
		ОбновитьДанныеПриОбновленииТаблицы(Элемент.ТекущиеДанные,ДеньНедели);	
		ПереходНаСледующуюЯчейку(Элемент.ТекущийЭлемент.Имя,ДеньНедели);	
		Прервать;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
