
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Контактаная информация:
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформацией = ОбщегоНазначения.ОбщийМодуль("УправлениеКонтактнойИнформацией");
		ДополнительныеПараметрыКонтактнойИнформации = МодульУправлениеКонтактнойИнформацией.ПараметрыКонтактнойИнформации();
		ДополнительныеПараметрыКонтактнойИнформации.ТипПомещения = "Офис";
		МодульУправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, ДополнительныеПараметрыКонтактнойИнформации);
	КонецЕсли;
	
	ФотоСотрудникаАдрес = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "ФотоСотрудника");
	ОтобразитьФотоСотрудника();
	ЗаполнитьКадровыеДанные();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// Контактаная информация:
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформацией = ОбщегоНазначения.ОбщийМодуль("УправлениеКонтактнойИнформацией");
		МодульУправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ДанныеОбъекта = Новый Структура;
	ДанныеОбъекта.Вставить("СотрудникСсылка", Объект.Ссылка);
	ДанныеОбъекта.Вставить("Модифицированность",ЭтаФорма.Параметры.СотрудникМодифицирован);
	
	Закрыть(ДанныеОбъекта);

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// Контактаная информация:
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформацией = ОбщегоНазначения.ОбщийМодуль("УправлениеКонтактнойИнформацией");
		МодульУправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ЭтаФорма.Параметры.СотрудникМодифицирован = ЭтотОбъект.Модифицированность;
	
	// Контактаная информация:
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформацией = ОбщегоНазначения.ОбщийМодуль("УправлениеКонтактнойИнформацией");
		МодульУправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ФотоСотрудникаАдрес) Тогда
		Если ЭтоАдресВременногоХранилища(ФотоСотрудникаАдрес) Тогда
	    	ТекущийОбъект.ФотоСотрудника = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(ФотоСотрудникаАдрес));
		КонецЕсли;
	Иначе
		ТекущийОбъект.ФотоСотрудника = Неопределено;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьКонтактнуюИнформацию(Результат)
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформацией = ОбщегоНазначения.ОбщийМодуль("УправлениеКонтактнойИнформацией");
		МодульУправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнформацию(Команда)      
	
	ЭтаФорма.ОбновитьОтображениеДанных();  
	ЗаполнитьКадровыеДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	НаименованиеПриИзмененииНаСервере();
	
КонецПроцедуры                          

&НаСервере
Процедура НаименованиеПриИзмененииНаСервере()

	СотрудникОбъект = РеквизитФормыВЗначение("Объект");	
	СотрудникОбъект.ЗаполнитьФИО(); 
	ЗначениеВРеквизитФормы(СотрудникОбъект,"Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ИмущественныйВычетКодВычетаОткрытие(Элемент, СтандартнаяОбработка)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ГруппаВычетаНДФЛ", ПолучитьИмущественнуюГруппуВычетовНаСервере());
	 
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", ПараметрыОтбора);
	 
	ОткрытьФорму("Справочник.инкВычетыНДФЛ.Форма.ФормаВыбора", ПараметрыФормы, Элементы.ИмущественныйВычетКодВычета);	
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументУдостоверяющийЛичностьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОписаниеВыбора = Новый ОписаниеОповещения("ОбработатьВыборВидыДокументовФизическихЛиц",ЭтаФорма);
	ОткрытьФорму("Справочник.инкВидыДокументовФизическихЛиц.Форма.ФормаВыбора",,ЭтотОбъект,ЭтотОбъект.УникальныйИдентификатор,,,ОписаниеВыбора);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОбработатьВыборВидыДокументовФизическихЛиц(РезультатЗакрытия,ДопПараметры) Экспорт

	Если Не ЗначениеЗаполнено(РезультатЗакрытия) Тогда
		Возврат;
	КонецЕсли; 
	
	Объект.ДокументУдостоверяющийЛичность = РезультатЗакрытия;

КонецПроцедуры	

&НаКлиенте
Процедура ИННПриИзменении(Элемент)     
	
	ИННПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ИННПриИзмененииНаСервере()

	инкКадровыйУчетСервер.ОбработатьОтображениеПоляИНН(Объект.ИНН,Элементы.ИНН,ЭтаФорма);

КонецПроцедуры   

&НаКлиенте
Процедура СНИЛСПриИзменении(Элемент)   

	СНИЛСПриИзмененииНаСервере();

КонецПроцедуры

&НаСервере
Процедура СНИЛСПриИзмененииНаСервере()

	инкКадровыйУчетСервер.ОбработатьОтображениеПоляСНИЛС(Объект.СНИЛС,Элементы.СНИЛС,ЭтаФорма);

КонецПроцедуры   
#КонецОбласти

#Область ОбработчикиКомандФормы
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьИмущественнуюГруппуВычетовНаСервере()
	
	Возврат Перечисления.инкГруппыВычетовПоНДФЛ.Имущественные;	
	
КонецФункции

#Область о //Отчеты:

&НаКлиенте
Процедура КадровыеДокументыСотрудника(Команда)
	
	УсловияОтбора = новый Структура();
	УсловияОтбора.Вставить("Сотрудник",Объект.Ссылка);
	ПараметрыФормы = Новый Структура("Отбор", УсловияОтбора);
    
    ОткрытьФорму("ЖурналДокументов.инкКнигаКадровыхПриказов.ФормаСписка",ПараметрыФормы,ЭтаФорма,ЭтаФорма.УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

#КонецОбласти 

#Область о //Стандартные подсистемы:

// СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.НачатьИзменение(ЭтотОбъект, Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		
		ПараметрыОткрытия = Новый Структура;
		
		Отбор = Новый Структура("ИмяРеквизита", Элемент.Имя);
		Строки = ЭтотОбъект.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(Отбор);
		ДанныеСтроки = ?(Строки.Количество() = 0, Неопределено, Строки[0]);
		//Если ДанныеСтроки <> Неопределено Тогда
		//	ДобавитьСтрануВПараметрыОткрытия(ПараметрыОткрытия, ДанныеСтроки.Вид, Объект.СтранаРегистрации);
		//КонецЕсли;
		
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент,, СтандартнаяОбработка, ПараметрыОткрытия);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент,, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.НачатьОчистку(ЭтотОбъект, Элемент.Имя);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда.Имя);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Элемент.Имя, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.НачатьОбработкуНавигационнойСсылки(ЭтотОбъект, Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьОбновлениеКонтактнойИнформации(Результат, ДополнительныеПараметры) Экспорт
	ОбновитьКонтактнуюИнформацию(Результат);
КонецПроцедуры

// Конец СтандартныеПодсистемы.КонтактнаяИнформация

#КонецОбласти 

#Область о // Фото сотрудника:

&НаСервере
Процедура ОтобразитьФотоСотрудника()
	
	мФотоОтображение = ПолучитьХТМЛКодКартинки();		
	
КонецПроцедуры 

&НаСервере
Функция ПолучитьХТМЛКодКартинки() 
	
	ХТМЛКодКартинки = "";
	
	СправочникОбъект = РеквизитФормыВЗначение("Объект");
	ФотоСотрудникаХЗ = СправочникОбъект.ФотоСотрудника.Получить();
	Если ФотоСотрудникаХЗ <> Неопределено Тогда
		
		КодКартинки = Base64Строка(ФотоСотрудникаХЗ);
		ХТМЛКодКартинки = "<!DOCTYPE html>
	                       |<html dir=""ltr"">
	                       |<head>
	                       |<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" />
	                       |<meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" />
	                       |<meta name=""format-detection"" content=""telephone=no"" />
	                       |<style type=""text/css"">
	                       |body{margin:0;padding:8px;}
	                       |p{line-height:1.15;margin:0;white-space:pre-wrap;}
	                       |ol,ul{margin-top:0;margin-bottom:0;}
	                       |img{border:none;}
	                       |li>p{display:inline;}
	                       |</style>
	                       |</head>
	                       |<body>
	                       |<br>
	                       |<p><img src=""imageXXX"" style=""border:none;""/></p>
	                       |<br>
	                       |</body>
	                       |</html>
	                       |'";
		
		ХТМЛКодКартинки	= СтрЗаменить(ХТМЛКодКартинки, 
		            " src=""imageXXX""", 
					" src=""data:image/png;base64, " 
					+ КодКартинки + """" 
					);                
		
	КонецЕсли;
				
	Возврат ХТМЛКодКартинки;			
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьФото(Команда)

	Оповещение = Новый ОписаниеОповещения("ЗагрузитьКартинкуЗавершение", ЭтотОбъект);
    НачатьПомещениеФайла(Оповещение, , , Истина, УникальныйИдентификатор);
	
КонецПроцедуры 

&НаКлиенте
Процедура ЗагрузитьКартинкуЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
    
    Если НЕ Результат Тогда
        Возврат;
    КонецЕсли;
    
    ФотоСотрудникаАдрес = Адрес;
    Модифицированность = Истина;
	ЭтотОбъект.Записать();
	ОтобразитьФотоСотрудника();
    
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФото(Команда)               
	
	ЭтотОбъект.ФотоСотрудникаАдрес = Неопределено;
	ЭтотОбъект.Записать();
	ОтобразитьФотоСотрудника();

КонецПроцедуры

#КонецОбласти

#Область о // Заполнение кадровых данных:

&НаСервере
Процедура ЗаполнитьКадровыеДанные()
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;	
	КонецЕсли;
	
	ЭтотОбъект.Прочитать();
    
	КадровыеДанныеСотрудника = инкКадровыйУчетСервер.ПолучитьКадровыеДанныеСотрудникаВСтруктуру(Объект.Ссылка,КонецМесяца(ТекущаяДата()));
	
	Для каждого ЭлементСтруктуры Из КадровыеДанныеСотрудника Цикл
		
		ИмяРеквизитаФормы = "кд"+ЭлементСтруктуры.Ключ;
		Если инкОбщийКлиентСервер.ЕстьСвойство(Элементы,ИмяРеквизитаФормы) Тогда
			ЭтаФорма[ИмяРеквизитаФормы] = ЭлементСтруктуры.Значение;	
		КонецЕсли;
				
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецОбласти



