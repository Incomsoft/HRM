
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

#Область о // Сформировать отчет:

// Функция - Получить сводную ведомость
//
// Параметры:
//  ПараметрыСтруктура	 - Структура	 - Данные для получения табличного документа;
// 
// Возвращаемое значение:
//  ТабличныйДокумент - Сводная ведомость;
//
Функция ПолучитьСводнуюВедомость(ПараметрыСтруктура) Экспорт

	СводнаяВедомость = Новый ТабличныйДокумент;
	СводнаяВедомостьМакет = ПолучитьМакет("СводнаяВедомостьМакет");

	ИсходныеДанные = ПолучитьИсходныеДанные(ПараметрыСтруктура);
	
	// Заголовок:
	ОтчетОбласть = СводнаяВедомостьМакет.ПолучитьОбласть("ОтчетЗаголовок");
	ЗаполнитьЗначенияСвойств(ОтчетОбласть.Параметры,ИсходныеДанные); 
	СводнаяВедомость.Вывести(ОтчетОбласть);
	
	// Таблица:
	//	Шапка:	
	ОтчетОбласть = СводнаяВедомостьМакет.ПолучитьОбласть("ТаблицаШапка");
	ЗаполнитьЗначенияСвойств(ОтчетОбласть.Параметры,ИсходныеДанные);
	СводнаяВедомость.Вывести(ОтчетОбласть);
	
	//	Табличная часть:
	НачисленияКоличество	= ИсходныеДанные.НачисленияТаблица.Количество();
	УдержанияКоличество 	= ИсходныеДанные.УдержанияТаблица.Количество();
	МаксимумСтрок = Макс(НачисленияКоличество,УдержанияКоличество);
	Для ИндексЧисло = 0 По МаксимумСтрок - 1 Цикл

		ОтчетОбласть = СводнаяВедомостьМакет.ПолучитьОбласть("ТаблицаСтрока");
		
		НачислениеСтрока = Неопределено;
		УдержаниеСтрока = Неопределено;
		Если ИндексЧисло <= (НачисленияКоличество - 1) Тогда
			НачислениеСтрока = ИсходныеДанные.НачисленияТаблица[ИндексЧисло];	
		КонецЕсли;      
		Если ИндексЧисло <= (УдержанияКоличество - 1) Тогда
			УдержаниеСтрока = ИсходныеДанные.УдержанияТаблица[ИндексЧисло];	
		КонецЕсли;      
		
		Если НачислениеСтрока <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ОтчетОбласть.Параметры,НачислениеСтрока);
		КонецЕсли;
		
		Если УдержаниеСтрока <> Неопределено Тогда
 			ЗаполнитьЗначенияСвойств(ОтчетОбласть.Параметры,УдержаниеСтрока);
 		КонецЕсли;

		СводнаяВедомость.Вывести(ОтчетОбласть);
		
	КонецЦикла; 
	
    //	Итоги:
	ОтчетОбласть = СводнаяВедомостьМакет.ПолучитьОбласть("ТаблицаИтог");
	ОтчетОбласть.Параметры.СуммаНачисления = ИсходныеДанные.НачисленияТаблица.Итог("СуммаНачисления");
	ОтчетОбласть.Параметры.СуммаУдержания  = ИсходныеДанные.УдержанияТаблица.Итог("СуммаУдержания");
	СводнаяВедомость.Вывести(ОтчетОбласть);
	
	// Начисления не входящие в ФОТ:
	Для каждого НачислениеСтрока Из ИсходныеДанные.НачисленияНеФОТТаблица Цикл
		
		ОтчетОбласть = СводнаяВедомостьМакет.ПолучитьОбласть("ТаблицаСтрока|СтолблецНачисление");
        ЗаполнитьЗначенияСвойств(ОтчетОбласть.Параметры,НачислениеСтрока);
		СводнаяВедомость.Вывести(ОтчетОбласть);	
		
	КонецЦикла;
	
	Если ИсходныеДанные.НачисленияНеФОТТаблица.Количество() > 0 Тогда
		ОтчетОбласть = СводнаяВедомостьМакет.ПолучитьОбласть("ТаблицаИтог|СтолблецНачисление");
		ОтчетОбласть.Параметры.СуммаНачисления = ИсходныеДанные.НачисленияНеФОТТаблица.Итог("СуммаНачисления");
		СводнаяВедомость.Вывести(ОтчетОбласть);
	КонецЕсли;
	
	// Подвал:
	ОтчетОбласть = СводнаяВедомостьМакет.ПолучитьОбласть("ОтчетПодвал");
	ОтчетОбласть.Параметры.СальдоНаНачалоПериода = ИсходныеДанные.СальдоВходящее;
	ОтчетОбласть.Параметры.СальдоНаКонецПериода = ИсходныеДанные.СальдоИсходящее;  
	ПодчеркиваниеСтрока = "______________________";
	Если ЗначениеЗаполнено(ИсходныеДанные.Организация.Бухгалтер) Тогда
		ОтчетОбласть.Параметры.ГлавныйБухгалтер = ИсходныеДанные.Организация.Бухгалтер.ФИОСокращенное;	
	Иначе
		ОтчетОбласть.Параметры.ГлавныйБухгалтер = ПодчеркиваниеСтрока;
	КонецЕсли;
	ОтчетОбласть.Параметры.Бухгалтер = ПодчеркиваниеСтрока;
	СводнаяВедомость.Вывести(ОтчетОбласть);
	
	//инкОтчетыСервер.УстановитьНастройкиМаштабаДокумента(СводнаяВедомость);
	СводнаяВедомость.АвтоМасштаб = Истина;
	
	Возврат СводнаяВедомость;
	
КонецФункции  

#КонецОбласти                 

#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область о // Исходные данные:

Функция ПолучитьИсходныеДанные(ПараметрыСтруктура)
	
	ИсходныеДанные = Новый Структура;    
	ИсходныеДанные.Вставить("Период",ПараметрыСтруктура.Период);	
	ИсходныеДанные.Вставить("ПараметрыОтчета","");
	
	Если инкОбщийКлиентСервер.ЕстьСвойство(ПараметрыСтруктура,"Организация") Тогда
		ИсходныеДанные.Вставить("Организация",ПараметрыСтруктура.Организация);	
		ИсходныеДанные.ПараметрыОтчета = "Организация: "+ПараметрыСтруктура.Организация.Наименование+"; ";
	КонецЕсли;
	Если инкОбщийКлиентСервер.ЕстьСвойство(ПараметрыСтруктура,"Подразделения") Тогда
		ИсходныеДанные.Вставить("Подразделения",ПараметрыСтруктура.Подразделения);
		ИсходныеДанные.ПараметрыОтчета = ИсходныеДанные.ПараметрыОтчета
		                               + "Подразделения: "
									   + инкОтчетыСервер.ПолучитьМассивСтрокой(ПараметрыСтруктура.Подразделения); 
	КонецЕсли;
	Если инкОбщийКлиентСервер.ЕстьСвойство(ПараметрыСтруктура,"Сотрудники") Тогда
		ИсходныеДанные.Вставить("Сотрудники",ПараметрыСтруктура.Сотрудники);	
		ИсходныеДанные.ПараметрыОтчета = ИсходныеДанные.ПараметрыОтчета
		                               + "Сотрудники: "
									   + инкОтчетыСервер.ПолучитьМассивСтрокой(ПараметрыСтруктура.Сотрудники); 
	
	КонецЕсли;
	ИсходныеДанные.Вставить("ДатаОтчета",ТекущаяДата());

	ИсходныеДанные.Вставить("НалогТаблица",инкВедомостиСервер.ПолучитьДанныеПоНДФЛ(ИсходныеДанные));
	
	ИсходныеДанные.Вставить("НачисленияТаблица",ПолучитьНачисленияТаблица(ИсходныеДанные,Истина));
	ИсходныеДанные.Вставить("НачисленияНеФОТТаблица",ПолучитьНачисленияТаблица(ИсходныеДанные,Ложь));
	
	ИсходныеДанные.Вставить("УдержанияТаблица",ПолучитьУдержанияТаблица(ИсходныеДанные));
	ИсходныеДанные.Вставить("СальдоВходящееТаблица",инкВедомостиСервер.ПолучитьСальдоВходящееТаблица(ИсходныеДанные));
		
	ИсходныеДанные.Вставить("ВсегоНачислено",ИсходныеДанные.НачисленияТаблица.Итог("СуммаНачисления"));
	ИсходныеДанные.Вставить("ВсегоУдержано",ИсходныеДанные.УдержанияТаблица.Итог("СуммаУдержания"));
	
	ИсходныеДанные.Вставить("СальдоВходящее",ПолучитьСальдоВходящее(ИсходныеДанные));
	ИсходныеДанные.Вставить("СальдоИсходящее",ПолучитьСальдоИсходящее(ИсходныеДанные));
	
	Возврат ИсходныеДанные;
	
КонецФункции      

Функция ПолучитьСальдоВходящее(ИсходныеДанные)
	
	СальдоВходящее = ИсходныеДанные.СальдоВходящееТаблица.Итог("СальдоВходящее");    
	
	Возврат СальдоВходящее;
	
КонецФункции

Функция ПолучитьСальдоИсходящее(ИсходныеДанные)
	
	СальдоИсходящее = 0;    
	
	СальдоИсходящее = ИсходныеДанные.СальдоВходящее 
	                + ИсходныеДанные.ВсегоНачислено 
					- ИсходныеДанные.ВсегоУдержано;
	
	Возврат СальдоИсходящее;
	
КонецФункции

Функция ПолучитьУдержанияТаблица(ИсходныеДанные)

	УдержанияТаблица = инкВедомостиСервер.ПолучитьДанныеПоУдержаниям(ИсходныеДанные);	
	
	Для каждого УдержаниеСтрока Из УдержанияТаблица Цикл
		
		// Порядок: 
		УдержаниеСтрока.ПорядокОтображения = 100;
		Если УдержаниеСтрока.Удержание = ПланыВидовРасчета.инкУдержания.Аванс Тогда
			УдержаниеСтрока.ПорядокОтображения = 2;	
		КонецЕсли;
		
	КонецЦикла;
	
	// НДФЛ:                                        
	НДФЛСумма = 0;
	СтрокаТаблица = УдержанияТаблица.Добавить();
	СтрокаТаблица.Удержание			= ПланыВидовРасчета.инкУдержания.НДФЛ;
	СтрокаТаблица.УдержаниеКод  	= ПланыВидовРасчета.инкУдержания.НДФЛ.Код;
	СтрокаТаблица.СуммаУдержания	= ИсходныеДанные.НалогТаблица.Итог("СуммаНалога");
	СтрокаТаблица.ПорядокОтображения= 1;
	
	УдержанияТаблица.Свернуть("ПорядокОтображения,УдержаниеКод,Удержание","СуммаУдержания");
	УдержанияТаблица.Сортировать("ПорядокОтображения,УдержаниеКод");              
	
	Возврат УдержанияТаблица;
	
КонецФункции

Функция ПолучитьНачисленияТаблица(ИсходныеДанные,ВходитВФОТ)

	НачисленияТаблица = инкВедомостиСервер.ПолучитьДанныеПоНачислениям(ИсходныеДанные,Истина,ВходитВФОТ);	
	
	// Р/К:  
	РКСумма = НачисленияТаблица.Итог("РайонныйКоэффициент");
	Если РКСумма <> 0 Тогда
		НачислениеСтрока = НачисленияТаблица.Добавить();
		НачислениеСтрока.Начисление    = ПланыВидовРасчета.инкНачисления.РайонныйКоэффициент;
		НачислениеСтрока.НачислениеКод = ПланыВидовРасчета.инкНачисления.РайонныйКоэффициент.Код;
		НачислениеСтрока.СуммаНачисления = РКСумма; 
		НачислениеСтрока.ПорядокОтображения = Число(Прав(НачислениеСтрока.НачислениеКод,3));
	КонецЕсли;
	
	// С/Н:                            
	СНСумма = НачисленияТаблица.Итог("СевернаяНадбавка");
	Если СНСумма <> 0 Тогда
		НачислениеСтрока = НачисленияТаблица.Добавить();
		НачислениеСтрока.Начисление    = ПланыВидовРасчета.инкНачисления.СевернаяНадбавка;
		НачислениеСтрока.НачислениеКод = ПланыВидовРасчета.инкНачисления.СевернаяНадбавка.Код;
		НачислениеСтрока.СуммаНачисления = СНСумма;
		НачислениеСтрока.ПорядокОтображения = Число(Прав(НачислениеСтрока.НачислениеКод,3));
	КонецЕсли;
	
	// Объединение начислений:
	Для каждого НачислениеСтрока Из НачисленияТаблица Цикл
		
		Если НачислениеСтрока.НачислениеКод = "00019" Тогда
			НачислениеСтрока.Начисление = ПланыВидовРасчета.инкНачисления.ПособиеПоВремНетрудоспособностиЗаСчетРаботодателя;
			НачислениеСтрока.НачислениеКод = "10019";
		КонецЕсли;
		
	КонецЦикла;
	
	НачисленияТаблица.Свернуть("Начисление,НачислениеКод,ПорядокОтображения","СуммаНачисления,Дни,ДниФакт");
	НачисленияТаблица.Сортировать("ПорядокОтображения,НачислениеКод");
	
	Возврат НачисленияТаблица;
	
КонецФункции

#КонецОбласти                 

#КонецОбласти

#КонецЕсли

