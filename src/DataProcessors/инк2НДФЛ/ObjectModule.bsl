#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем Сотрудники Экспорт; // Сотрудники массив;

#КонецОбласти

#Область ПрограммныйИнтерфейс

#Область о // Печать расчетных листков

// Функция - Получить результат расчета
// 
// Возвращаемое значение:
//  ТабличныйДокумент - Справка 2-НДФЛ;
//
Функция ПолучитьРезультатРасчета() Экспорт
	
	ТабличныйДокумент = Получить2НДФЛНаСервере();
	Возврат ТабличныйДокумент; 
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область о // Загрузка данных в табличный документ

Функция Получить_ОблагаемыеДоходы(Сотрудники = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МЕСЯЦ(инкДоходыНДФЛОбороты.Период) КАК МесяцНалоговогоПериода,
		|	инкДоходыНДФЛОбороты.Сотрудник КАК Сотрудник,
		|	инкДоходыНДФЛОбороты.ДоходНДФЛ КАК КодДоходаСтрокой,
		|	инкДоходыНДФЛОбороты.ВычетНДФЛ КАК КодВычетаСтрокой,
		|	инкДоходыНДФЛОбороты.СуммаНачисленияОборот + инкДоходыНДФЛОбороты.РайонныйКоэффициентОборот + инкДоходыНДФЛОбороты.СевернаяНадбавкаОборот КАК СуммаДохода,
		|	инкДоходыНДФЛОбороты.СуммаВычетаОборот КАК СуммаВычета
		|ИЗ
		|	РегистрНакопления.инкНачисления.Обороты(
		|			&Дата1,
		|			&Дата2,
		|			Месяц,
		|			Сотрудник В (&Сотрудники)
		|				И Налог = ИСТИНА) КАК инкДоходыНДФЛОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	МесяцНалоговогоПериода,
		|	КодДоходаСтрокой,
		|	КодВычетаСтрокой";
	
	Если Не ЗначениеЗаполнено(Сотрудники) Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Сотрудник В (&Сотрудники)","Истина");
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Дата1", НачалоГода(ЭтотОбъект.Год));
	Запрос.УстановитьПараметр("Дата2", КонецГода(ЭтотОбъект.Год));
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	
	тз = Запрос.Выполнить().Выгрузить();
	тз.Индексы.Добавить("Сотрудник");
	
	Возврат тз;
	
КонецФункции

Функция Получить_СтандартныеВычеты(ВычетыТаблица)

	СтандартныеВычетыТаблица = ВычетыТаблица.Скопировать();
	СтандартныеВычетыТаблица.Очистить();
	
	Для каждого ВычетСтрока Из ВычетыТаблица Цикл
		
		Если ЗначениеЗаполнено(ВычетСтрока.ГруппаВычетаНДФЛ) Тогда        
			
			СтандартныеВычетыСтрока = СтандартныеВычетыТаблица.Добавить();
			ЗаполнитьЗначенияСвойств(СтандартныеВычетыСтрока,ВычетСтрока);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтандартныеВычетыТаблица;
	
КонецФункции

Функция Получить_ВычетыНДФЛ(Сотрудники)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкВычетыНДФЛОбороты.Сотрудник КАК Сотрудник,
		|	инкВычетыНДФЛОбороты.ГруппаВычетаНДФЛ КАК ГруппаВычетаНДФЛ,
		|	инкВычетыНДФЛОбороты.ВычетНДФЛ КАК ВычетНДФЛ,
		|	ПОДСТРОКА(инкВычетыНДФЛОбороты.ВычетНДФЛ.Код, 1, 3) КАК КодВычетаСтрокой,
		|	инкВычетыНДФЛОбороты.СуммаВычетаОборот КАК СуммаВычета
		|ИЗ
		|	РегистрНакопления.инкВычетыНДФЛ.Обороты(&Дата1, &Дата2, , Сотрудник В (&Сотрудники)) КАК инкВычетыНДФЛОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	КодВычетаСтрокой";
	
	Если Не ЗначениеЗаполнено(Сотрудники) Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Сотрудник В (&Сотрудники)","Истина");
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Дата1", НачалоГода(ЭтотОбъект.Год));
	Запрос.УстановитьПараметр("Дата2", КонецГода(ЭтотОбъект.Год));
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	
	тз = Запрос.Выполнить().Выгрузить();
	тз.Индексы.Добавить("Сотрудник");
	
	Возврат тз;
	
КонецФункции

Функция Получить_НалогУдержанный(Сотрудники)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкНалогУдержанныйОбороты.Сотрудник КАК Сотрудник,
		|	инкНалогУдержанныйОбороты.НалоговаяСтавка КАК НалоговаяСтавка,
		|	инкНалогУдержанныйОбороты.СуммаНалогаОборот КАК СуммаНалога
		|ИЗ
		|	РегистрНакопления.инкНалогУдержанный.Обороты(&Дата1, &Дата2, , Сотрудник В (&Сотрудники)) КАК инкНалогУдержанныйОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	НалоговаяСтавка";
	
	Если Не ЗначениеЗаполнено(Сотрудники) Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Сотрудник В (&Сотрудники)","Истина");
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Дата1", НачалоГода(ЭтотОбъект.Год));
	Запрос.УстановитьПараметр("Дата2", КонецГода(ЭтотОбъект.Год));
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	
	тз = Запрос.Выполнить().Выгрузить();
	тз.Индексы.Добавить("Сотрудник");
	
	Возврат тз;
	
КонецФункции

Процедура ЗаполнитьПолеВычета(ИндексВычеты,ВычетыКоличество,Вычет,ВычетыТаблица)
	
	Если ИндексВычеты > ВычетыКоличество Тогда
		Возврат;
	КонецЕсли;

	Если ЗначениеЗаполнено(ВычетыТаблица[ИндексВычеты].ГруппаВычетаНДФЛ) Тогда
		ЗаполнитьЗначенияСвойств(Вычет.Параметры,ВычетыТаблица[ИндексВычеты]);
	КонецЕсли;
		
	ИндексВычеты = ИндексВычеты+ 1;
	
КонецПроцедуры

Функция РассчитатьОбщиеСуммыДоходаИНалога(ОблагаемыеДоходы,Вычеты,НалогУдержанный,Процент = 0.13)
	
	СтруктураДоходаИНалога = Новый Структура;
	
	СтруктураДоходаИНалога.Вставить("ОбщаяСуммаДохода",0);
	СтруктураДоходаИНалога.Вставить("ОбщаяСуммаВычетов",0);
	СтруктураДоходаИНалога.Вставить("ОблагаемаяСуммаДохода",0);
	СтруктураДоходаИНалога.Вставить("Исчислено",0);
	СтруктураДоходаИНалога.Вставить("ЗачтеноАвансовыхПлатежей",0);
	
	СтруктураДоходаИНалога.Вставить("Удержано",0);
	СтруктураДоходаИНалога.Вставить("Перечислено",0);
	СтруктураДоходаИНалога.Вставить("ИзлишнеУдержано",0);
	СтруктураДоходаИНалога.Вставить("Задолженность",0);
	
	Для каждого ОблагаемыеДоходыСтрока из ОблагаемыеДоходы Цикл
		СтруктураДоходаИНалога.ОбщаяСуммаДохода  = СтруктураДоходаИНалога.ОбщаяСуммаДохода
		                                         + ОблагаемыеДоходыСтрока.СуммаДохода;
		//СтруктураДоходаИНалога.ОбщаяСуммаВычетов = СтруктураДоходаИНалога.ОбщаяСуммаВычетов
		//                                         + ОблагаемыеДоходыСтрока.СуммаВычета;
	КонецЦикла;
	
	Для каждого ВычетыСтрока из Вычеты Цикл
		СтруктураДоходаИНалога.ОбщаяСуммаВычетов = СтруктураДоходаИНалога.ОбщаяСуммаВычетов
		                                         + ВычетыСтрока.СуммаВычета;
	КонецЦикла;

	СтруктураДоходаИНалога.ОблагаемаяСуммаДохода = СтруктураДоходаИНалога.ОбщаяСуммаДохода
	                                             - СтруктураДоходаИНалога.ОбщаяСуммаВычетов; 
												 
	СтруктураДоходаИНалога.Исчислено = СтруктураДоходаИНалога.ОблагаемаяСуммаДохода * Процент; 
	СтруктураДоходаИНалога.Удержано  = СтруктураДоходаИНалога.Исчислено;
	СтруктураДоходаИНалога.Перечислено = СтруктураДоходаИНалога.Удержано * ЭтотОбъект.ПроцентУплаты / 100;
	
	Возврат СтруктураДоходаИНалога;
	
КонецФункции

Функция Получить2НДФЛНаСервере()
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.Год) Тогда
		ОбщегоНазначения.СообщитьПользователю("Не задан год.");
		Возврат Неопределено;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначения.СообщитьПользователю("Не задана организация.");
		Возврат Неопределено;
	КонецЕсли;
	
	ТабДок = Новый ТабличныйДокумент;
	//Макет = ПолучитьОбщийМакет("инкФорма2НДФЛс2019");
	Макет = ПолучитьОбщийМакет("инкФорма2НДФЛсо2кв2024");
	
	ОблагаемыеДоходыТаблица = Получить_ОблагаемыеДоходы(Сотрудники);
	ВычетыТаблица 			 = Получить_ВычетыНДФЛ(Сотрудники);   
	СтандартныеВычетыТаблица = Получить_СтандартныеВычеты(ВычетыТаблица);   
	
	НалогУдержанныйТаблица 	= Получить_НалогУдержанный(Сотрудники);
	
	Для каждого СотрудникСтрока из Сотрудники Цикл 
		
		ПоискСотрудника = Новый Структура("Сотрудник",СотрудникСтрока);
		ОблагаемыеДоходы 		= ОблагаемыеДоходыТаблица.НайтиСтроки(ПоискСотрудника);
		Вычеты			 		= ВычетыТаблица.НайтиСтроки(ПоискСотрудника);
		СтандартныеВычетыМассив = СтандартныеВычетыТаблица.НайтиСтроки(ПоискСотрудника);
		НалогУдержанный  = НалогУдержанныйТаблица.НайтиСтроки(ПоискСотрудника);
		
		Если ОблагаемыеДоходы.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;			
		
		ШапкаПервойСтраницы = Макет.ПолучитьОбласть("ШапкаПервойСтраницы");
		ШапкаПервойСтраницы.Параметры.НалоговыйПериод = Год(ЭтотОбъект.Год);
		ШапкаПервойСтраницы.Параметры.Дата = ТекущаяДата();
		
		// 1. Данные о налоговом агенте:
		ШапкаПервойСтраницы.Параметры.ОКТМО     = Организация.ОКТМО;
		ШапкаПервойСтраницы.Параметры.Телефон   = Справочники.инкОрганизации.ПолучитьКонтактныйТелефонОрганизации(Организация);
		ШапкаПервойСтраницы.Параметры.ИННорг    = Организация.ИНН;
		ШапкаПервойСтраницы.Параметры.КПП		= Организация.КПП;
		ШапкаПервойСтраницы.Параметры.НазваниеОрганизации   = Организация.Наименование;
		ШапкаПервойСтраницы.Параметры.ФормаРеорганизации	= "";			
		ШапкаПервойСтраницы.Параметры.ИННРеорганизованнойОрганизации = "";
		ШапкаПервойСтраницы.Параметры.КППРеорганизованнойОрганизации = "";
		
		// 2. Данные о физическом лице - получателе дохода
		ШапкаПервойСтраницы.Параметры.ИНН		= СотрудникСтрока.ИНН;
		ШапкаПервойСтраницы.Параметры.Фамилия   = СотрудникСтрока.Фамилия;
		ШапкаПервойСтраницы.Параметры.Имя       = СотрудникСтрока.Имя;
		ШапкаПервойСтраницы.Параметры.Отчество  = СотрудникСтрока.Отчество;
		// Исправить в будущем:
		ШапкаПервойСтраницы.Параметры.Статус    = "1";
		// ШапкаПервойСтраницы.Параметры.Статус    = СотрудникСтрока.СтатусРезидента;
		ШапкаПервойСтраницы.Параметры.ДатаРождения		= СотрудникСтрока.ДатаРождения;
		ШапкаПервойСтраницы.Параметры.Гражданство       = СотрудникСтрока.Гражданство;
		ШапкаПервойСтраницы.Параметры.КодУдЛичн         = СотрудникСтрока.ДокументУдостоверяющийЛичность.КодМВД;
		ШапкаПервойСтраницы.Параметры.СерияДокумента    = СотрудникСтрока.ДокументСерия;
		ШапкаПервойСтраницы.Параметры.НомерДокумента    = СотрудникСтрока.ДокументНомер;
		
		ТабДок.Вывести(ШапкаПервойСтраницы);

		// Доходы:
		ЗаголовокРаздела3 = Макет.ПолучитьОбласть("ЗаголовокРаздела3");
		ЗаголовокРаздела3.Параметры.Ставка = "13%"; 
		ТабДок.Вывести(ЗаголовокРаздела3);
		
		ОблагаемыеДоходыКоличество = ОблагаемыеДоходы.Количество()-1;
		
		Для ИндексЧисло = 1 по 20 Цикл
			
			Если (ИндексЧисло-1) > ОблагаемыеДоходыКоличество Тогда
				Прервать;
			КонецЕсли;
			
			СтрокаДоходовЛеваяЧасть = Макет.ПолучитьОбласть("СтрокаДоходов|ЛеваяЧасть");
			СтрокаДоходовПраваяЧасть = Макет.ПолучитьОбласть("СтрокаДоходов|ПраваяЧасть");

			ЛевыйИндекс = ИндексЧисло - 1;  
			Если ОблагаемыеДоходыКоличество >= ЛевыйИндекс Тогда 
				ЗаполнитьЗначенияСвойств(СтрокаДоходовЛеваяЧасть.Параметры,ОблагаемыеДоходы[ЛевыйИндекс]);
			КонецЕсли;
			
			ПравыйИндекс = ИндексЧисло + 20 - 1;
			Если ОблагаемыеДоходыКоличество >= ПравыйИндекс Тогда 
				ЗаполнитьЗначенияСвойств(СтрокаДоходовЛеваяЧасть.Параметры,ОблагаемыеДоходы[ПравыйИндекс]);
			КонецЕсли;
			
			ТабДок.Вывести(СтрокаДоходовЛеваяЧасть);
			ТабДок.Присоединить(СтрокаДоходовПраваяЧасть);
			
		КонецЦикла;
		
		// Вычеты:
		ЗаголовокРаздела4 = Макет.ПолучитьОбласть("ЗаголовокРаздела4");
		ТабДок.Вывести(ЗаголовокРаздела4);

		Если СтандартныеВычетыМассив.Количество() = 0 Тогда
			
			Вычет1 = Макет.ПолучитьОбласть("СтрокаВычетов|Вычеты1");
			Вычет2 = Макет.ПолучитьОбласть("СтрокаВычетов|Вычеты2");
			Вычет3 = Макет.ПолучитьОбласть("СтрокаВычетов|Вычеты3");
			Вычет4 = Макет.ПолучитьОбласть("СтрокаВычетов|Вычеты4");
			
			ТабДок.Вывести(Вычет1);
			ТабДок.Присоединить(Вычет2);
			ТабДок.Присоединить(Вычет3);
			ТабДок.Присоединить(Вычет4);
			
		Иначе	

			ВычетыКоличество = СтандартныеВычетыМассив.Количество()-1;
			ИндексВычеты     = 0;  

			Для ИндексСтрока = 1 по 5 Цикл
				
				Если ИндексВычеты > ВычетыКоличество Тогда
					Прервать;
				КонецЕсли;    
				
				Вычет1 = Макет.ПолучитьОбласть("СтрокаВычетов|Вычеты1");
				Вычет2 = Макет.ПолучитьОбласть("СтрокаВычетов|Вычеты2");
				Вычет3 = Макет.ПолучитьОбласть("СтрокаВычетов|Вычеты3");
				Вычет4 = Макет.ПолучитьОбласть("СтрокаВычетов|Вычеты4");
				
				ЗаполнитьПолеВычета(ИндексВычеты,ВычетыКоличество,Вычет1,СтандартныеВычетыМассив);
				ЗаполнитьПолеВычета(ИндексВычеты,ВычетыКоличество,Вычет2,СтандартныеВычетыМассив);
				ЗаполнитьПолеВычета(ИндексВычеты,ВычетыКоличество,Вычет3,СтандартныеВычетыМассив);
				ЗаполнитьПолеВычета(ИндексВычеты,ВычетыКоличество,Вычет4,СтандартныеВычетыМассив);
				
				ТабДок.Вывести(Вычет1);
				ТабДок.Присоединить(Вычет2);
				ТабДок.Присоединить(Вычет3);
				ТабДок.Присоединить(Вычет4);
				
			КонецЦикла;	
			
		КонецЕсли; 	
		
		// Общие суммы дохода и налога: 
		Раздел5 = Макет.ПолучитьОбласть("Раздел5");  
		
		ОбщиеСуммыДоходаИНалогаСтруктура = РассчитатьОбщиеСуммыДоходаИНалога(ОблагаемыеДоходы,Вычеты,НалогУдержанный);
		ЗаполнитьЗначенияСвойств(Раздел5.Параметры,ОбщиеСуммыДоходаИНалогаСтруктура);
		ТабДок.Вывести(Раздел5);
		
		// 
		НалоговыйАгент = Макет.ПолучитьОбласть("НалоговыйАгент");
		НалоговыйАгент.Параметры.ФИОПодписавшего = Организация.Наименование;
		ТабДок.Вывести(НалоговыйАгент);
		//
		Примечание = Макет.ПолучитьОбласть("Примечание");
		ТабДок.Вывести(Примечание);
		
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЦикла;

	Возврат ТабДок;
	
КонецФункции

#КонецОбласти 

#КонецОбласти

#КонецЕсли



