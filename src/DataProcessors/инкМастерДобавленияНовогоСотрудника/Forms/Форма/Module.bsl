
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	мТекущийРаздел = "ОсновныеДанные";
	ОтобразитьДанныеНаФорме(мТекущийРаздел); 
	ЗадатьЗначенияПоУмолчанию();
	
	// Отладка:
	//мФИО = "Сотрудник1"; 
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	мТекущийРаздел = ПолучитьСледующийРаздел(мТекущийРаздел);
	ОтобразитьДанныеНаФорме(мТекущийРаздел);
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	мТекущийРаздел = ПолучитьСледующийРаздел(мТекущийРаздел,-1);
	ОтобразитьДанныеНаФорме(мТекущийРаздел);

КонецПроцедуры    

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСотрудникаИКадровыеДанные(Команда)
	
	Если ПроверкаОбязательныхРеквизитов() Тогда
		
		ЗадатьВопросОСозданииСотрудника();		

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура мМестоЖительстваРегистрацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОтрытьФормуАдреснойИнформации("мМестоЖительстваРегистрация"); 

КонецПроцедуры   

&НаКлиенте
Процедура мМестоЖительстваФактическиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ОтрытьФормуАдреснойИнформации("мМестоЖительстваРегистрация");

КонецПроцедуры

&НаКлиенте
Процедура ОтрытьФормуАдреснойИнформации(ИмяРеквизитаФормы)

	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("РеквизитФормы",ИмяРеквизитаФормы);
	
	Оповещение = Новый ОписаниеОповещения("МестоЖительстваРегистрацияЗавершение", ЭтотОбъект, ДопПараметры);
	
	ПараметрыОткрытияФормы = ПолучитьПараметрыОткрытияАдреснойИнформации(ИмяРеквизитаФормы);
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Обработка.РасширенныйВводКонтактнойИнформации.Форма.ВводАдреса",ПараметрыОткрытияФормы,ЭтотОбъект,ЭтотОбъект.УникальныйИдентификатор,,,Оповещение);

КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыОткрытияАдреснойИнформации(ИмяРеквизитаФормы)
	
	ПараметрыОткрытияФормы = Новый Структура;

	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("ВидКонтактнойИнформации",Справочники.ВидыКонтактнойИнформации.МестоЖительстваРегистрация);
	ПараметрыОткрытияФормы.Вставить("ОткрытаПоСценарию",Истина);
	ПараметрыОткрытияФормы.Вставить("Представление",ЭтотОбъект[ИмяРеквизитаФормы]);

	Возврат ПараметрыОткрытияФормы;
	
КонецФункции

&НаКлиенте
Процедура МестоЖительстваРегистрацияЗавершение(Знач Результат, Знач ДопПараметры) Экспорт

	Если Результат <> Неопределено Тогда
		
		ЭтотОбъект[ДопПараметры.РеквизитФормы] = Результат.Представление; 

		Если НЕ ЗначениеЗаполнено(мМестоЖительстваФактически) Тогда
			мМестоЖительстваФактически = мМестоЖительстваРегистрация;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПереходНаСтраницу(ИмяРаздела)
	
	ПереходНаСтраницу = ЭтаФорма.Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Найти("Группа"+ИмяРаздела);
	Элементы.ГруппаСтраницы.ТекущаяСтраница = ПереходНаСтраницу;
	
КонецПроцедуры

&НаСервере
Функция ЗадатьЗначенияПоУмолчанию()
	
	мДатаПринятияНаРаботу = ТекущаяДата();
	мДокументУдостоверяющийЛичность = Справочники.инкВидыДокументовФизическихЛиц.ПаспортРФ;
	мОрганизация = Справочники.инкОрганизации.ПолучитьТекущуюОрганизацию();
	
КонецФункции

&НаКлиенте
Функция ПолучитьСледующийРаздел(мТекущийРаздел,Шаг = 1)
	
	Если Шаг > 0 Тогда
		
		Если мТекущийРаздел = "ОсновныеДанные" Тогда
			мТекущийРаздел = "Документы";	
		ИначеЕсли мТекущийРаздел = "Документы" Тогда
			мТекущийРаздел = "КонтактнаяИнформация";	
		ИначеЕсли мТекущийРаздел = "КонтактнаяИнформация" Тогда
			мТекущийРаздел = "КадровыеДанные";
		ИначеЕсли мТекущийРаздел = "КадровыеДанные" Тогда
			мТекущийРаздел = "СформированныеДокументыИСправочники";
		КонецЕсли;
		
	Иначе

		Если мТекущийРаздел = "СформированныеДокументыИСправочники" Тогда
			мТекущийРаздел = "КадровыеДанные";
		ИначеЕсли мТекущийРаздел = "КадровыеДанные" Тогда
			мТекущийРаздел = "КонтактнаяИнформация";
		ИначеЕсли мТекущийРаздел = "КонтактнаяИнформация" Тогда
			мТекущийРаздел = "Документы"; 
		ИначеЕсли мТекущийРаздел = "Документы" Тогда 	
		    мТекущийРаздел = "ОсновныеДанные";
		КонецЕсли;

	КонецЕсли;  
	
	Возврат мТекущийРаздел
	
КонецФункции

&НаСервере
Процедура ОтобразитьДанныеНаФорме(мТекущийРаздел)
	
	Элементы.Далее.Доступность = Ложь;
	Элементы.Назад.Доступность = Ложь;  
	Элементы.СоздатьСотрудникаИКадровыеДанные.Видимость = Ложь;
	Элементы.Закрыть.Видимость = Ложь;
	
	Элементы.Далее.Видимость = Истина;
	
	Если мТекущийРаздел = "ОсновныеДанные" Тогда
		Элементы.Далее.Доступность = Истина;
    ИначеЕсли мТекущийРаздел = "Документы" Тогда
		Элементы.Далее.Доступность = Истина;
		Элементы.Назад.Доступность = Истина;  
	ИначеЕсли мТекущийРаздел = "КонтактнаяИнформация" Тогда 	
		Элементы.Далее.Доступность = Истина;
		Элементы.Назад.Доступность = Истина;  
	ИначеЕсли мТекущийРаздел = "КадровыеДанные" Тогда	
		Элементы.СоздатьСотрудникаИКадровыеДанные.Видимость = Истина;               
		Элементы.Назад.Доступность = Истина;           
		Элементы.Далее.Видимость = Ложь;   
	ИначеЕсли мТекущийРаздел = "СформированныеДокументыИСправочники" Тогда		
		Элементы.Закрыть.Видимость = Истина;
		Элементы.Назад.Доступность = Истина;           
		Элементы.Далее.Видимость = Ложь;   
	КонецЕсли;  
	
	ПереходНаСтраницу(мТекущийРаздел);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗадатьВопросОСозданииСотрудника()
	
	ТекстВопроса = "Создать сотрудника и кадровые документы?";
	Оповещение = Новый ОписаниеОповещения("ЗадатьВопросОСозданииСотрудникаЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры  

&НаКлиенте
Процедура ЗадатьВопросОСозданииСотрудникаЗавершение(Знач Результат, Знач ДопПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда

		СотрудникСсылка = СоздатьСотрудникаИКадровыеДокументыНаСервере();
		Далее(Неопределено);
		ЗадатьВопросОбОткрытииКарточкиСотрудника(СотрудникСсылка); 
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверкаОбязательныхРеквизитов()

	ПроверкаРеквизитов = Истина;
	
	мФИО = СокрЛП(мФИО);
	Если НЕ ЗначениеЗаполнено(мФИО) Тогда
		
		ОбщегоНазначения.СообщитьПользователю("Внимание! ФИО сотрудника не задано. Операция прервана. ");
		ПроверкаРеквизитов = Ложь;    
		
		мТекущийРаздел = "ОсновныеДанные";
		ОтобразитьДанныеНаФорме(мТекущийРаздел);

	КонецЕсли;  
	
	Если НЕ ЗначениеЗаполнено(мОрганизация) Тогда
		
		ОбщегоНазначения.СообщитьПользователю("Внимание! Организация не заполнена. Операция прервана. ");
		ПроверкаРеквизитов = Ложь;    
		
		мТекущийРаздел = "КадровыеДанные";
		ОтобразитьДанныеНаФорме(мТекущийРаздел);
		
	КонецЕсли;
	
	Возврат ПроверкаРеквизитов;
	
КонецФункции

#Область о // Создание сотрудника и кадровых документов:

&НаСервере
Функция СоздатьСотрудникаИКадровыеДокументыНаСервере()
	
	СотрудникСсылка = Неопределено;
	Отказ = Ложь;
	
	Объект.СформированныеДокументыИСправочники.Очистить();
	
	НачатьТранзакцию();
	
	Попытка
		
		СотрудникСсылка = СоздатьСотрудника(Отказ);
		СоздатьКадровыеДокументы(СотрудникСсылка,Отказ);
		
	Исключение         
		
	    Отказ = Истина;
		
	КонецПопытки;
	
	Если Отказ Тогда
		ОтменитьТранзакцию();
		СотрудникСсылка = Неопределено;
	Иначе
		ЗафиксироватьТранзакцию();
	КонецЕсли;                     
	
	Возврат СотрудникСсылка;
	
КонецФункции 

&НаКлиенте
Процедура ЗадатьВопросОбОткрытииКарточкиСотрудника(СотрудникСсылка)
	
	Если СотрудникСсылка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("СотрудникСсылка",СотрудникСсылка);
	
	ТекстВопроса = "Сотрудник "+СотрудникСсылка
	             +" успешно создан. Открыть карточку сотрудника?";
	Оповещение = Новый ОписаниеОповещения("ЗадатьВопросОбОткрытииКарточкиСотрудникаЗавершение", ЭтотОбъект, ПараметрыОповещения);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры 

&НаКлиенте
Процедура ЗадатьВопросОбОткрытииКарточкиСотрудникаЗавершение(Знач Результат, Знач ДопПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ",ДопПараметры.СотрудникСсылка);
		ОткрытьФорму("Справочник.инкСотрудники.Форма.ФормаЭлемента",ПараметрыФормы,,,,,,РежимОткрытияОкнаФормы.Независимый);
		
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СоздатьСотрудника(Отказ)
	
	СотрудникСсылка = Справочники.инкСотрудники.НайтиСотрудникаПоФИО(мФИО);
	
	Если ЗначениеЗаполнено(СотрудникСсылка) Тогда
		СотрудникОбъект = СотрудникСсылка.ПолучитьОбъект();
	Иначе
		СотрудникОбъект = Справочники.инкСотрудники.СоздатьЭлемент();
	КонецЕсли;
	
	// Основные данные:
	СотрудникОбъект.Наименование = мФИО;
	СотрудникОбъект.ФИО = мФИО;
	СотрудникОбъект.ДатаРождения = мДатаРождения;
	СотрудникОбъект.Пол = мПол;
	СотрудникОбъект.ИНН = мИНН;
	СотрудникОбъект.СНИЛС = мСНИЛС;
	
	// Документы:
	СотрудникОбъект.ДокументВыдан = мДокументВыдан;
	СотрудникОбъект.ДокументДата = мДокументДата;
	СотрудникОбъект.ДокументКодПодразделения = мДокументКодПодразделения;
	СотрудникОбъект.ДокументНомер = мДокументНомер;
	СотрудникОбъект.ДокументСерия = мДокументСерия;
	СотрудникОбъект.ДокументУдостоверяющийЛичность = мДокументУдостоверяющийЛичность;
	
	// Контактная информация:
	ДобавитьКонтактнуюИнформацию("МестоЖительстваРегистрация",мМестоЖительстваРегистрация,СотрудникОбъект);
	ДобавитьКонтактнуюИнформацию("МестоЖительстваФактически",мМестоЖительстваФактически,СотрудникОбъект);
	ДобавитьКонтактнуюИнформацию("АдресЭлектроннойПочтыСотрудника",мЭлектроннаяПочта,СотрудникОбъект);
	ДобавитьКонтактнуюИнформацию("ТелефонСотрудника",мТелефон,СотрудникОбъект);
	//     
	
	Попытка
		СотрудникОбъект.Записать();
		ОбщегоНазначения.СообщитьПользователю("Создан сотрудник: "+СотрудникОбъект.Ссылка);
		СотрудникСсылка = СотрудникОбъект.Ссылка; 
		
		ДобавитьСформированныеДокументыИСправочники(СотрудникСсылка);
		
	Исключение
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Ошибка при создании сотрудника. Описание:"+ОписаниеОшибки());
	КонецПопытки;
	
	Возврат СотрудникСсылка;
	
КонецФункции    

&НаСервере
Процедура ДобавитьСформированныеДокументыИСправочники(ОбъектСсылка)

	СтрокаТаблицы = Объект.СформированныеДокументыИСправочники.Добавить();	
	СтрокаТаблицы.ОбъектСсылка = ОбъектСсылка;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьКонтактнуюИнформацию(ИмяЗначения,ДанныеЗначения,СотрудникОбъект)
	
	Если НЕ ЗначениеЗаполнено(ДанныеЗначения) Тогда
		Возврат;
	КонецЕсли;
	
	ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации[ИмяЗначения];
	НайтиАдреснуюИнформацию = Новый Структура("Вид",ВидКонтактнойИнформации);
	КонтактнаяИнформацияМассив = СотрудникОбъект.КонтактнаяИнформация.НайтиСтроки(НайтиАдреснуюИнформацию);
	
	КонтактнаяИнформацияСтрока = Неопределено;
	Для каждого КонтактнаяИнформацияЭлемент Из КонтактнаяИнформацияМассив Цикл
		КонтактнаяИнформацияСтрока = КонтактнаяИнформацияЭлемент;	
	КонецЦикла;                                                  
	
	Если КонтактнаяИнформацияСтрока = Неопределено Тогда
		
		КонтактнаяИнформацияСтрока = СотрудникОбъект.КонтактнаяИнформация.Добавить(); 
		КонтактнаяИнформацияСтрока.Вид = ВидКонтактнойИнформации;
		КонтактнаяИнформацияСтрока.Тип = ВидКонтактнойИнформации.Тип;
		КонтактнаяИнформацияСтрока.ДействуетС = Дата("20200101000000");

	КонецЕсли;

	КонтактнаяИнформацияСтрока.Представление = ДанныеЗначения; 

КонецПроцедуры

&НаСервере
Процедура СоздатьКадровыеДокументы(СотрудникСсылка,Отказ)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СотрудникСсылка) Тогда
		Возврат;
	КонецЕсли;                                
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкПриемНаРаботу.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.инкПриемНаРаботу КАК инкПриемНаРаботу
		|ГДЕ
		|	инкПриемНаРаботу.Сотрудник = &Сотрудник
		|	И НЕ инкПриемНаРаботу.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Сотрудник", СотрудникСсылка);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();

	Если РезультатЗапроса.Количество() > 0 Тогда
		ПриемНаРаботуОбъект = РезультатЗапроса[0].Ссылка.ПолучитьОбъект();
	Иначе
		ПриемНаРаботуОбъект = Документы.инкПриемНаРаботу.СоздатьДокумент();	
	КонецЕсли;
	
	ПриемНаРаботуОбъект.Дата = ТекущаяДата();
	ПриемНаРаботуОбъект.Сотрудник = СотрудникСсылка;
	ПриемНаРаботуОбъект.ДатаПриказа = мДатаПринятияНаРаботу;
	ПриемНаРаботуОбъект.Организация = мОрганизация;
	ПриемНаРаботуОбъект.Подразделение = мПодразделение;
	ПриемНаРаботуОбъект.Должность = мДолжность;
	ПриемНаРаботуОбъект.Оклад = мОклад;
	ПриемНаРаботуОбъект.РайонныйКоэффициент = мРайонныйКоэффициент;
	ПриемНаРаботуОбъект.СевернаяНадбавка = мСевернаяНадбавка;
	
	Попытка
		
		ПриемНаРаботуОбъект.Записать(РежимЗаписиДокумента.Проведение);
		ОбщегоНазначения.СообщитьПользователю("Создан кадровый документ: "+ПриемНаРаботуОбъект.Ссылка); 
		
		ДобавитьСформированныеДокументыИСправочники(ПриемНаРаботуОбъект.Ссылка);
		
	Исключение
		ОбщегоНазначения.СообщитьПользователю("Ошибка при создании документа ""Прием на работу"" Описание ошибки: "+ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	мТекущийРаздел = СтрЗаменить(ТекущаяСтраница.Имя,"Группа","");  
	ОтобразитьДанныеНаФорме(мТекущийРаздел);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

