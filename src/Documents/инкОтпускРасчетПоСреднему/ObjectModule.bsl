
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ЗаписьДвижений_инкРеестрОтпусков();
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ЗаполнитьДокументНаОснованииДанных(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ЭтотОбъект.ДокументОснование = ОбъектКопирования.Ссылка;
	
КонецПроцедуры

#Область о //Запись движений:

Процедура ЗаписьДвижений_инкРеестрОтпусков()
	
	Движения.инкРеестрОтпусков.Записывать = Истина;
	
	Движение = Движения.инкРеестрОтпусков.Добавить();
	ЗаполнитьЗначенияСвойств(Движение,ЭтотОбъект);
	Движение.Отпуск = ЭтотОбъект.Ссылка;
	Движение.ОтпускДатаНачала		= ЭтотОбъект.ПериодС;
	Движение.ОтпускДатаОкончания    = ЭтотОбъект.ПериодПО;
	Движение.КоличествоДней			= ЭтотОбъект.ОсновнойОтпускДни + ЭтотОбъект.ДополнительныйОтпускДни; 
	Движение.Сумма					= ЭтотОбъект.СуммаДокумента;		
	
КонецПроцедуры

#КонецОбласти	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьДокументНаОснованииДанных(ДанныеЗаполнения) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;	
	КонецЕсли;
	
	Организация 	= ДанныеЗаполнения.Организация;
	Подразделение 	= ДанныеЗаполнения.Подразделение;
	Сотрудник 		= ДанныеЗаполнения.Сотрудник;
	
	Если инкОбщийКлиентСервер.ЕстьСвойство(ДанныеЗаполнения,"МесяцНачисления") Тогда
		МесяцНачисления = ДанныеЗаполнения.МесяцНачисления;
	ИначеЕсли инкОбщийКлиентСервер.ЕстьСвойство(ДанныеЗаполнения,"ДатаПриказа") Тогда
		МесяцНачисления = ДанныеЗаполнения.ДатаПриказа;	
	КонецЕсли;

	Если инкОбщийКлиентСервер.ЕстьСвойство(ДанныеЗаполнения,"ПериодС") Тогда
    	ПериодС 		= ДанныеЗаполнения.ПериодС;
	КонецЕсли;
	Если инкОбщийКлиентСервер.ЕстьСвойство(ДанныеЗаполнения,"ПериодПО") Тогда
    	ПериодПО 		= ДанныеЗаполнения.ПериодПО;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.инкПриказНаОтпуск") Тогда
		
		ВидРасчета = Перечисления.инкВидРасчетаОтпуска.Отпуск;
		Если ЗначениеЗаполнено(ДанныеЗаполнения.ПериодПОДопОтпуск) Тогда
			ПериодПО = ДанныеЗаполнения.ПериодПОДопОтпуск;	
		КонецЕсли;             
		
		ОсновнойОтпускДни = ДанныеЗаполнения.КоличествоДнейОтпуска;
		ДополнительныйОтпускДни = ДанныеЗаполнения.КоличествоДнейДополнительногоОтпуска;	
		ДокументОснование = ДанныеЗаполнения;

	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.инкПриказВКомандировку") Тогда

		ВидРасчета = Перечисления.инкВидРасчетаОтпуска.ПоСреднему;
		ДокументОснование = ДанныеЗаполнения;
		
	КонецЕсли;  
	
	ВидРасчетаДниЧасы = Перечисления.инкВидРасчетаДниЧасы.ВДнях;

КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
