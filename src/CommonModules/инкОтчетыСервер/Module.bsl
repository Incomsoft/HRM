
#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс
		   
// Процедура - Вывести данные в табличном документе по буквенно
//
// Параметры:
//  Данные			 - Строка 	- Данные для вывода
//  Раздел			 - Область 	- Область документа;
//  ИмяПоказателя	 - Строка	- Имя показателя;
//  КоличествоЯчеек	 - Число	- Количество ячеек; 
//  НачальнаяЯчейка	 - Число	- Начальная ячейка;
//
Процедура ВывестиДанныеПоБуквенно(Данные, Раздел, ИмяПоказателя, КоличествоЯчеек, НачальнаяЯчейка = 1) Экспорт

	Для НомЯчейки = НачальнаяЯчейка По НачальнаяЯчейка + КоличествоЯчеек - 1 Цикл
		Раздел.Области[ИмяПоказателя + Формат(НомЯчейки,"ЧГ=0")].Текст = Сред(Данные, НомЯчейки - НачальнаяЯчейка + 1, 1);
	КонецЦикла;

КонецПроцедуры
		   
// Функция - Шаблон для заполнения даты ознакомления в отчете:
// 
// Возвращаемое значение:
//   - Строка;
//
Функция ПолучитьШаблонДляЗаполненияДатыОзнакомления() Экспорт

	Возврат """____"" ____________ " + Год(ТекущаяДата())+"г.";
	
КонецФункции			
			
// Процедура - Вывести данные в области
//
// Параметры:
//  НаименованиеОбласти	 - Строка - Наименование области
//  ЗначениеСтрока		 - Строка - Значение для вывода в макете 
//  ОбластьТаблицы		 - Область макета - Область таблицы
//  ЕдинаяЯчейка		 - Булево - Признак единой ячейки
//
Процедура ВывестиДанныеВОбласти(НаименованиеОбласти,ЗначениеСтрока,ОбластьТаблицы,ЕдинаяЯчейка = Ложь) Экспорт
	
	Если ЕдинаяЯчейка Тогда
		
		Обл = ОбластьТаблицы.Области.Найти(НаименованиеОбласти);

		Если Обл <> Неопределено Тогда
			Обл.Текст = ЗначениеСтрока;	
		КонецЕсли;
		
	Иначе
		
		ДлинаЗначения = СтрДлина(ЗначениеСтрока);
		Для Индекс = 1 По ДлинаЗначения Цикл
			
			Обл = ОбластьТаблицы.Области.Найти(НаименованиеОбласти+"_"+Индекс);
			Если Обл = Неопределено Тогда
				Обл = ОбластьТаблицы.Области.Найти(НаименованиеОбласти+Индекс);
			КонецЕсли;

			Если Обл = Неопределено Тогда
				Обл = ОбластьТаблицы.Области.Найти(НаименованиеОбласти);
			КонецЕсли;
			
			Если Обл <> Неопределено Тогда
				Обл.Текст = Сред(ЗначениеСтрока,Индекс,1);	
			КонецЕсли;
			
		КонецЦикла;  
		
	КонецЕсли;
	
КонецПроцедуры

// Функция - Получить подразделения строкой
//
// Параметры:
//  ДанныеЗначение	 - Массив или ссылка - Значение для формирования строки;
// 
// Возвращаемое значение:
//   - Строка - Строка для отчета с перечнем подразделений
//
Функция ПолучитьМассивСтрокой(ДанныеЗначение) Экспорт
	
	ЗначениеСтрока = "";
	
	Если ТипЗнч(ДанныеЗначение) = Тип("Массив") Тогда
		Для каждого ДанныеЭлемент Из ДанныеЗначение Цикл
			ЗначениеСтрока = ЗначениеСтрока + ДанныеЭлемент.Наименование + "; ";	
		КонецЦикла;
	Иначе                                            
		ЗначениеСтрока = ДанныеЗначение.Наименование;
	КонецЕсли;
	
	Возврат ЗначениеСтрока;

КонецФункции

// Процедура - Устанавливает маштаб документа при печати по-умолчкнию
//
// Параметры:
//  ТабДок	 - ТабличныйДокумент	 - Табличный документ для установки параметров
//
Процедура УстановитьНастройкиМаштабаДокумента(ТабДок) Экспорт
	
	//ТабДок.Автомасштаб = Истина;
	
	Если ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт Тогда
		
		ТабДок.ПолеСверху = 12;
		ТабДок.ПолеСнизу  = 2;
		ТабДок.ПолеСлева  = 2;
		ТабДок.ПолеСправа = 2;
		
		ТабДок.РазмерКолонтитулаСверху	= 12;
		ТабДок.РазмерКолонтитулаСнизу	= 2;
		
	Иначе
		
		ТабДок.ПолеСверху = 6;
		ТабДок.ПолеСнизу  = 2;
		ТабДок.ПолеСлева  = 12;
		ТабДок.ПолеСправа = 2;
		
		ТабДок.РазмерКолонтитулаСверху	= 6;
		ТабДок.РазмерКолонтитулаСнизу	= 2;
		
	КонецЕсли;	
	
КонецПроцедуры

// Функция - Преобразовать таблицу значений в табличный документ
//
// Параметры:
//  ТаблицаЗначений	 - ТаблицаЗначений - Таблица значений для передачи в табличный документ 
// 
// Возвращаемое значение:
//  ТабличныйДокумент - Табличный документ
//
Функция ПреобразоватьТаблицуЗначенийВТабличныйДокумент(ТаблицаЗначений) Экспорт 
	
	ТабДокумент = Новый ТабличныйДокумент;
	Построитель = Новый ПостроительОтчета;
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТаблицаЗначений);       
	Построитель.Вывести(ТабДокумент);
	
	Возврат ТабДокумент;
	
КонецФункции   

// Функция - Число прописью для отчетов
//
// Параметры:
//  СуммаЧисло	 - число - сумма для конвертации 
// 
// Возвращаемое значение:
//   - Строка - Число с рублями и копейками
//
Функция ЧислоПрописьюРублиКопейки(СуммаЧисло) Экспорт
	
	Возврат ЧислоПрописью(СуммаЧисло, "Л=ru_RU;ДП=Истина", "рубль,рубля,рублей,м,копейка,копейки,копеек,ж,2");
	
КонецФункции

// Функция - Получить параметры открытия формы ведомости
//
// Параметры:
//  ДополнительныеДанные - Структура - Доп. данные для получения данных отчета 
// 
// Возвращаемое значение:
//  Структура - Структура с адресом исходных данных
//
Функция ПолучитьПараметрыОткрытияФормыВедомости(ДополнительныеДанные = Неопределено) Экспорт
	
	ДанныеСтруктура = инкВедомостиСервер.ПолучитьСтруктуруДляВедомостиНачисленийУдержаний(ДополнительныеДанные);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("АдресПараметровВХранилище", инкОбщийСервер.АдресПараметровВХранилище(ДанныеСтруктура,Новый УникальныйИдентификатор));
	
	Возврат ПараметрыОткрытия;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий
// Код процедур и функций
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти

#Область Инициализация

#КонецОбласти
