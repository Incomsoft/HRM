
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ПустаяСтрока(Параметры.АдресПараметровВХранилище) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	ПараметрыРасчета = ПолучитьИзВременногоХранилища(Параметры.АдресПараметровВХранилище);
	
	мСотрудник = ПараметрыРасчета.Сотрудник;
	ЗагрузитьДанныеНаФормуИзРегистра(мСотрудник);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	СохранитьДанныеФормыВРегистр(мСотрудник);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	ПриЗакрытииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область о // Загрузка данных по начислениям и удержаниям:

&НаСервере
Процедура ЗагрузитьДанныеНаФормуИзРегистра(СотрудникСсылка)
	
	Если Не ЗначениеЗаполнено(СотрудникСсылка) Тогда
		Возврат;
	КонецЕсли; 
	
	ПостоянныеНачисленияТаблица = ПолучитьПостоянныеНачисленияПоСотруднику(СотрудникСсылка);
	мНачисленияТаблица.Очистить();
	Для каждого СтрокаТаблицы Из ПостоянныеНачисленияТаблица Цикл
		
		НачисленияСтрока = мНачисленияТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(НачисленияСтрока,СтрокаТаблицы);
		НачисленияСтрока.Начисление = СтрокаТаблицы.Начисление;
		
	КонецЦикла; 
	
	ПостоянныеУдержанияТаблица	= ПолучитьПостоянныеУдержанияПоСотруднику(СотрудникСсылка);
	мУдержанияТаблица.Очистить();
	Для каждого СтрокаТаблицы Из ПостоянныеУдержанияТаблица Цикл
		
		УдержаниеСтрока = мУдержанияТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(УдержаниеСтрока,СтрокаТаблицы);
		УдержаниеСтрока.Удержание = СтрокаТаблицы.Удержание;
		
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПостоянныеНачисленияПоСотруднику(СотрудникСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкПостоянныеНачисления.Сотрудник КАК Сотрудник,
		|	инкПостоянныеНачисления.Начисление КАК Начисление,
		|	инкПостоянныеНачисления.Размер КАК Размер
		|ИЗ
		|	РегистрСведений.инкПостоянныеНачисления КАК инкПостоянныеНачисления
		|ГДЕ
		|	инкПостоянныеНачисления.Сотрудник = &СотрудникСсылка";
	
	Запрос.УстановитьПараметр("СотрудникСсылка", СотрудникСсылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервере
Функция ПолучитьПостоянныеУдержанияПоСотруднику(СотрудникСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкПостоянныеУдержания.Сотрудник КАК Сотрудник,
		|	инкПостоянныеУдержания.Удержание КАК Удержание,
		|	инкПостоянныеУдержания.Размер КАК Размер
		|ИЗ
		|	РегистрСведений.инкПостоянныеУдержания КАК инкПостоянныеУдержания
		|ГДЕ
		|	инкПостоянныеУдержания.Сотрудник = &СотрудникСсылка";
	
	Запрос.УстановитьПараметр("СотрудникСсылка", СотрудникСсылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти 

#Область о // Сохранение данных по начисленям и удержаниям

&НаСервере
Процедура СохранитьДанныеФормыВРегистр(СотрудникСсылка)
	
	МенеджерРегистра = РегистрыСведений.инкПостоянныеНачисления.СоздатьНаборЗаписей();
	МенеджерРегистра.Отбор.Сотрудник.Установить(СотрудникСсылка);
	Для каждого НачислениеСтрока Из мНачисленияТаблица Цикл
		Если ЗначениеЗаполнено(НачислениеСтрока.Начисление) И (НачислениеСтрока.Размер <> 0) Тогда
			ЗаписьРегистра = МенеджерРегистра.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьРегистра,НачислениеСтрока);
			ЗаписьРегистра.Начисление = НачислениеСтрока.Начисление;
			ЗаписьРегистра.Сотрудник = СотрудникСсылка;
		КонецЕсли; 
	КонецЦикла; 
	МенеджерРегистра.Записать(Истина);

	МенеджерРегистра = РегистрыСведений.инкПостоянныеУдержания.СоздатьНаборЗаписей();
	МенеджерРегистра.Отбор.Сотрудник.Установить(СотрудникСсылка);
	Для каждого УдержаниеСтрока Из мУдержанияТаблица Цикл
		Если ЗначениеЗаполнено(УдержаниеСтрока.Удержание) И (УдержаниеСтрока.Размер <> 0) Тогда
			ЗаписьРегистра = МенеджерРегистра.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьРегистра,УдержаниеСтрока);
			ЗаписьРегистра.Удержание = УдержаниеСтрока.Удержание;
			ЗаписьРегистра.Сотрудник = СотрудникСсылка;
		КонецЕсли; 
	КонецЦикла;	
	МенеджерРегистра.Записать(Истина);
	
КонецПроцедуры

#КонецОбласти 

#КонецОбласти
