////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы Инкомсофт: Зарплата и кадры 11.0.
//
/////////////////////////////////////////////////////////////////////////////

#Область о //Последовательность действий при добавлении нового обновления ИБ:

// * Добавить в менеджере объекта экспортную процедуру с именем ИмяПроцедуры_11_0_0_0;
// * В этом модуле в процедуре ПриДобавленииОбработчиковОбновления указать обработчик
// * В этом модуле в процедуре ПриДобавленииПодсистемы установить новый номер конфигурации
// *  В этом модуле в процедуре ПриПодготовкеМакетаОписанияОбновлений указать новый номер
// версии конфигурации;	
// * Поднять номер версии в свойствах конфигураци; 
// см. п. 1;
// * В общем макете ОписаниеИзмененийСистемы, добавить описание изменения с нужно версией;

#КонецОбласти

#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Получение сведений о библиотеке (или конфигурации).

// Заполняет основные сведения о библиотеке или основной конфигурации.
// Библиотека, имя которой имя совпадает с именем конфигурации в метаданных, определяется как основная конфигурация.
//
// Параметры:
//  Описание - Структура - сведения о библиотеке:
//
//   Имя                 - Строка - имя библиотеки, например, "СтандартныеПодсистемы".
//   Версия              - Строка - версия в формате из 4-х цифр, например, "2.1.3.1".
//
//   ТребуемыеПодсистемы - Массив - имена других библиотек (Строка), от которых зависит данная библиотека.
//                                  Обработчики обновления таких библотек должны быть вызваны ранее
//                                  обработчиков обновления данной библиотеки.
//                                  При циклических зависимостях или, напротив, отсутствии каких-либо зависимостей,
//                                  порядок вызова обработчиков обновления определяется порядком добавления модулей
//                                  в процедуре ПриДобавленииПодсистем общего модуля ПодсистемыКонфигурацииПереопределяемый.
//   РежимВыполненияОтложенныхОбработчиков - Строка - "Последовательно" - отложенные обработчики обновления выполняются
//                                    последовательно в интервале от номера версии информационной базы до номера
//                                    версии конфигурации включительно или "Параллельно" - отложенный обработчик после
//                                    обработки первой порции данных передает управление следующему обработчику, а после
//                                    выполнения последнего обработчика цикл повторяется заново.
//
Процедура ПриДобавленииПодсистемы(Описание) Экспорт
	
	Описание.Имя = "ИнкомсофтЗарплатаИКадры";
	Описание.Версия = "11.0.2.71";  
	Описание.ИдентификаторИнтернетПоддержки = "incomsoft_hrm";
	Описание.РежимВыполненияОтложенныхОбработчиков = "Последовательно";

	Описание.ТребуемыеПодсистемы.Добавить("СтандартныеПодсистемы");

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики обновления информационной базы.

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
// Параметры:
//  Обработчики - ТаблицаЗначений - описание полей
//                                  см. в процедуре ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
// Шаблон: 
//	Обработчик = Обработчики.Добавить();
//	Обработчик.Версия = "<номер версии>";
//	Обработчик.Процедура = "<полное имя экспортной процедуры>";
//	Обработчик.НачальноеЗаполнение = {Истина|Ложь};
//	Обработчик.РежимВыполнения = {"Монопольно"|"Оперативно"|"Отложенно"};
//
// РежимВыполнения (Строка) – принимает одно из значений: "Монопольно", "Оперативно" и "Отложенно". 
// Если свойство не задано, то по умолчанию обработчик – монопольный.
//
// Монопольно – если обработчик обновления необходимо выполнять монопольно, в условиях отсутствия активных
// сеансов работы пользователей, 
// регламентных заданий, внешних соединений и подключений по веб-сервисам. В противном случае,
// обновление версии программы прерывается. 
// Подробнее см. Ограничения на использование монопольного режима обработчиков обновления
//
// Монопольные обработчики предназначены для обновления тех данных, обработка которых должна быть 
// обязательно завершена к моменту входа пользователей в программу. 
// Для сокращения времени простоя (ожидания обработки данных), рекомендуется большие объемы данных 
// обновлять отложенно (см. ниже).
// Примеры монопольных обработчиков: обработка небольшого объема данных текущего периода, активных позиций 
// номенклатуры и т.п.
//
// Если хотя бы один обработчик обновления конфигурации – монопольный, то все оперативные обработчики 
// (см. далее) выполняются в монопольном режиме.
//
// В случае если обработчик обновления – обязательный (свойство Версия = «*»), то значение Монопольно 
// следует устанавливать только в тех случаях, 
// когда обработчик обновления должен программно определить, требуется ли монопольный режим для его выполнения:
// Такой обработчик вызывается дважды, в него передается параметр Параметры типа Структура, в котором 
// имеется свойство МонопольныйРежим (Булево)
// При первом вызове в режиме проверки, свойство МонопольныйРежим содержит значение Ложь.
// Код обработчика не должен модифицировать данные ИБ
// Если в ходе выполнения обработчика возникает необходимость внесения изменений в ИБ, обработчик должен
// установить значение свойства в Истина 
// и прекратить свое выполнение
// При втором вызове в режиме выполнения свойство МонопольныйРежим содержит значение Истина
// Код обработчик может модифицировать данные ИБ
// Изменение значения свойства в этом случае игнорируется
//
// Оперативно – если обработчик обновления необходимо выполнять не монопольно: при активных сеансах работы 
// пользователей, регламентных заданий, 
// внешних соединений и подключений через веб-сервисы.
//
// Оперативные обработчики следует применять в редких случаях, когда важно сократить время ожидания 
// пользователей при переходе 
// на исправительные релизы, которые не содержат изменений в структуре данных, и обновление на которые 
// должно выполняться динамически.
//
// Подробнее см. Оперативное обновление данных.
// Отложенно – если обработчик обновления необходимо выполнять в фоне после того, как завершено выполнение 
// монопольных (оперативных) обработчиков,и пользователям уже разрешен вход в программу.
//
// Отложенные обработчики предназначены для обработки той части данных ИБ, которые не препятствуют 
// пользователям начинать свою работу с новой версией программы, не дожидаясь завершения обработки этих данных.
//
// Примеры отложенных обработчиков: обработка больших архивов данных за закрытые/прошлые периоды, 
// неактивных позиций номенклатуры, различных данных, отключенных в данный момент функциональными опциями и т.п.
//
// Подробнее см. Отложенное обновление данных.
//
// Если в конфигурации (библиотеке) используется параллельный режим отложенного обновления 
// (в процедуре ПриДобавленииПодсистемы свойство РежимВыполненияОтложенныхОбработчиков = "Параллельно"), 
// то для написания отложенных обработчиков следует руководствоваться стандартом 
// Параллельный режим отложенного обновления.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики./Добавить();
//  Обработчик.Версия              = "1.0.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_0_0_0";
//  Обработчик.РежимВыполнения     = "Монопольно";
// 
// Процедура - При добавлении обработчиков обновления
//
// Параметры:
//  Обработчики	 - Обработчики	 - Обработчики обновлений
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
	//	11.0.2.71:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.71";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_71";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       
	
	//	11.0.2.70:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.70";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_70";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       
	
	//	11.0.2.69:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.69";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_69";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       
	
	//	11.0.2.68:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.68";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_68";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       
	
	//	11.0.2.67:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.67";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_67";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       
	
	//	11.0.2.66:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.66";
	Обработчик.Процедура           = "Справочники.КлючевыеОперации.Обновление_11_0_2_66";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       
	
	//	11.0.2.64:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.64";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_64";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       
	
	//	11.0.2.62:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.62";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_62";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       
	
	//	11.0.2.61:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.61";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_61";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       
	
	//	11.0.2.59:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.59";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_59";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       

	//	11.0.2.51:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.51";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_51";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       

	//	11.0.2.50:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.50";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_50";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       

	//	11.0.2.49:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.49";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_49";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       

	//	11.0.2.46:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.46";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_46";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Ложь;       

	//	11.0.2.44:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.44";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_44";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Ложь;       

	//	11.0.2.43:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.43";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_43";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Ложь;       

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.43";
	Обработчик.Процедура           = "ПланыВидовРасчета.инкУдержания.Обновление_11_0_2_43";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       

	//	11.0.2.42:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.42";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_42";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Ложь;       

	//	11.0.2.41:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.41";
	Обработчик.Процедура           = "Справочники.ВидыКонтактнойИнформации.Обновление_11_0_2_41";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Ложь;       

	//	11.0.2.40:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.40";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_40";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Ложь;       

	//	11.0.2.39:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.39";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_39";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Ложь;       

	//	11.0.2.38:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.38";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_38";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Ложь;       

	//	11.0.2.37:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.37";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_37";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Ложь;       

	//	11.0.2.36:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.36";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_36";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       

	//	11.0.2.34:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.34";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_34";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       
	
	//	11.0.2.33:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.33";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_33";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       

	//	11.0.2.31:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.31";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_31";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Ложь;       

	//	11.0.2.29:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.29";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_29";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Ложь;       

	//	11.0.2.28:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.28";
	Обработчик.Процедура           = "Справочники.ВидыКонтактнойИнформации.Обновление_11_0_2_28";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Ложь;       

	//	11.0.2.25:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.25";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_25";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Ложь;       

	//	11.0.2.24:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.24";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_24";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Ложь;       

	//	11.0.2.22:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.22";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_22";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       

	//	11.0.2.20:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.20";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_20";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       

	//	11.0.2.19:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.19";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_19";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       

	//	11.0.2.17:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.17";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_17";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       

	//	11.0.2.16:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.16";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_16";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       

	//	11.0.2.15:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.15";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_15";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       

	//	11.0.2.14:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.14";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_14";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       

	
	//	11.0.2.13:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.13";
	Обработчик.Процедура           = "ПланыВидовРасчета.инкУдержания.ЗаполнитьКодыУдержаний_11_0_2_13";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       
	
	
	//	11.0.2.12:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.12";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_12";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Ложь;       

	//	11.0.2.11:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.11";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_11";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Ложь;       

	//	11.0.2.10:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.10";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_10";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       
	
	//	11.0.2.9:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.9";
	Обработчик.Процедура           = "инкОбновлениеИнформационнойБазыСервер.Обновление_11_0_2_9";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Ложь;       
	
	//	11.0.2.8:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.8";
	Обработчик.Процедура           = "Константы.инкБлокировкаПроведенияДокументовНачисленияЗарплатыЗаднимЧислом.Обновление_11_0_2_8";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;       
	
	//	11.0.2.7:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.7";
	Обработчик.Процедура           = "Документы.инкНачислениеЗарплаты.Обновление_11_0_2_7";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Ложь;       
	
	//	11.0.2.6:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.6";
	Обработчик.Процедура           = "Документы.инкНачислениеЗарплаты.Обновление_11_0_2_6";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Ложь;

	//	11.0.2.5:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.5";
	Обработчик.Процедура           = "ПланыВидовРасчета.инкНачисления.ЗаполнитьКодыНачислений_11_0_2_5";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;
	
	//	11.0.2.1:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.1";
	Обработчик.Процедура           = "Обработки.инкЗагрузкаДанныхПроизводственногоКалендаряИНормыВремени.ЗаполнитьПроизводсвенныйКалендарьИНормуВремени_11_0_2_1";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;
	
	// 	11.0.1.3:	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.1.3";
	Обработчик.Процедура           = "ПланыВидовРасчета.инкНачисления.ЗаполнитьКодыНачислений_11_0_1_3";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;

	// 	11.0.1.0:	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.1.0";
	Обработчик.Процедура           = "Константы.ЗаголовокСистемы.ЗаполнитьЗаголовокСистемы_11_0_1_0";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;
	
	// 	11.0.0.16 Исправление ошибки предыдущего обновления:	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.0.16";
	Обработчик.Процедура           = "ПланыВидовРасчета.инкНачисления.ЗаполнитьКодыНачислений_11_0_0_13";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;
	
	// 	11.0.0.13	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.0.13";
	Обработчик.Процедура           = "ПланыВидовРасчета.инкНачисления.ЗаполнитьКодыНачислений_11_0_0_13";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;

	// 	11.0.0.12	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.0.11";
	Обработчик.Процедура           = "ПланыВидовРасчета.инкНачисления.ЗаполнитьКодыНачислений_11_0_0_12";
	Обработчик.РежимВыполнения     = "Монопольно"; 
	Обработчик.НачальноеЗаполнение = Истина;
	
	// 	11.0.0.11	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.0.11";
	Обработчик.Процедура           = "ПланыВидовРасчета.инкНачисления.ЗаполнитьКодыНачислений_11_0_0_11";
	Обработчик.РежимВыполнения     = "Монопольно";  
	Обработчик.НачальноеЗаполнение = Истина;
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.0.11";
	Обработчик.Процедура           = "ПланыВидовРасчета.инкУдержания.ЗаполнитьКодыУдержаний_11_0_0_11";
	Обработчик.РежимВыполнения     = "Монопольно"; 
	Обработчик.НачальноеЗаполнение = Истина;
	
	// 	11.0.0.10	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.0.10";
	Обработчик.Процедура           = "ПланыВидовРасчета.инкНачисления.ЗаполнитьКодыНачислений_11_0_0_10";
	Обработчик.РежимВыполнения     = "Монопольно"; 
	Обработчик.НачальноеЗаполнение = Истина;

	// 	11.0.0.9	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.0.9";
	Обработчик.Процедура           = "Справочники.ВидыКонтактнойИнформации.ОбновлениеСправочника_11_0_0_9";
	Обработчик.РежимВыполнения     = "Монопольно"; 
	Обработчик.НачальноеЗаполнение = Истина;
	
	// 	11.0.0.8
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.0.8";
	Обработчик.Процедура           = "Справочники.ВидыКонтактнойИнформации.ОбновлениеСправочника_11_0_0_8";
	Обработчик.РежимВыполнения     = "Монопольно";  
	Обработчик.НачальноеЗаполнение = Истина;
	
	// 	11.0.0.7	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.0.7";
	Обработчик.Процедура           = "Справочники.ВидыКонтактнойИнформации.ОбновлениеСправочника_11_0_0_7";
	Обработчик.РежимВыполнения     = "Монопольно";  
	Обработчик.НачальноеЗаполнение = Истина;
	
	//	11.0.0.6:
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.0.6";
	Обработчик.Процедура           = "РегистрыСведений.инкОсобыеУсловияТруда.ПервоночальноеЗаполнение_11_0_0_6";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.0.6";
	Обработчик.Процедура           = "РегистрыСведений.инкКонфигурацияВыплатВФонды.ПервоночальноеЗаполнение_11_0_0_6";
	Обработчик.РежимВыполнения     = "Монопольно";
	Обработчик.НачальноеЗаполнение = Истина;

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.0.6";
	Обработчик.Процедура           = "Константы.инкФондТравматизма.ПервоночальноеЗаполнение_11_0_0_6";
	Обработчик.РежимВыполнения     = "Монопольно";  
	Обработчик.НачальноеЗаполнение = Истина;
	
	// 	11.0.0.3	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.0.3";
	Обработчик.Процедура           = "Справочники.инкВидыДокументовФизическихЛиц.ЗаполнитьВидыДокументов_11_0_0_3";
	Обработчик.РежимВыполнения     = "Монопольно"; 
	Обработчик.НачальноеЗаполнение = Истина;
    
    // 	11.0.0.2	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.0.2";
	Обработчик.Процедура           = "РегистрыСведений.инкСтандартныеВычетыНастройки.УстановитьНастройкиСтандартныхВычетов_11_0_0_2";
	Обработчик.РежимВыполнения     = "Монопольно"; 
	Обработчик.НачальноеЗаполнение = Истина;
    
    // 	11.0.0.1	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.0.1";
	Обработчик.Процедура           = "Справочники.инкВычетыНДФЛ.ЗаполнитьВычетыНДФЛ";
	Обработчик.РежимВыполнения     = "Монопольно";  
	Обработчик.НачальноеЗаполнение = Истина;

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.0.1";
	Обработчик.Процедура           = "Справочники.инкДоходНДФЛ.ЗаполнитьДоходыНДФЛ";
	Обработчик.РежимВыполнения     = "Монопольно";  
	Обработчик.НачальноеЗаполнение = Истина;

	// 	11.0.2.2	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.2";
	Обработчик.Процедура           = "ПланыВидовРасчета.инкНачисления.ЗаполнитьКодыНачислений_11_0_2_2";
	Обработчик.РежимВыполнения     = "Монопольно";  
	Обработчик.НачальноеЗаполнение = Истина;
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия              = "11.0.2.2";
	Обработчик.Процедура           = "ПланыВидовРасчета.инкУдержания.ЗаполнитьКодыУдержаний_11_0_2_2";
	Обработчик.РежимВыполнения     = "Монопольно"; 
	Обработчик.НачальноеЗаполнение = Истина;

КонецПроцедуры

// Вызывается при подготовке табличного документа с описанием изменений в программе.
//
// Параметры:
//   Макет - ТабличныйДокумент - описание обновления всех библиотек и конфигурации.
//           Макет можно дополнить или заменить.
//           См. также общий макет ОписаниеИзмененийСистемы.
//
Процедура ПриПодготовкеМакетаОписанияОбновлений(Макет) Экспорт
	
	НомераВерсийДляОтображенияМассив = Новый Массив;
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.71");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.70");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.69");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.68");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.67");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.66");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.65");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.64");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.63");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.62");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.61");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.60");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.59");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.58");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.57");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.56");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.55");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.54");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.52");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.51");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.50");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.49");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.48");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.47");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.46");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.45");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.44");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.43");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.42");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.41");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.40");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.39");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.38");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.37");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.36");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.35");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.34");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.33");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.32");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.31");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.30");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.27");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.26");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.24");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.22");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.20");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.19");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.17");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.16");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.14");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.13");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.12");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.11");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.10");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.9");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.8");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.7");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.5");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.4");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.3");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.2");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.2.1");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.1.3");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.1.2");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.1.1");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.1.0");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.0.16");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.0.13");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.0.12");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.0.11");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.0.10");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.0.9");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.0.8");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.0.7");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.0.6");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.0.5");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.0.4");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.0.3");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.0.2");
	НомераВерсийДляОтображенияМассив.Добавить("11.0.0.1");
	
	Макет = ДокументОписаниеОбновлений(НомераВерсийДляОтображенияМассив);
	
КонецПроцедуры

// Формирует табличный документ с описанием изменений в версиях,
// которые соответствуют переданному списку версий Разделы.
//
Функция ДокументОписаниеОбновлений(Знач Разделы) 
	
	ДокументОписаниеОбновлений = Новый ТабличныйДокумент();
	Если Разделы.Количество() = 0 Тогда
		Возврат ДокументОписаниеОбновлений;
	КонецЕсли;
	
	МакетОписаниеОбновлений = Метаданные.ОбщиеМакеты.Найти("инкОписаниеИзмененийСистемы");
	Если МакетОписаниеОбновлений <> Неопределено Тогда
		МакетОписаниеОбновлений = ПолучитьОбщийМакет(МакетОписаниеОбновлений);
	Иначе
		Возврат Новый ТабличныйДокумент();
	КонецЕсли;
	
	Для Каждого Версия Из Разделы Цикл
		
		ВывестиОписаниеИзменений(Версия, ДокументОписаниеОбновлений, МакетОписаниеОбновлений);
		
	КонецЦикла;
	
	Возврат ДокументОписаниеОбновлений;
	
КонецФункции

// Вызывается перед процедурами-обработчиками обновления данных ИБ.
//
Процедура ПередОбновлениемИнформационнойБазы() Экспорт
 
КонецПроцедуры

// Вызывается после завершения обновления данных ИБ.
//
// Параметры:
//   ПредыдущаяВерсия       - Строка - версия до обновления. "0.0.0.0" для "пустой" ИБ.
//   ТекущаяВерсия          - Строка - версия после обновления.
//   ВыполненныеОбработчики - ДеревоЗначений - список выполненных процедур-обработчиков обновления,
//                                             сгруппированных по номеру версии.
//   ВыводитьОписаниеОбновлений - Булево - (возвращаемое значение) если установить Истина,
//                                то будет вывена форма с описанием обновлений. По умолчанию, Истина.
//   МонопольныйРежим           - Булево - Истина, если обновление выполнялось в монопольном режиме.
//
Процедура ПослеОбновленияИнформационнойБазы(Знач ПредыдущаяВерсия, Знач ТекущаяВерсия,
	
	Знач ВыполненныеОбработчики, ВыводитьОписаниеОбновлений, МонопольныйРежим) Экспорт
 
КонецПроцедуры

// Позволяет переопределить режим обновления данных информационной базы.
// Для использования в редких (нештатных) случаях перехода, не предусмотренных в
// стандартной процедуре определения режима обновления.
//
// Параметры:
//   РежимОбновленияДанных - Строка - в обработчике можно присвоить одно из значений:
//              "НачальноеЗаполнение"     - если это первый запуск пустой базы (области данных);
//              "ОбновлениеВерсии"        - если выполняется первый запуск после обновление конфигурации базы данных;
//              "ПереходСДругойПрограммы" - если выполняется первый запуск после обновление конфигурации базы данных,
//                                          в которой изменилось имя основной конфигурации.
//
//   СтандартнаяОбработка  - Булево - если присвоить Ложь, то стандартная процедура
//                                    определения режима обновления не выполняется,
//                                    а используется значение РежимОбновленияДанных.
//
Процедура ПриОпределенииРежимаОбновленияДанных(РежимОбновленияДанных, СтандартнаяОбработка) Экспорт
 
КонецПроцедуры

// Добавляет в список процедуры-обработчики перехода с другой программы (с другим именем конфигурации).
// Например, для перехода между разными, но родственными конфигурациями: базовая -> проф -> корп.
// Вызывается перед началом обновления данных ИБ.
//
// Параметры:
//  Обработчики - ТаблицаЗначений - с колонками:
//    * ПредыдущееИмяКонфигурации - Строка - имя конфигурации, с которой выполняется переход;
//                                           или "*", если нужно выполнять при переходе с любой конфигурации.
//    * Процедура                 - Строка - полное имя процедуры-обработчика перехода с программы ПредыдущееИмяКонфигурации.
//                                  Например, "ОбновлениеИнформационнойБазыУПП.ЗаполнитьУчетнуюПолитику"
//                                  Обязательно должна быть экспортной.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.ПредыдущееИмяКонфигурации  = "УправлениеТорговлей";
//  Обработчик.Процедура                  = "ОбновлениеИнформационнойБазыУПП.ЗаполнитьУчетнуюПолитику";
//     

// Процедура - При добавлении обработчиков перехода с другой программы
//
// Параметры:
//  Обработчики	 - ТаблицаЗначений	 - Таблица значений. см. описание выше
//
Процедура ПриДобавленииОбработчиковПереходаСДругойПрограммы(Обработчики) Экспорт
 
КонецПроцедуры

// Вызывается после выполнения всех процедур-обработчиков перехода с другой программы (с другим именем конфигурации),
// и до начала выполнения обновления данных ИБ.
//
// Параметры:
//  ПредыдущееИмяКонфигурации    - Строка - имя конфигурации до перехода.
//  ПредыдущаяВерсияКонфигурации - Строка - имя предыдущей конфигурации (до перехода).
//  Параметры                    - Структура -
//    * ВыполнитьОбновлениеСВерсии   - Булево - по умолчанию Истина. Если установить Ложь,
//        то будут выполнена только обязательные обработчики обновления (с версией "*").
//    * ВерсияКонфигурации           - Строка - номер версии после перехода.
//        По умолчанию, равен значению версии конфигурации в свойствах метаданных.
//        Для того чтобы выполнить, например, все обработчики обновления с версии ПредыдущаяВерсияКонфигурации,
//        следует установить значение параметра в ПредыдущаяВерсияКонфигурации.
//        Для того чтобы выполнить вообще все обработчики обновления, установить значение "0.0.0.1".
//    * ОчиститьСведенияОПредыдущейКонфигурации - Булево - по умолчанию Истина.
//        Для случаев когда предыдущая конфигурация совпадает по имени с подсистемой текущей конфигурации, следует указать Ложь.
//

// Процедура - При завершении перехода с другой программы
//
// Параметры:
//  ПредыдущееИмяКонфигурации	 - Строка	 - см. описание выше
//  ПредыдущаяВерсияКонфигурации - Строка	 - см. описание выше
//  Параметры					 - Структура - см. описание выше
//
Процедура ПриЗавершенииПереходаСДругойПрограммы(Знач ПредыдущееИмяКонфигурации,
	
	Знач ПредыдущаяВерсияКонфигурации, Параметры) Экспорт
 
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Заполнение пустой ИБ

////////////////////////////////////////////////////////////////////////////////
// Обновление ИБ

// Вывести описания изменений в указанной версии.
//
// Параметры:
//  НомерВерсии  - Строка - номер версии, для которого выводится описание из макета
//                          табличного документа МакетОписаниеОбновлений в табличный документ.
//                          ДокументОписаниеОбновлений.
//

// Процедура - Вывести описание изменений
//
// Параметры:
//  НомерВерсии					 - Строка 	- Номер версии конфигурации
//  ДокументОписаниеОбновлений	 - Документ	- Документ обновления
//  МакетОписаниеОбновлений		 - Макет	- Макет описания
//
Процедура ВывестиОписаниеИзменений(Знач НомерВерсии, ДокументОписаниеОбновлений, МакетОписаниеОбновлений)
	
	Номер = СтрЗаменить(НомерВерсии, ".", "_");
	
	Если МакетОписаниеОбновлений.Области.Найти("Шапка" + Номер) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОписаниеОбновлений.Вывести(МакетОписаниеОбновлений.ПолучитьОбласть("Шапка" + Номер));
	ДокументОписаниеОбновлений.НачатьГруппуСтрок("Версия" + Номер);
	ДокументОписаниеОбновлений.Вывести(МакетОписаниеОбновлений.ПолучитьОбласть("Версия" + Номер));
	ДокументОписаниеОбновлений.ЗакончитьГруппуСтрок();
	ДокументОписаниеОбновлений.Вывести(МакетОписаниеОбновлений.ПолучитьОбласть("Отступ"));
	
КонецПроцедуры

#КонецОбласти

