#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем Организация Экспорт;		// Ссылка - Ссылка на справочник "Организации";
Перем Подразделение Экспорт;	// Ссылка - Ссылка на справочник "Подразделение";
Перем Сотрудники Экспорт; 		// Массив - Массив из справочников "Сотрудники";
Перем Дата1 Экспорт;			// Дата	- Дата1 (начало периода);
Перем Дата2 Экспорт;			// Дата - Дата2 (конец периода);

#КонецОбласти

#Область ПрограммныйИнтерфейс

#Область о // Инициализация:

// Процедура - Инициализация
//
Процедура Инициализация() Экспорт

	Организация = Неопределено;
	Подразделение = Неопределено;
	Сотрудники = Неопределено;        
	Дата1 = Неопределено;
	Дата2 = Неопределено;

КонецПроцедуры

#КонецОбласти  

#Область о // Сформировать табличные документы:

// Функция - Сформировать табличные документы
// 
// Возвращаемое значение:
//   - Структура - Табличные документы;
//
Функция СформироватьТабличныеДокументы() Экспорт 
	
	ИсходныеДанные = ПолучитьИсходныеДанные();
	
	ТабличныеДокументы = Новый Структура;
	ТабличныеДокументы.Вставить("ОтчетАУСНИнформацияДляФНС");
	
	ТабличныеДокументы.ОтчетАУСНИнформацияДляФНС = ПолучитьОтчетАУСНИнформацияДляФНС(ИсходныеДанные);
	
	Возврат ТабличныеДокументы;
	
КонецФункции    

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область о // Исходные данные:

Функция ПолучитьИсходныеДанные()
	
	ИсходныеДанные = Новый Структура;

	ИсходныеДанные.Вставить("Дата1",Дата1);
	ИсходныеДанные.Вставить("Дата2",Дата2);

	ИсходныеДанные.Вставить("Сотрудники",Сотрудники);
	ИсходныеДанные.Вставить("СотрудникиТаблица",инкКадровыйУчетСервер.ПолучитьКадровыеДанныеСотрудников(ИсходныеДанные,Ложь));
	ИсходныеДанные.Вставить("НачисленияТаблица",ПолучитьНачисленияТаблица(ИсходныеДанные));
	ИсходныеДанные.Вставить("ВычетыТаблица",ПолучитьВычетыТаблица(ИсходныеДанные));
	
	Возврат ИсходныеДанные;
	
КонецФункции            

Функция ПолучитьВычетыТаблица(ИсходныеДанные)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкВычетыНДФЛОбороты.Период КАК Период,
		|	инкВычетыНДФЛОбороты.Сотрудник КАК Сотрудник,
		|	инкВычетыНДФЛОбороты.ВычетНДФЛ КАК ВычетНДФЛ,
		|	инкВычетыНДФЛОбороты.СуммаВычетаОборот КАК СуммаВычетаОборот
		|ИЗ
		|	РегистрНакопления.инкВычетыНДФЛ.Обороты(&Дата1, &Дата2, Месяц, ) КАК инкВычетыНДФЛОбороты";
	
	Запрос.УстановитьПараметр("Дата1", ИсходныеДанные.Дата1);
	Запрос.УстановитьПараметр("Дата2", ИсходныеДанные.Дата2);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса;
	
КонецФункции

Функция ПолучитьНачисленияТаблица(ИсходныеДанные)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкНачисленияОбороты.Сотрудник КАК Сотрудник,
		|	инкНачисленияОбороты.Период КАК Период,
		|	инкНачисленияОбороты.Начисление.ДоходНДФЛ КАК ДоходНДФЛ,
		|	инкНачисленияОбороты.Начисление.ДоходНДФЛ.Код КАК КодВыплаты,
		|	ВЫБОР
		|		КОГДА инкНачисленияОбороты.Сотрудник.Инвалид
		|			ТОГДА ""Инвалид""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК СведенияОВычетах,
		|	ВЫБОР
		|		КОГДА инкНачисленияОбороты.Ст9ФЗ212
		|				ИЛИ инкНачисленияОбороты.МатериальнаяПомощь
		|			ТОГДА инкНачисленияОбороты.Начисление
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ВидВыплатыВычет,
		|	СУММА(инкНачисленияОбороты.СуммаНачисленияОборот + инкНачисленияОбороты.РайонныйКоэффициентОборот + инкНачисленияОбороты.СевернаяНадбавкаОборот) КАК СуммаВыплаты,
		|	СУММА(инкНачисленияОбороты.СуммаВычетаОборот) КАК ВыплатаВычетСумма
		|ИЗ
		|	РегистрНакопления.инкНачисления.Обороты(&Дата1, &Дата2, Месяц, Сотрудник В (&СотрудникиМассив)) КАК инкНачисленияОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	инкНачисленияОбороты.Сотрудник,
		|	инкНачисленияОбороты.Период,
		|	инкНачисленияОбороты.Начисление.ДоходНДФЛ,
		|	ВЫБОР
		|		КОГДА инкНачисленияОбороты.Ст9ФЗ212
		|				ИЛИ инкНачисленияОбороты.МатериальнаяПомощь
		|			ТОГДА инкНачисленияОбороты.Начисление
		|		ИНАЧЕ """"
		|	КОНЕЦ,
		|	инкНачисленияОбороты.Начисление.ДоходНДФЛ.Код,
		|	ВЫБОР
		|		КОГДА инкНачисленияОбороты.Сотрудник.Инвалид
		|			ТОГДА ""Инвалид""
		|		ИНАЧЕ """"
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
	
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Дата2", Дата2);
	Запрос.УстановитьПараметр("СотрудникиМассив", ИсходныеДанные.Сотрудники);
	
	НачисленияТаблица = Запрос.Выполнить().Выгрузить();
	
	Возврат НачисленияТаблица;
	
КонецФункции

#КонецОбласти                

#Область о // Отчет по остатку отпусков: 

Функция ПолучитьОтчетАУСНИнформацияДляФНС(ИсходныеДанные)

	АУСНТабличныйДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("МакетАУСН"); 
	
	Для каждого СотрудникСтрока Из ИсходныеДанные.СотрудникиТаблица Цикл
		
		ВывестиСведенияОРаботнике(СотрудникСтрока,Макет,АУСНТабличныйДокумент);
		ВывестиСведенияОДоходахИВычетах(СотрудникСтрока,ИсходныеДанные,Макет,АУСНТабличныйДокумент);
		
		ОбластьОтчет = Макет.ПолучитьОбласть("ТаблицаОтступ");
		АУСНТабличныйДокумент.Вывести(ОбластьОтчет);  
		
		//АУСНТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЦикла;
	
	Возврат АУСНТабличныйДокумент;	
	
КонецФункции        

Процедура ВывестиСведенияОРаботнике(СотрудникСтрока,Макет,АУСНТабличныйДокумент)
	
	ОбластьОтчет = Макет.ПолучитьОбласть("СведенияОРаботникахШапка");
	АУСНТабличныйДокумент.Вывести(ОбластьОтчет);  

	ОбластьОтчет = Макет.ПолучитьОбласть("СведенияОРаботникахСтрока");
	ЗаполнитьЗначенияСвойств(ОбластьОтчет.Параметры,СотрудникСтрока); 
	ОбластьОтчет.Параметры.ДокументСерияНомер = СотрудникСтрока.ДокументСерия
	                                          + " "
											  + СотрудникСтрока.ДокументНомер;
	АУСНТабличныйДокумент.Вывести(ОбластьОтчет);  

	ОбластьОтчет = Макет.ПолучитьОбласть("ТаблицаОтступ");
	АУСНТабличныйДокумент.Вывести(ОбластьОтчет);  
	
КонецПроцедуры

Процедура ВывестиСведенияОДоходахИВычетах(СотрудникСтрока,ИсходныеДанные,Макет,АУСНТабличныйДокумент)
	
	СтрокаПоиск = Новый	Структура;
	СтрокаПоиск.Вставить("Сотрудник",СотрудникСтрока.Сотрудник);

	НачисленияМассив = ИсходныеДанные.НачисленияТаблица.НайтиСтроки(СтрокаПоиск);

	Если НачисленияМассив.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	

	ОбластьОтчет = Макет.ПолучитьОбласть("СведенияОДаходахШапка");
	АУСНТабличныйДокумент.Вывести(ОбластьОтчет);  
	
	Для каждого НачисленияСтрока Из НачисленияМассив Цикл
		
		ОбластьОтчет = Макет.ПолучитьОбласть("СведенияОДаходахСтрока");
		ЗаполнитьЗначенияСвойств(ОбластьОтчет.Параметры,НачисленияСтрока);    
		
		// Стандартные вычеты:
		ВычетыСтруктура = ПолучитьВычетыСтруктура(СотрудникСтрока,НачисленияСтрока,ИсходныеДанные);   
		Если ЗначениеЗаполнено(ВычетыСтруктура) Тогда
			ЗаполнитьЗначенияСвойств(ОбластьОтчет.Параметры,ВычетыСтруктура);	
		КонецЕсли;                 
		
		// Выплаты, не подлежащие обложению страховыми взносами:
		Если ЗначениеЗаполнено(НачисленияСтрока.ВидВыплатыВычет) Тогда
			ОбластьОтчет.Параметры.ВидВыплатыВычет = НачисленияСтрока.ВидВыплатыВычет;	  
			ОбластьОтчет.Параметры.КодВыплатыВычет = НачисленияСтрока.КодВыплаты;	  
			Если ОбластьОтчет.Параметры.ВыплатаВычетСумма = 0 Тогда
				ОбластьОтчет.Параметры.ВыплатаВычетСумма = НачисленияСтрока.СуммаВыплаты;	
			КонецЕсли;
		КонецЕсли;
		
		АУСНТабличныйДокумент.Вывести(ОбластьОтчет);  
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьВычетыСтруктура(СотрудникСтрока,НачисленияСтрока,ИсходныеДанные)
	
	Если НачисленияСтрока.КодВыплаты <> "2000" Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВычетыСтруктура = Новый Структура;
	ВычетыСтруктура.Вставить("ВычетКод","");
	ВычетыСтруктура.Вставить("ВычетСумма",0);
						
    ВычетПоиск = Новый Структура;
	ВычетПоиск.Вставить("Период",НачисленияСтрока.Период);
	ВычетПоиск.Вставить("Сотрудник",СотрудникСтрока.Сотрудник);
	
	ВычетыМассив = ИсходныеДанные.ВычетыТаблица.НайтиСтроки(ВычетПоиск);
	
	Для каждого ВычетыЭлемент Из ВычетыМассив Цикл
		ВычетыСтруктура.ВычетКод 	= ВычетыЭлемент.ВычетНДФЛ;
		ВычетыСтруктура.ВычетСумма	= ВычетыСтруктура.ВычетСумма + ВычетыЭлемент.СуммаВычетаОборот;
	КонецЦикла;
	
	Возврат ВычетыСтруктура;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли

