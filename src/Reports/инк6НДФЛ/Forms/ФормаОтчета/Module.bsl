#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если инкОбщийКлиентСервер.ЕстьСвойство(Параметры,"ДокументСсылка") Тогда
		мДокумент = Параметры.ДокументСсылка;
	Иначе
		//мДокумент = Документы.инк6НДФЛ.НайтиПоНомеру("000000001");
		Возврат;
	КонецЕсли;
    
КонецПроцедуры  

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Сформировать(Неопределено);
	
КонецПроцедуры  

&НаСервере
Процедура ЗаполнитьФормуНачальнымиДаннымиНаСервере(ДокументСсылка)
	
	МенеджерПечати = РеквизитФормыВЗначение("Отчет");
	ТабличныеДокументы = МенеджерПечати.СформироватьТабличныеДокументы(ДокументСсылка);
	
	мТаблицаТитульный.Вывести(ТабличныеДокументы.ТитулТаблица);
	мТаблицаРаздел1.Вывести(ТабличныеДокументы.Раздел1Таблица);
	мТаблицаРаздел2.Вывести(ТабличныеДокументы.Раздел2Таблица);
	
	УстановитьОриентациюСтраницы(мТаблицаТитульный);
	УстановитьОриентациюСтраницы(мТаблицаРаздел1);
	УстановитьОриентациюСтраницы(мТаблицаРаздел2);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОриентациюСтраницы(ТабДок)
	 
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	инкОтчетыСервер.УстановитьНастройкиМаштабаДокумента(ТабДок);
	ТабДок.Автомасштаб = Истина;
 		
КонецПроцедуры  

&НаКлиенте
Процедура Сформировать(Команда)
	
	Если ЗначениеЗаполнено(мДокумент) Тогда
		ЗаполнитьФормуНачальнымиДаннымиНаСервере(мДокумент);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти


