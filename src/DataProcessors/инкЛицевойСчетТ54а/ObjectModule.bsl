#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем Организация Экспорт;		// Ссылка - Организация;
Перем Подразделение Экспорт;	// Ссылка - Подразделение;
Перем Сотрудники Экспорт;		// Массив - Сотрудники массив;
Перем Дата1 Экспорт; 			// Дата - Дата1;
Перем Дата2 Экспорт;			// Дата - Дата2;

#КонецОбласти

#Область ПрограммныйИнтерфейс

#Область о // Инициализация:

// Процедура - Инициализация
//
Процедура Инициализация() Экспорт

	Организация = Неопределено;
	Подразделение = Неопределено;
	Сотрудники = Неопределено;        
	Дата1 = Неопределено;
	Дата2 = Неопределено;

КонецПроцедуры

#КонецОбласти  

#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


#Область о // Исходные данные:

Функция ПолучитьИсходныеДанные()
	
	ИсходныеДанные = Новый Структура;

	ИсходныеДанные.Вставить("Дата1",Дата1);
	ИсходныеДанные.Вставить("Дата2",Дата2);

	ИсходныеДанные.Вставить("Сотрудники",Сотрудники);
	ИсходныеДанные.Вставить("СотрудникиТаблица",инкКадровыйУчетСервер.ПолучитьКадровыеДанныеСотрудников(ИсходныеДанные,Ложь));
	ИсходныеДанные.Вставить("ВычетыТаблица",ПолучитьВычетыСотрудников(ИсходныеДанные));
	ИсходныеДанные.Вставить("КадровыеИзмененияТаблица",ПолучитьКадровыеИзмененияТаблица(ИсходныеДанные));
	ИсходныеДанные.Вставить("ОтпускаТаблица",ПолучитьОтпускаТаблица(ИсходныеДанные));
	ИсходныеДанные.Вставить("УдержанияТаблица",ПолучитьУдержанияТаблица(ИсходныеДанные));
	

	ИсходныеДанные.Вставить("РуководительДанные",Справочники.инкОрганизации.КадровыеДанныеРуководителя(Организация));
	ИсходныеДанные.Вставить("БухгалтерДанные", Справочники.инкОрганизации.КадровыеДанныеБухгалтера(Организация));  
	
	Возврат ИсходныеДанные;
	
КонецФункции    

Функция ПолучитьУдержанияТаблица(ИсходныеДанные)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкУдержанияОбороты.Сотрудник КАК Сотрудник,
		|	инкУдержанияОбороты.Удержание КАК Удержание,
		|	инкУдержанияОбороты.СуммаУдержанияОборот КАК СуммаУдержания,
		|	инкУдержанияОбороты.ПроцентОтБазыОборот КАК Процент
		|ИЗ
		|	РегистрНакопления.инкУдержания.Обороты(
		|			&Дата1,
		|			&Дата2,
		|			,
		|			Удержание В (&Удержания)
		|				И Сотрудник В (&Сотрудники)) КАК инкУдержанияОбороты";
	
	УдержанияМассив = Новый Массив;
	УдержанияМассив.Добавить(ПланыВидовРасчета.инкУдержания.ИсполнительныйЛист);
	УдержанияМассив.Добавить(ПланыВидовРасчета.инкУдержания.Алименты);
	УдержанияМассив.Добавить(ПланыВидовРасчета.инкУдержания.ДобровольныеВзносы);
	
	Запрос.УстановитьПараметр("Удержания", УдержанияМассив);
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Дата2", Дата2);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса;	
	
КонецФункции

Функция ПолучитьОтпускаТаблица(ИсходныеДанные)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкПриказНаОтпуск.ВидОтпуска КАК ВидЕжегодногоОтпуска,
		|	инкПриказНаОтпуск.Дата КАК ПриказНаОтпускДата,
		|	инкПриказНаОтпуск.Номер КАК ПриказНаОтпускНомер,
		|	инкПриказНаОтпуск.ПериодСЗаРабочийГод КАК РабочийПериодС,
		|	инкПриказНаОтпуск.ПериодПОЗаРабочийГод КАК РабочийПериодПо,
		|	инкПриказНаОтпуск.КоличествоДнейОтпуска + инкПриказНаОтпуск.КоличествоДнейДополнительногоОтпуска КАК КоличествоДней,
		|	инкПриказНаОтпуск.ПериодС КАК ДатаНачала,
		|	инкПриказНаОтпуск.ПериодПО КАК ДатаОкончания,
		|	инкПриказНаОтпуск.ПериодСДопОтпуск КАК ПериодСДопОтпуск,
		|	инкПриказНаОтпуск.ПериодПОДопОтпуск КАК ПериодПОДопОтпуск,
		|	инкПриказНаОтпуск.Сотрудник КАК Сотрудник
		|ИЗ
		|	Документ.инкПриказНаОтпуск КАК инкПриказНаОтпуск
		|ГДЕ
		|	инкПриказНаОтпуск.Проведен
		|	И инкПриказНаОтпуск.Дата МЕЖДУ &Дата1 И &Дата2
		|	И инкПриказНаОтпуск.Сотрудник В (&Сотрудники)";

	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Дата2", Дата2);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса;
	
КонецФункции

Функция ПолучитьКадровыеИзмененияТаблица(ИсходныеДанные)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкКадроваяИсторияСотрудников.Сотрудник КАК Сотрудник,
		|	инкКадроваяИсторияСотрудников.Период КАК КадровыйПриказДата,
		|	инкКадроваяИсторияСотрудников.Регистратор.Номер КАК КадровыйПриказНомер,
		|	инкКадроваяИсторияСотрудников.Подразделение КАК Подразделение,
		|	инкКадроваяИсторияСотрудников.Должность КАК Должность,
		|	инкКадроваяИсторияСотрудников.Оклад КАК ТарифнаяСтавка,
		|	инкКадроваяИсторияСотрудников.Оклад * инкКадроваяИсторияСотрудников.РайонныйКоэффициент + инкКадроваяИсторияСотрудников.Оклад * инкКадроваяИсторияСотрудников.СевернаяНадбавка КАК Надбавка
		|ИЗ
		|	РегистрСведений.инкКадроваяИсторияСотрудников КАК инкКадроваяИсторияСотрудников
		|ГДЕ
		|	инкКадроваяИсторияСотрудников.Период <= &Дата2
		|	И инкКадроваяИсторияСотрудников.Сотрудник В(&Сотрудники)
		|
		|УПОРЯДОЧИТЬ ПО
		|	КадровыйПриказДата,
		|	КадровыйПриказНомер";
	
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Дата2", Дата2);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса;
	
КонецФункции

Функция ПолучитьВычетыСотрудников(ИсходныеДанные)
	
	Запрос = Новый Запрос;
	// +++ Чесноков М.С. 2023-04-07 *№ 0000095
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	инкВычетыНДФЛОбороты.Сотрудник КАК Сотрудник,
	//	|	инкВычетыНДФЛОбороты.ВычетНДФЛ КАК ВычетНДФЛ,
	//	|	инкВычетыНДФЛОбороты.СуммаВычетаОборот КАК СуммаВычета
	//	|ИЗ
	//	|	РегистрНакопления.инкВычетыНДФЛ.Обороты(&Дата1, &Дата2, , Сотрудник В (&Сотрудники)) КАК инкВычетыНДФЛОбороты";
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	инкСотрудникиНалоговыеВычеты.Ссылка КАК Сотрудник,
		|	инкСотрудникиНалоговыеВычеты.ВычетНДФЛ КАК ВычетНДФЛ,
		|	инкСотрудникиНалоговыеВычеты.ВычетНДФЛ.СуммаВычета КАК СуммаВычета
		|ИЗ
		|	Справочник.инкСотрудники.НалоговыеВычеты КАК инкСотрудникиНалоговыеВычеты
		|ГДЕ
		|	инкСотрудникиНалоговыеВычеты.Ссылка В(&Сотрудники)";
	// --- Чесноков М.С. 2023-04-07 *№ 0000095
	
	Запрос.УстановитьПараметр("Дата1", Дата1);
	Запрос.УстановитьПараметр("Дата2", Дата2);
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса;	
	
КонецФункции

#КонецОбласти                

#Область о // Сформировать табличные документы:

Функция СформироватьТабличныеДокументыТ54а() Экспорт 
	
	ИсходныеДанные = ПолучитьИсходныеДанные();
	
	ТабличныеДокументыТ54а = Новый Структура;
	ТабличныеДокументыТ54а.Вставить("ЛицевойСчет");
	ТабличныеДокументыТ54а.Вставить("УдержанияИВзносы");
	ТабличныеДокументыТ54а.Вставить("РасчетныеЛистки");
	
	ТабличныеДокументыТ54а.ЛицевойСчет = ПолучитьЛицевойСчетТ54а(ИсходныеДанные);
	ТабличныеДокументыТ54а.УдержанияИВзносы = ПолучитьУдержанияИВзносы(ИсходныеДанные);
	ТабличныеДокументыТ54а.РасчетныеЛистки = ПолучитьРасчетныеЛистки(ИсходныеДанные);
	
	Возврат ТабличныеДокументыТ54а;
	
КонецФункции     

Функция ПолучитьРасчетныеЛистки(ИсходныеДанные)
	
	МенеджерПечати = Обработки.инкРасчетныеЛисты.Создать();
	МенеджерПечати.Сотрудники = Сотрудники;
	МенеджерПечати.Дата1 = Дата1;
	МенеджерПечати.Дата2 = Дата2;
	ТабличныйДокумент = МенеджерПечати.ПолучитьРасчетныеЛистки();
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#Область о // Лицевой счет: 

Функция ПолучитьЛицевойСчетТ54а(ИсходныеДанные)

	ЛицевойСчетТ54а = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("ПФ_MXL_Т54а"); 
	
	Для каждого СотрудникЭлемент Из ИсходныеДанные.СотрудникиТаблица Цикл
		
		ЗаполнитьШапкуДокумента(СотрудникЭлемент,Макет,ЛицевойСчетТ54а,ИсходныеДанные);
		ЗаполнитьТабличнуюЧасть(СотрудникЭлемент.Сотрудник,Макет,ЛицевойСчетТ54а,ИсходныеДанные);
		ЗаполнитьПодвалДокумента(Макет,ЛицевойСчетТ54а,ИсходныеДанные);  
		
		ЛицевойСчетТ54а.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЦикла;
	
	Возврат ЛицевойСчетТ54а;	
	
КонецФункции        

Процедура ЗаполнитьШапкуДокумента(СотрудникЭлемент,Макет,ЛицевойСчетТ54а,ИсходныеДанные)
	
	ОбластьОтчет = Макет.ПолучитьОбласть("Шапка");
	ОбластьОтчет.Параметры.ОрганизацияНаименованиеПолное = Организация;
	ОбластьОтчет.Параметры.ОрганизацияКодПоОКПО	 = Организация.ОКПО;
	ОбластьОтчет.Параметры.ПодразделениеНаименование = Подразделение;    
	ОбластьОтчет.Параметры.СотрудникФИОПолные = СотрудникЭлемент.Сотрудник; 																
	ОбластьОтчет.Параметры.СотрудникТабельныйНомер = СотрудникЭлемент.ТабельныйНомер;
	ОбластьОтчет.Параметры.СотрудникДатаРождения = СотрудникЭлемент.ДатаРождения;
	ОбластьОтчет.Параметры.НачалоПериода = Дата1;
	ОбластьОтчет.Параметры.ОкончаниеПериода = Дата2;
	ОбластьОтчет.Параметры.СотрудникИНН = СотрудникЭлемент.ИНН;
	ОбластьОтчет.Параметры.СотрудникСНИЛС = СотрудникЭлемент.СНИЛС;
	ОбластьОтчет.Параметры.СотрудникСостояниеВБраке = "";
	ОбластьОтчет.Параметры.СотрудникКоличествоДетей = ПолучитьКоличествоДетейСотрудника(СотрудникЭлемент,ИсходныеДанные);
	ОбластьОтчет.Параметры.СотрудникДатаПриема = СотрудникЭлемент.ДатаПриемаНаРаботу;
	ОбластьОтчет.Параметры.СотрудникДатаУвольнения = СотрудникЭлемент.ДатаУвольнения;
	ЛицевойСчетТ54а.Вывести(ОбластьОтчет); 
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧасть(Сотрудник,Макет,ЛицевойСчетТ54а,ИсходныеДанные)
	
	ПоискСтруктура = Новый Структура;
	ПоискСтруктура.Вставить("Сотрудник",Сотрудник);
	
	КадровыеИзмененияМассив = ИсходныеДанные.КадровыеИзмененияТаблица.НайтиСтроки(ПоискСтруктура);
	ОтпускаМассив = ИсходныеДанные.ОтпускаТаблица.НайтиСтроки(ПоискСтруктура);     
	ВычетыМассив = ИсходныеДанные.ВычетыТаблица.НайтиСтроки(ПоискСтруктура);     
	                                                                               
	КадровыеИзмененияКоличество = КадровыеИзмененияМассив.Количество();
	ОтпускаКоличество = ОтпускаМассив.Количество();
	КоличествоСтрокЧисло = Макс(КадровыеИзмененияКоличество,ОтпускаКоличество);
	
	Если КоличествоСтрокЧисло = 0 Тогда
		ОбластьОтчет = Макет.ПолучитьОбласть("СтрокаКадровая");
		ЛицевойСчетТ54а.Вывести(ОбластьОтчет); 
	КонецЕсли;
	
	Для ИндексСтроки = 0 По КоличествоСтрокЧисло - 1 Цикл
		
		ОбластьОтчет = Макет.ПолучитьОбласть("СтрокаКадровая");

		КадровоеИзменениеСтрока = Неопределено;
		ОтпускСтрока = Неопределено;
		Если ИндексСтроки <= (КадровыеИзмененияКоличество - 1) Тогда
			КадровоеИзменениеСтрока = КадровыеИзмененияМассив[ИндексСтроки];
		КонецЕсли;
		Если ИндексСтроки <= (ОтпускаКоличество - 1) Тогда
			ОтпускСтрока = ОтпускаМассив[ИндексСтроки];
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КадровоеИзменениеСтрока) Тогда
	        ЗаполнитьЗначенияСвойств(ОбластьОтчет.Параметры,КадровоеИзменениеСтрока); 
		КонецЕсли;
		Если ЗначениеЗаполнено(ОтпускСтрока) Тогда
	        ЗаполнитьЗначенияСвойств(ОбластьОтчет.Параметры,ОтпускСтрока); 
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ОтпускСтрока) Тогда
			Если ЗначениеЗаполнено(ОтпускСтрока.ПериодПОДопОтпуск) Тогда
				ОбластьОтчет.Параметры.ДатаОкончания = ОтпускСтрока.ПериодПОДопОтпуск;		
			КонецЕсли;
		КонецЕсли;
		
		Если ИндексСтроки = 0 Тогда      
			
			ВычетСумма = 0;
			Для каждого ВычетЭлемент Из ВычетыМассив Цикл
				ВычетСумма = ВычетСумма + ВычетЭлемент.СуммаВычета;	
			КонецЦикла;
			
			ОбластьОтчет.Параметры.ОписаниеВычета = ВычетСумма;
		КонецЕсли;
		
		ЛицевойСчетТ54а.Вывести(ОбластьОтчет); 
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ЗаполнитьПодвалДокумента(Макет,ЛицевойСчетТ54а,ИсходныеДанные)
	
	ОбластьОтчет = Макет.ПолучитьОбласть("Подвал");
	ОбластьОтчет.Параметры.БухгалтерРасшифровкаПодписи = ИсходныеДанные.БухгалтерДанные.ФИОСокращенное;
	
	ЛицевойСчетТ54а.Вывести(ОбластьОтчет); 
	
КонецПроцедуры

Функция ПолучитьКоличествоДетейСотрудника(Сотрудник,ИсходныеДанные)
	
	КоличествоДетейЧисло = 0;
	
	ПоискСтруктура = Новый Структура;
	ПоискСтруктура.Вставить("Сотрудник",Сотрудник);
	ПоискСтруктура.Вставить("ВычетНДФЛ");
	
	ПоискСтруктура.ВычетНДФЛ = Справочники.инкВычетыНДФЛ.Код116;
	ВычетыМассив = ИсходныеДанные.ВычетыТаблица.НайтиСтроки(ПоискСтруктура);
	Если ВычетыМассив.Количество() > 0 Тогда
		КоличествоДетейЧисло = 3;
	Иначе
		ПоискСтруктура.ВычетНДФЛ = Справочники.инкВычетыНДФЛ.Код115;
		ВычетыМассив = ИсходныеДанные.ВычетыТаблица.НайтиСтроки(ПоискСтруктура);
		Если ВычетыМассив.Количество() > 0 Тогда
			КоличествоДетейЧисло = 2;
		Иначе
			ПоискСтруктура.ВычетНДФЛ = Справочники.инкВычетыНДФЛ.Код108;
			ВычетыМассив = ИсходныеДанные.ВычетыТаблица.НайтиСтроки(ПоискСтруктура);
			Если ВычетыМассив.Количество() > 0 Тогда
				КоличествоДетейЧисло = 1; 
			КонецЕсли;			
		КонецЕсли;
	КонецЕсли;
	
	Возврат КоличествоДетейЧисло;
		
КонецФункции

#КонецОбласти

#Область о // Удержания и взносы:

Функция ПолучитьУдержанияИВзносы(ИсходныеДанные)

	УдержанияИВзносы = Новый ТабличныйДокумент; 
	Макет = ПолучитьМакет("ПФ_MXL_Т54а"); 
	
	Для каждого СотрудникЭлемент Из Сотрудники Цикл
		
		ОбластьОтчет = Макет.ПолучитьОбласть("ШапкаУдержания");
		УдержанияИВзносы.Вывести(ОбластьОтчет); 
		
		ПоискСтруктура = Новый Структура;
		ПоискСтруктура.Вставить("Сотрудник",СотрудникЭлемент);
		УдержанияМассив = ИсходныеДанные.УдержанияТаблица.НайтиСтроки(ПоискСтруктура);
		
		УдержанияКоличество = УдержанияМассив.Количество();
		КоличествоСтрок = Окр(УдержанияКоличество / 2);
		
		Если КоличествоСтрок = 0 Тогда
			ОбластьОтчет = Макет.ПолучитьОбласть("СтрокаУдержания");
			УдержанияИВзносы.Вывести(ОбластьОтчет); 
		КонецЕсли; 	
			
		ТекущийНомер = 0;
		Для Индекс = 0 По КоличествоСтрок - 1 Цикл
			
			ОбластьОтчет = Макет.ПолучитьОбласть("СтрокаУдержания|Левая");
			Если ТекущийНомер <= (УдержанияКоличество - 1) Тогда
				ЗаполнитьСтрокуУдержанияИВзносы(УдержанияМассив[ТекущийНомер],ОбластьОтчет);
			КонецЕсли;			
			УдержанияИВзносы.Вывести(ОбластьОтчет); 
			ТекущийНомер = ТекущийНомер + 1;
			
			ОбластьОтчет = Макет.ПолучитьОбласть("СтрокаУдержания|Правая");
			Если ТекущийНомер <= (УдержанияКоличество - 1) Тогда
				ЗаполнитьСтрокуУдержанияИВзносы(УдержанияМассив[ТекущийНомер],ОбластьОтчет);
			КонецЕсли;			
			УдержанияИВзносы.Присоединить(ОбластьОтчет); 
			ТекущийНомер = ТекущийНомер + 1;
			
		КонецЦикла; 		
		
		УдержанияИВзносы.ВывестиГоризонтальныйРазделительСтраниц();

	КонецЦикла;

	Возврат УдержанияИВзносы;	

КонецФункции   

Процедура ЗаполнитьСтрокуУдержанияИВзносы(УдержанияСтрока,ОбластьОтчет);
	
	ЗаполнитьЗначенияСвойств(ОбластьОтчет.Параметры,УдержанияСтрока);
	ОбластьОтчет.Параметры.ДокументУдержания = УдержанияСтрока.Удержание;						
	Если УдержанияСтрока.Удержание = ПланыВидовРасчета.инкУдержания.ИсполнительныйЛист Тогда
		ОбластьОтчет.Параметры.СуммаУдержания = УдержанияСтрока.Процент;			
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли
